/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package yapily.sdk.models;

import lombok.Data;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets AuthorisationStatus
 */
public enum AuthorisationStatus {
  
  AWAITING_AUTHORIZATION("AWAITING_AUTHORIZATION"),
  
  AWAITING_FURTHER_AUTHORIZATION("AWAITING_FURTHER_AUTHORIZATION"),
  
  AWAITING_RE_AUTHORIZATION("AWAITING_RE_AUTHORIZATION"),
  
  AUTHORIZED("AUTHORIZED"),
  
  CONSUMED("CONSUMED"),
  
  REJECTED("REJECTED"),
  
  REVOKED("REVOKED"),
  
  FAILED("FAILED"),
  
  EXPIRED("EXPIRED"),
  
  UNKNOWN("UNKNOWN"),
  
  INVALID("INVALID"),
  
  AWAITING_DECOUPLED_PRE_AUTHORIZATION("AWAITING_DECOUPLED_PRE_AUTHORIZATION"),
  
  AWAITING_PRE_AUTHORIZATION("AWAITING_PRE_AUTHORIZATION"),
  
  PRE_AUTHORIZED("PRE_AUTHORIZED"),
  
  AWAITING_DECOUPLED_AUTHORIZATION("AWAITING_DECOUPLED_AUTHORIZATION"),
  
  AWAITING_SCA_METHOD("AWAITING_SCA_METHOD"),
  
  AWAITING_SCA_CODE("AWAITING_SCA_CODE");

  private String value;

  AuthorisationStatus(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static AuthorisationStatus fromValue(String value) {
    for (AuthorisationStatus b : AuthorisationStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

