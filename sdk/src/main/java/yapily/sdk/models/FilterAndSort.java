/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package yapily.sdk.models;

import lombok.Data;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import yapily.sdk.models.SortEnum;

/**
* FilterAndSort
*/
    @JsonPropertyOrder({
        FilterAndSort.JSON_PROPERTY_FROM,
        FilterAndSort.JSON_PROPERTY_BEFORE,
        FilterAndSort.JSON_PROPERTY_LIMIT,
        FilterAndSort.JSON_PROPERTY_SORT,
        FilterAndSort.JSON_PROPERTY_OFFSET,
        FilterAndSort.JSON_PROPERTY_CURSOR
    })
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-06T10:23:44.837Z[Etc/UTC]")
@lombok.Builder(toBuilder=true) 
@lombok.Data
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
public class FilterAndSort {
    public static final String JSON_PROPERTY_FROM = "from";
    @JsonProperty("from")
    private OffsetDateTime from;

    public static final String JSON_PROPERTY_BEFORE = "before";
    @JsonProperty("before")
    private OffsetDateTime before;

    public static final String JSON_PROPERTY_LIMIT = "limit";
    @JsonProperty("limit")
    private Integer limit;

    public static final String JSON_PROPERTY_SORT = "sort";
    @JsonProperty("sort")
    private SortEnum sort;

    public static final String JSON_PROPERTY_OFFSET = "offset";
    @JsonProperty("offset")
    private Integer offset;

    public static final String JSON_PROPERTY_CURSOR = "cursor";
    @JsonProperty("cursor")
    private String cursor;

}
