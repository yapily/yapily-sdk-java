/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package yapily.sdk.models;

import lombok.Data;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets AccountBalanceType
 */
public enum AccountBalanceType {
  
  CLOSING_AVAILABLE("CLOSING_AVAILABLE"),
  
  CLOSING_BOOKED("CLOSING_BOOKED"),
  
  CLOSING_CLEARED("CLOSING_CLEARED"),
  
  EXPECTED("EXPECTED"),
  
  FORWARD_AVAILABLE("FORWARD_AVAILABLE"),
  
  INFORMATION("INFORMATION"),
  
  INTERIM_AVAILABLE("INTERIM_AVAILABLE"),
  
  INTERIM_BOOKED("INTERIM_BOOKED"),
  
  INTERIM_CLEARED("INTERIM_CLEARED"),
  
  OPENING_AVAILABLE("OPENING_AVAILABLE"),
  
  OPENING_BOOKED("OPENING_BOOKED"),
  
  OPENING_CLEARED("OPENING_CLEARED"),
  
  PREVIOUSLY_CLOSED_BOOKED("PREVIOUSLY_CLOSED_BOOKED"),
  
  AUTHORISED("AUTHORISED"),
  
  OTHER("OTHER"),
  
  UNKNOWN("UNKNOWN");

  private String value;

  AccountBalanceType(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static AccountBalanceType fromValue(String value) {
    for (AccountBalanceType b : AccountBalanceType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

