/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.5.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package yapily.sdk.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import yapily.sdk.models.Amount;
import yapily.sdk.models.ExchangeRateInformationResponse;
import yapily.sdk.models.FrequencyResponse;
import yapily.sdk.models.Payee;
import yapily.sdk.models.Payer;
import yapily.sdk.models.PaymentChargeDetails;
import yapily.sdk.models.PaymentStatus;
import yapily.sdk.models.PaymentStatusDetails;
import yapily.sdk.models.PriorityCodeEnum;
import yapily.sdk.models.RefundAccount;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for PaymentResponse
 */
public class PaymentResponseTest {
    private final PaymentResponse model = new PaymentResponse();

    /**
     * Model tests for PaymentResponse
     */
    @Test
    public void testPaymentResponse() {
        // TODO: test PaymentResponse
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'institutionConsentId'
     */
    @Test
    public void institutionConsentIdTest() {
        // TODO: test institutionConsentId
    }

    /**
     * Test the property 'paymentIdempotencyId'
     */
    @Test
    public void paymentIdempotencyIdTest() {
        // TODO: test paymentIdempotencyId
    }

    /**
     * Test the property 'paymentLifecycleId'
     */
    @Test
    public void paymentLifecycleIdTest() {
        // TODO: test paymentLifecycleId
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'statusDetails'
     */
    @Test
    public void statusDetailsTest() {
        // TODO: test statusDetails
    }

    /**
     * Test the property 'payer'
     */
    @Test
    public void payerTest() {
        // TODO: test payer
    }

    /**
     * Test the property 'payeeDetails'
     */
    @Test
    public void payeeDetailsTest() {
        // TODO: test payeeDetails
    }

    /**
     * Test the property 'reference'
     */
    @Test
    public void referenceTest() {
        // TODO: test reference
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'amountDetails'
     */
    @Test
    public void amountDetailsTest() {
        // TODO: test amountDetails
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'firstPaymentAmount'
     */
    @Test
    public void firstPaymentAmountTest() {
        // TODO: test firstPaymentAmount
    }

    /**
     * Test the property 'firstPaymentDateTime'
     */
    @Test
    public void firstPaymentDateTimeTest() {
        // TODO: test firstPaymentDateTime
    }

    /**
     * Test the property 'nextPaymentAmount'
     */
    @Test
    public void nextPaymentAmountTest() {
        // TODO: test nextPaymentAmount
    }

    /**
     * Test the property 'nextPaymentDateTime'
     */
    @Test
    public void nextPaymentDateTimeTest() {
        // TODO: test nextPaymentDateTime
    }

    /**
     * Test the property 'finalPaymentAmount'
     */
    @Test
    public void finalPaymentAmountTest() {
        // TODO: test finalPaymentAmount
    }

    /**
     * Test the property 'finalPaymentDateTime'
     */
    @Test
    public void finalPaymentDateTimeTest() {
        // TODO: test finalPaymentDateTime
    }

    /**
     * Test the property 'numberOfPayments'
     */
    @Test
    public void numberOfPaymentsTest() {
        // TODO: test numberOfPayments
    }

    /**
     * Test the property 'previousPaymentAmount'
     */
    @Test
    public void previousPaymentAmountTest() {
        // TODO: test previousPaymentAmount
    }

    /**
     * Test the property 'previousPaymentDateTime'
     */
    @Test
    public void previousPaymentDateTimeTest() {
        // TODO: test previousPaymentDateTime
    }

    /**
     * Test the property 'chargeDetails'
     */
    @Test
    public void chargeDetailsTest() {
        // TODO: test chargeDetails
    }

    /**
     * Test the property 'scheduledPaymentType'
     */
    @Test
    public void scheduledPaymentTypeTest() {
        // TODO: test scheduledPaymentType
    }

    /**
     * Test the property 'scheduledPaymentDateTime'
     */
    @Test
    public void scheduledPaymentDateTimeTest() {
        // TODO: test scheduledPaymentDateTime
    }

    /**
     * Test the property 'frequency'
     */
    @Test
    public void frequencyTest() {
        // TODO: test frequency
    }

    /**
     * Test the property 'currencyOfTransfer'
     */
    @Test
    public void currencyOfTransferTest() {
        // TODO: test currencyOfTransfer
    }

    /**
     * Test the property 'purpose'
     */
    @Test
    public void purposeTest() {
        // TODO: test purpose
    }

    /**
     * Test the property 'priority'
     */
    @Test
    public void priorityTest() {
        // TODO: test priority
    }

    /**
     * Test the property 'exchangeRate'
     */
    @Test
    public void exchangeRateTest() {
        // TODO: test exchangeRate
    }

    /**
     * Test the property 'refundAccount'
     */
    @Test
    public void refundAccountTest() {
        // TODO: test refundAccount
    }

    /**
     * Test the property 'bulkAmountSum'
     */
    @Test
    public void bulkAmountSumTest() {
        // TODO: test bulkAmountSum
    }

}
