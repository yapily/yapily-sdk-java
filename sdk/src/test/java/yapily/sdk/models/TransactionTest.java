/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package yapily.sdk.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import yapily.sdk.models.AddressDetails;
import yapily.sdk.models.Amount;
import yapily.sdk.models.CurrencyExchange;
import yapily.sdk.models.Enrichment;
import yapily.sdk.models.IsoBankTransactionCode;
import yapily.sdk.models.Merchant;
import yapily.sdk.models.Payee;
import yapily.sdk.models.Payer;
import yapily.sdk.models.ProprietaryBankTransactionCode;
import yapily.sdk.models.StatementReference;
import yapily.sdk.models.TransactionBalance;
import yapily.sdk.models.TransactionChargeDetails;
import yapily.sdk.models.TransactionStatusEnum;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Transaction
 */
public class TransactionTest {
    private final Transaction model = new Transaction();

    /**
     * Model tests for Transaction
     */
    @Test
    public void testTransaction() {
        // TODO: test Transaction
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'date'
     */
    @Test
    public void dateTest() {
        // TODO: test date
    }

    /**
     * Test the property 'bookingDateTime'
     */
    @Test
    public void bookingDateTimeTest() {
        // TODO: test bookingDateTime
    }

    /**
     * Test the property 'valueDateTime'
     */
    @Test
    public void valueDateTimeTest() {
        // TODO: test valueDateTime
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'transactionAmount'
     */
    @Test
    public void transactionAmountTest() {
        // TODO: test transactionAmount
    }

    /**
     * Test the property 'grossAmount'
     */
    @Test
    public void grossAmountTest() {
        // TODO: test grossAmount
    }

    /**
     * Test the property 'currencyExchange'
     */
    @Test
    public void currencyExchangeTest() {
        // TODO: test currencyExchange
    }

    /**
     * Test the property 'chargeDetails'
     */
    @Test
    public void chargeDetailsTest() {
        // TODO: test chargeDetails
    }

    /**
     * Test the property 'reference'
     */
    @Test
    public void referenceTest() {
        // TODO: test reference
    }

    /**
     * Test the property 'statementReferences'
     */
    @Test
    public void statementReferencesTest() {
        // TODO: test statementReferences
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'transactionInformation'
     */
    @Test
    public void transactionInformationTest() {
        // TODO: test transactionInformation
    }

    /**
     * Test the property 'addressDetails'
     */
    @Test
    public void addressDetailsTest() {
        // TODO: test addressDetails
    }

    /**
     * Test the property 'isoBankTransactionCode'
     */
    @Test
    public void isoBankTransactionCodeTest() {
        // TODO: test isoBankTransactionCode
    }

    /**
     * Test the property 'proprietaryBankTransactionCode'
     */
    @Test
    public void proprietaryBankTransactionCodeTest() {
        // TODO: test proprietaryBankTransactionCode
    }

    /**
     * Test the property 'balance'
     */
    @Test
    public void balanceTest() {
        // TODO: test balance
    }

    /**
     * Test the property 'payeeDetails'
     */
    @Test
    public void payeeDetailsTest() {
        // TODO: test payeeDetails
    }

    /**
     * Test the property 'payerDetails'
     */
    @Test
    public void payerDetailsTest() {
        // TODO: test payerDetails
    }

    /**
     * Test the property 'merchant'
     */
    @Test
    public void merchantTest() {
        // TODO: test merchant
    }

    /**
     * Test the property 'enrichment'
     */
    @Test
    public void enrichmentTest() {
        // TODO: test enrichment
    }

    /**
     * Test the property 'supplementaryData'
     */
    @Test
    public void supplementaryDataTest() {
        // TODO: test supplementaryData
    }

}
