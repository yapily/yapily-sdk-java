/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.6.0
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package yapily.sdk.api;

import yapily.sdk.*;
import yapily.sdk.auth.*;
import yapily.sdk.models.ApiResponseError;
import yapily.sdk.models.ApiResponseOfUserDeleteResponse;
import yapily.sdk.models.ApplicationUser;
import yapily.sdk.models.NewApplicationUser;
import java.util.Set;
import java.util.UUID;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersApi
 */
public class UsersApiTest {

    private final UsersApi api = new UsersApi();

    /**
     * Create User
     *
     * Create a new user in your application
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addUserTest() throws ApiException {
        //NewApplicationUser newApplicationUser = null;
        //ApplicationUser response = api.addUser(newApplicationUser);
        // TODO: test validations
    }

    /**
     * Delete User
     *
     * Delete a user from your application along with any sub-resources (including consent resources on institution APIs if they exist)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUserTest() throws ApiException {
        //UUID userUuid = null;
        //ApiResponseOfUserDeleteResponse response = api.deleteUser(userUuid);
        // TODO: test validations
    }

    /**
     * Get User
     *
     * Get a specific user using the user UUID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserTest() throws ApiException {
        //UUID userUuid = null;
        //ApplicationUser response = api.getUser(userUuid);
        // TODO: test validations
    }

    /**
     * Get Users
     *
     * Get all the users configured in your application
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsersTest() throws ApiException {
        //Set<String> filterApplicationUserId = null;
        //List<ApplicationUser> response = api.getUsers(filterApplicationUserId);
        // TODO: test validations
    }

}
