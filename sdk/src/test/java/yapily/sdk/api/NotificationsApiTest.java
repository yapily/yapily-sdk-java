/*
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.13.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package yapily.sdk.api;

import yapily.sdk.*;
import yapily.sdk.auth.*;
import yapily.sdk.models.ApiListResponseOfEventSubscriptionResponse;
import yapily.sdk.models.ApiResponseOfEventSubscriptionDeleteResponse;
import yapily.sdk.models.ApiResponseOfEventSubscriptionResponse;
import yapily.sdk.models.EventSubscriptionRequest;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NotificationsApi
 */
public class NotificationsApiTest {

    private final NotificationsApi api = new NotificationsApi();

    /**
     * Create Event Subscription
     *
     * Used to subscribe to notifications relating to a specified event type.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createEventSubscriptionTest() throws ApiException {
        //EventSubscriptionRequest eventSubscriptionRequest = null;
        //ApiResponseOfEventSubscriptionResponse response = api.createEventSubscription(eventSubscriptionRequest);
        // TODO: test validations
    }

    /**
     * Delete Event Subscription
     *
     * Used to unsubscribe to notifications relating to a specified event type.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteEventSubscriptionByIdTest() throws ApiException {
        //String eventTypeId = null;
        //ApiResponseOfEventSubscriptionDeleteResponse response = api.deleteEventSubscriptionById(eventTypeId);
        // TODO: test validations
    }

    /**
     * Get Event Subscription
     *
     * Used to get details of your subscription to a specified event type.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEventSubscriptionByIdTest() throws ApiException {
        //String eventTypeId = null;
        //ApiResponseOfEventSubscriptionResponse response = api.getEventSubscriptionById(eventTypeId);
        // TODO: test validations
    }

    /**
     * Get Event Subscriptions
     *
     * Get all event subscriptions that your application is subscribed to
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEventSubscriptionsTest() throws ApiException {
        //ApiListResponseOfEventSubscriptionResponse response = api.getEventSubscriptions();
        // TODO: test validations
    }

}
