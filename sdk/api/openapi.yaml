openapi: 3.0.1
info:
  contact:
    email: support@yapily.com
    name: Yapily Support
    url: https://docs.yapily.com/pages/resources/support/
  description: The Yapily API enables connections between your application and users'
    banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In
    particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/)
    steps if this is your first time here.<br><br>While testing the API, our list
    of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/)
    maybe useful.
  title: Yapily API
  version: 2.5.0
servers:
- url: https://api.yapily.com
security:
- basicAuth: []
tags:
- description: The `Application` is the base entity that is used to interact with
    the API and contains a collection of `Institution` objects. You can have multiple
    Applications associated with your account e.g. a production application with live
    access to each `Institution` and a development application with access to sandboxes.
  name: Application
- description: The Users endpoints are used to manage each user (otherwise known as
    the PSU) in Yapily. Each user belongs to an Application and as a consequence,
    so do each `Consent` created for a particular `User`.
  name: Users
- description: An `Institution` object represents any Account Serving Payment Servicing
    Provider (ASPSP) that has been integrated and is accessible through the Yapily
    APIs (ASPSPs are entities that publish Read/Write APIs to permit, with customer
    consent, payments initiated by third party providers and/or make their customersï¿½
    financial data available to third party providers via their API endpoints).<br><br>Any
    one of the following would be represented as Institution:<ul><li>Traditional banks
    e.g. Santander</li><li>Neo-banks e.g. Monzo</li><li>Building societies e.g. Cumberland
    Building Society</li></ul>
  name: Institutions
- description: The Consents endpoints are used to manage each `Consent` created by
    Yapily in response to an authorisation created for a user.<br><br>The `Consent`
    object contains data that identifies a user's consent for a specific `Institution`
    within a Yapily application. Other than the id of the consent, the `institution-id`
    for the corresponding `Institution` and the user identifiers (`user-uuid` and
    `application-user-id`), it contains various details that indicates how the `Consent`
    can be used.
  name: Consents
- description: 'Before calling [Financial Data](#yapily-api-financial-data) or [Payments](#yapily-api-payments)
    endpoints, a consent from an end-user must be obtained.<br><br>Consents are valid
    for up to 90 days for Financial Data endpoints and have a single-use for Payment
    endpoints i.e. a new consent must be obtained for each payment.<aside class="info">NOTE:
    A user consent is also referred to as an ''Authorisation''.</aside>'
  name: Authorisations
- description: In order to access a user's Financial Data, you are required to request
    an [Authorisation](#yapily-api-authorisations) from the user to share the account
    information the bank has. Once a `consent-token` is obtained, you can call the
    necessary Financial Data endpoint(s) to retrieve the user's data.
  name: Financial Data
- description: In order to make a Payment on behalf of a user, you are required to
    request an [Authorisation](#yapily-api-authorisations) from the user to authorise
    the user's account to make the payment from. Once a `consent-token` is obtained,
    you can call the necessary Payments endpoint(s) to execute a payment.
  name: Payments
- description: |+
    The Financial Profile endpoints assist in collating authorised consents for a user which can subsequently be used to classify user income streams across multiple accounts. For each income stream, the financial profile determines the frequency and score that describes how well the income stream fits to that schedule.

  name: Financial Profile
- description: "The Notifications endpoints provide an interactive way for user to\
    \ receive notifications according to different event-types. This feature is currently\
    \ in private beta. Please reach out if you require access. \n\n"
  name: Notifications
- description: Virtual accounts can be used within PIS associated flow of funds in
    order to take advantage of payment features such as receipt of funds, reconciliation,
    funds handling and settlement. Accounts can be created, managed and enquired upon
    using these endpoints
  name: Virtual Accounts
- description: 'Variable Recurring Payments enables transfer of money between accounts
    held by the same person or transfer of money for business payments. <br><br>In
    order to make Sweeping Variable Recurring Payments on behalf of a user, you are
    required to request an [Consent](#yapily-api-authorisations) from the user by
    calling the Sweeping Consent endpoint to authorise the user''s account to make
    the payment. Once a `consent-token` is obtained, you can call the Payments endpoint
    to execute the Sweeping Variable Recurring Payments transaction. Before executing
    the payment, you have the option to confirm availability of funds in the user''s
    account by calling the Funds Confirmation endpoint. <br><br>See [VRP Payments](https://docs.yapily.com/guides/payments/payment-execution/vrps/)
    for more information. '
  name: Variable Recurring Payments
paths:
  /account-auth-requests:
    patch:
      description: Used to prompt the account holder for continued access to their
        financial data. This endpoint should be used when a `Consent` that was previously
        `AUTHORIZED` can no longer be used to retrieve data.<br><br>See [Re-Authorisation](https://docs.yapily.com/pages/key-concepts/account-data/account-consents/#re-authorisation)
        for more information.
      operationId: reAuthoriseAccount
      parameters:
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                OBIE Example Response:
                  $ref: '#/components/examples/obie-example-acc-auth-response-patch'
              schema:
                $ref: '#/components/schemas/ApiResponseOfAccountAuthorisationResponse'
          description: Created
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Re-authorise Account Consent
      tags:
      - Authorisations
      x-accepts: application/json;charset=UTF-8
    post:
      description: 'Used to initiate the authorisation process and direct users to
        the login screen of their financial institution in order to give consent to
        access account data.<br><br>See [Redirect Account Flows](https://docs.yapily.com/pages/key-concepts/account-data/account-authorisation/redirect-account-flows/)
        for more information about this flow.<br><br>Feature: `INITIATE_ACCOUNT_REQUEST`'
      operationId: initiateAccountRequest
      parameters:
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              CBI Globe Example Request:
                $ref: '#/components/examples/cbi-globe-example-acc-auth-request'
              OBIE Example Request:
                $ref: '#/components/examples/obie-example-acc-auth-request'
            schema:
              $ref: '#/components/schemas/AccountAuthorisationRequest'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                CBI Globe Example Response:
                  $ref: '#/components/examples/cbi-globe-example-acc-auth-response'
                OBIE Example Response:
                  $ref: '#/components/examples/obie-example-acc-auth-response-post'
              schema:
                $ref: '#/components/schemas/ApiResponseOfAccountAuthorisationResponse'
          description: Created
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Create Account Authorisation
      tags:
      - Authorisations
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
    put:
      description: 'Used to continue the authorisation process and for any `Institution`
        that contains the `INITIATE_PRE_AUTHORISATION` feature and direct user to
        the login screen of their financial institution in order to give consent to
        access account data. <br><br>See [Redirect Account Flows](https://docs.yapily.com/pages/key-concepts/account-data/account-authorisation/redirect-account-flows/)
        for more information about this flow. <br><br>Features: <ul><li>`INITIATE_ACCOUNT_REQUEST`</li><li>`INITIATE_PRE_AUTHORISATION`</li></ul>'
      operationId: updatePreAuthoriseAccountConsent
      parameters:
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              Berlin Group Example Request:
                $ref: '#/components/examples/berlin-group-example-acc-auth-request'
            schema:
              $ref: '#/components/schemas/AccountAuthorisationRequest'
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                OBIE Example Response:
                  $ref: '#/components/examples/obie-example-acc-auth-response-put'
              schema:
                $ref: '#/components/schemas/ApiResponseOfAccountAuthorisationResponse'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Update Account Pre-authorisation
      tags:
      - Authorisations
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
  /accounts:
    get:
      description: 'Used to return all accounts and balances for the end user associated
        with the presented consent token.<br><br>Feature: `ACCOUNTS`'
      operationId: getAccounts
      parameters:
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                OBIE Example Response:
                  $ref: '#/components/examples/obie-example-accounts-response'
              schema:
                $ref: '#/components/schemas/AccountApiListResponse'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Accounts
      tags:
      - Financial Data
      x-accepts: application/json;charset=UTF-8
  /accounts/{accountId}:
    get:
      description: 'Used to return the account and balance information for the end
        user associated with the presented consent token.<br><br>Feature: `ACCOUNTS`'
      operationId: getAccount
      parameters:
      - description: __Mandatory__. The account Id of the user's bank account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                OBIE Example Response:
                  $ref: '#/components/examples/obie-example-account-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfAccount'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Account
      tags:
      - Financial Data
      x-accepts: application/json;charset=UTF-8
  /accounts/{accountId}/balances:
    get:
      description: "Used to return the balance for the end user associated with the\
        \ presented consent token.<br><br>\n__Note__: This endpoint is only for obtaining\
        \ the balance information of an account belonging to an `Institution` that\
        \ exposes their APIs through the [CBI Globe Gateway](https://docs.yapily.com/pages/knowledge/open-banking/cbi_globe//).\
        \ If the `Institution` you wish to obtain balance data is not in the CBI Globe,\
        \ use [Get Account](https://docs.yapily.com/api/reference/#operation/getAccount)\
        \ or [Get Accounts](https://docs.yapily.com/api/reference/#operation/getAccounts)\
        \ to get balance data. <br><br>Feature: `ACCOUNT_BALANCES` "
      operationId: getAccountBalances
      parameters:
      - description: __Mandatory__. The account Id of the user's bank account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                CBI Globe Example Response:
                  $ref: '#/components/examples/cbi-globe-example-acc-balance-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfBalances'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Account Balances
      tags:
      - Financial Data
      x-accepts: application/json;charset=UTF-8
  /accounts/{accountId}/beneficiaries:
    get:
      description: 'Used to get all the beneficiaries of a user''s account<br><br>Feature:
        `ACCOUNT_BENEFICIARIES`'
      operationId: getBeneficiaries
      parameters:
      - description: __Mandatory__. The account Id of the user's bank account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                OBIE Example Response:
                  $ref: '#/components/examples/obie-example-acc-beneficiaries-response'
              schema:
                $ref: '#/components/schemas/ApiListResponseOfBeneficiary'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Account Beneficiaries
      tags:
      - Financial Data
      x-accepts: application/json;charset=UTF-8
  /accounts/{accountId}/direct-debits:
    get:
      description: 'Used to get the list of direct debits for an account.<br><br>Feature:
        `ACCOUNT_DIRECT_DEBIT`'
      operationId: getAccountDirectDebits
      parameters:
      - description: __Mandatory__. The account Id of the user's bank account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      - description: __Optional__. The maximum number of transaction records to be
          returned. Must be between 0 and 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                OBIE Example Response:
                  $ref: '#/components/examples/obie-example-acc-direct-debits-response'
              schema:
                $ref: '#/components/schemas/ApiListResponseOfDirectDebitResponse'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Account Direct Debits
      tags:
      - Financial Data
      x-accepts: application/json;charset=UTF-8
  /accounts/{accountId}/periodic-payments:
    get:
      description: 'Used to get the list of periodic payments (standing orders in
        the UK) for an account.<br><br>Feature: `ACCOUNT_PERIODIC_PAYMENTS`'
      operationId: getAccountPeriodicPayments
      parameters:
      - description: __Mandatory__. The account Id of the user's bank account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      - description: __Optional__. The maximum number of transaction records to be
          returned. Must be between 0 and 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                OBIE Example Response:
                  $ref: '#/components/examples/obie-example-acc-periodic-payments-response'
              schema:
                $ref: '#/components/schemas/ApiListResponseOfPaymentResponse'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Account Periodic Payments
      tags:
      - Financial Data
      x-accepts: application/json;charset=UTF-8
  /accounts/{accountId}/scheduled-payments:
    get:
      description: 'Used to get the list of scheduled payments for an account.<br><br>Feature:
        `ACCOUNT_SCHEDULED_PAYMENT`'
      operationId: getAccountScheduledPayments
      parameters:
      - description: __Mandatory__. The account Id of the user's bank account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      - description: __Optional__. The maximum number of transaction records to be
          returned. Must be between 0 and 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                OBIE Example Response:
                  $ref: '#/components/examples/obie-example-acc-scheduled-payments-response'
              schema:
                $ref: '#/components/schemas/ApiListResponseOfPaymentResponse'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Account Scheduled Payments
      tags:
      - Financial Data
      x-accepts: application/json;charset=UTF-8
  /accounts/{accountId}/statements:
    get:
      description: 'Used to get the list of statements for an account.<br><br>Feature:
        `ACCOUNT_STATEMENTS`'
      operationId: getStatements
      parameters:
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The account Id of the user's bank account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: '__Optional__. Returned transactions will be on or after this
          date (yyyy-MM-dd''T''HH:mm:ss.SSSZ). '
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: __Optional__. Returned transactions will be on or before this
          date (yyyy-MM-dd'T'HH:mm:ss.SSSZ).
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: __Optional__. The maximum number of transaction records to be
          returned. Must be between 0 and 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: __Optional__. Sort transaction records by date ascending with
          'date' or descending with '-date'. The default sort order is descending
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/SortEnum'
        style: form
      - description: __Optional__. The number of transaction records to be skipped.
          Used primarily with paginated results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Example Response:
                  $ref: '#/components/examples/account-statements-example-esponse'
              schema:
                $ref: '#/components/schemas/ApiListResponseOfAccountStatement'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Account Statements
      tags:
      - Financial Data
      x-accepts: application/json;charset=UTF-8
  /accounts/{accountId}/statements/{statementId}:
    get:
      description: 'Used to get a statement for an account.<br><br>Feature: `ACCOUNT_STATEMENT`'
      operationId: getStatement
      parameters:
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The account Id of the user's bank account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The statement Id of the statement file.
        explode: false
        in: path
        name: statementId
        required: true
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Example Response:
                  description: Example Response
                  value:
                    meta:
                      tracingId: 8bacaae3025647efa1891157993e32fb
                    data:
                      id: "700014000000000000000002"
                      startDateTime: 2017-08-01T00:00:00Z
                      endDateTime: 2017-08-31T23:59:59Z
                      creationDateTime: 2017-09-01T00:00:00Z
              schema:
                $ref: '#/components/schemas/ApiResponseOfAccountStatement'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Account Statement
      tags:
      - Financial Data
      x-accepts: application/json;charset=UTF-8
  /accounts/{accountId}/statements/{statementId}/file:
    get:
      description: 'Used to get the statement file for an account.<br><br>Feature:
        `ACCOUNT_STATEMENT_FILE`'
      operationId: getStatementFile
      parameters:
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The account Id of the user's bank account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The statement Id of the statement file.
        explode: false
        in: path
        name: statementId
        required: true
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Account Statement File
      tags:
      - Financial Data
      x-accepts: application/json;charset=UTF-8,application/pdf
  /accounts/{accountId}/transactions:
    get:
      description: 'Used to get the account transactions for an account<br><br>Feature:
        `ACCOUNT_TRANSACTIONS`'
      operationId: getTransactions
      parameters:
      - description: __Mandatory__. The account Id of the user's bank account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Optional__. Can be `categories` or `merchant`. When set, will
          include enrichment data in the transactions returned. <br><br>Enrichment
          data is optional, e.g. when 'merchant' enrichment data is requested, the
          enrichment response will include merchant data only if it can be evaluated
          from the transaction.
        explode: true
        in: query
        name: with
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: '__Optional__. Returned transactions will be on or after this
          date (yyyy-MM-dd''T''HH:mm:ss.SSSZ). '
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: __Optional__. Returned transactions will be on or before this
          date (yyyy-MM-dd'T'HH:mm:ss.SSSZ).
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: __Optional__. The maximum number of transaction records to be
          returned. Must be between 0 and 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: __Optional__. Sort transaction records by date ascending with
          'date' or descending with '-date'. The default sort order is descending
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/SortEnum'
        style: form
      - description: __Optional__. The number of transaction records to be skipped.
          Used primarily with paginated results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: __Optional__. This property is not currently in use.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Example Response:
                  $ref: '#/components/examples/account-transactions-example-response'
              schema:
                $ref: '#/components/schemas/ApiListResponseOfTransaction'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Account Transactions
      tags:
      - Financial Data
      x-accepts: application/json;charset=UTF-8
  /bulk-payment-auth-requests:
    post:
      description: 'Used to initiate the authorisation process and direct users to
        the login screen of their financial Institution in order to give their consent
        for a bulk payment. See [Bulk Payments](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/bulk-payments/)
        for more information. <br><br>See [Redirect Payment Flows](https://docs.yapily.com/pages/key-concepts/payments/payment-authorisation/redirect-payment-flows/)
        for more information about this flow.<br><br>Feature: `INITIATE_BULK_PAYMENT`'
      operationId: createBulkPaymentAuthorisation
      parameters:
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              UK Bulk Payment Example Request:
                $ref: '#/components/examples/uk-bulk-payment-auth-example-request'
            schema:
              $ref: '#/components/schemas/BulkPaymentAuthorisationRequest'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                UK Bulk Payment Example Response:
                  $ref: '#/components/examples/uk-bulk-payment-auth-example-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfPaymentAuthorisationRequestResponse'
          description: Created
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Create Bulk Payment Authorisation
      tags:
      - Authorisations
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
  /bulk-payments:
    post:
      description: 'Used to initiate a bulk payment after obtaining the user''s authorisation.
        <br><br>Feature: `CREATE_BULK_PAYMENT`'
      operationId: createBulkPayment
      parameters:
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              UK Bulk Payment Example Request:
                $ref: '#/components/examples/uk-bulk-payment-example-request'
            schema:
              $ref: '#/components/schemas/BulkPaymentRequest'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                UK Bulk Payment Example Response:
                  $ref: '#/components/examples/uk-bulk-payment-example-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfPaymentResponse'
          description: Created
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Create Bulk Payment
      tags:
      - Payments
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
  /categories/{country}:
    get:
      description: Used to retrieve the list of categories returned by the Yapily
        Categorisation engine for a given locale. <br><br>See [Data Enrichment](https://docs.yapily.com/pages/key-concepts/account-data/data-enrichment/intro-to-data-enrichment/)
        for more information.
      operationId: getCategories
      parameters:
      - description: __Mandatory__. The 2 letter country code e.g. 'GB'.
        explode: false
        in: path
        name: country
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Example Response:
                  $ref: '#/components/examples/categories-example-response'
              schema:
                $ref: '#/components/schemas/ApiListResponseOfCategory'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Categories
      tags:
      - Financial Data
      x-accepts: application/json;charset=UTF-8
  /consent-auth-code:
    post:
      description: Used to obtain a Yapily Consent object containing the `consentToken`
        once the user has authenticated and you have an OAuth2 authorisation code
        `auth-code` and state `auth-state`.
      operationId: createConsentWithCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentAuthCodeRequest'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                Example Response:
                  $ref: '#/components/examples/consent-auth-code-example-response'
              schema:
                $ref: '#/components/schemas/Consent'
          description: Created
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Exchange OAuth2 Code
      tags:
      - Consents
      x-contentType: application/json
      x-accepts: application/json;charset=UTF-8
  /consent-one-time-token:
    post:
      description: Exchange a One-time-token for the consent token
      operationId: getConsentBySingleAccessConsent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OneTimeTokenRequest'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                Example Response:
                  $ref: '#/components/examples/consent-one-time-token-example-response'
              schema:
                $ref: '#/components/schemas/Consent'
          description: Created
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Exchange One Time Token
      tags:
      - Consents
      x-contentType: application/json
      x-accepts: application/json;charset=UTF-8
  /consents:
    get:
      description: Used to retrieve all the consents created for each user within
        an application
      operationId: getConsents
      parameters:
      - description: __Optional__. Filter records based on the list of `applicationUserId`
          users provided.
        explode: true
        in: query
        name: filter[applicationUserId]
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: __Optional__. Filter records based on the list of `userUuid`
          users provided.
        explode: true
        in: query
        name: filter[userUuid]
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: __Optional__. Filter records based on the list of `Institution`
          provided.
        explode: true
        in: query
        name: filter[institution]
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: __Optional__. Filter records based on the list of `Consent` [statuses](https://docs.yapily.com/api/reference/#operation/getConsents!c=200&path=data/status&t=response).
        explode: true
        in: query
        name: filter[status]
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: '__Optional__. Returned transactions will be on or after this
          date (yyyy-MM-dd''T''HH:mm:ss.SSSZ). '
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: __Optional__. Returned transactions will be on or before this
          date (yyyy-MM-dd'T'HH:mm:ss.SSSZ).
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: __Optional__. The maximum number of transaction records to be
          returned. Must be between 0 and 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: __Optional__. The number of transaction records to be skipped.
          Used primarily with paginated results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Example Response:
                  $ref: '#/components/examples/consents-example-response'
              schema:
                $ref: '#/components/schemas/ApiListResponseOfConsent'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Consents
      tags:
      - Consents
      x-accepts: application/json;charset=UTF-8
  /consents/{consentId}:
    delete:
      description: Delete a consent using the consent Id
      operationId: delete
      parameters:
      - description: __Mandatory__. The consent Id of the `Consent` to update.
        explode: false
        in: path
        name: consentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: __Optional__. Whether to force the deletion.
        explode: true
        in: query
        name: forceDelete
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Example Response:
                  $ref: '#/components/examples/consent-delete-example-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfConsentDeleteResponse'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Delete Consent
      tags:
      - Consents
      x-accepts: application/json;charset=UTF-8
    get:
      description: Get consent using the consent Id
      operationId: getConsentById
      parameters:
      - description: __Mandatory__. The consent Id of the `Consent` to update.
        explode: false
        in: path
        name: consentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Example Response:
                  $ref: '#/components/examples/consent-get-example-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfConsent'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Consent
      tags:
      - Consents
      x-accepts: application/json;charset=UTF-8
  /embedded-account-auth-requests:
    post:
      description: 'Used to initiate the embedded authorisation process for an `Institution`
        that contains the `INITIATE_EMBEDDED_ACCOUNT_REQUEST` feature in order to
        obtain the the user''s authorisation to access their account information.
        <br><br>See [Embedded Account Flows](https://docs.yapily.com/pages/key-concepts/account-data/account-authorisation/embedded-account-flows/)
        for more information about this flow.<br><br>Feature: `INITIATE_EMBEDDED_ACCOUNT_REQUEST`'
      operationId: initiateEmbeddedAccountRequest
      parameters:
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              Berlin Group Example Request:
                $ref: '#/components/examples/berlin-group-example-embedded-acc-auth-request'
            schema:
              $ref: '#/components/schemas/EmbeddedAccountAuthorisationRequest'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                Berlin Group (Multiple SCA Methods) Example Response:
                  $ref: '#/components/examples/berlin-group-multiple-sca-methods-example-response'
                Berlin Group (Single SCA Method) Example Response:
                  $ref: '#/components/examples/berlin-group-single-sca-method-example-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfEmbeddedAccountAuthorisationResponse'
          description: Created
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Create Embedded Account Authorisation
      tags:
      - Authorisations
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
  /embedded-account-auth-requests/{consentId}:
    put:
      description: 'Used to pass the SCA Code received from the `Institution` (and
        the SCA method selected by the user where multiple SCA methods are supported
        by the `Institution`) in order to complete the embedded authorisation to access
        the user''s financial data. <br><br>See [Embedded Account Flows](https://docs.yapily.com/pages/key-concepts/account-data/account-authorisation/embedded-account-flows/)
        for more information about this flow.<br><br>Feature: `INITIATE_EMBEDDED_ACCOUNT_REQUEST`'
      operationId: updateEmbeddedAccountRequest
      parameters:
      - description: __Mandatory__. The consent Id of the `Consent` to update.
        explode: false
        in: path
        name: consentId
        required: true
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              Berlin Group (SCA Code) Example Request:
                $ref: '#/components/examples/berlin-group-sca-code-example-request'
              Berlin Group (Selected SCA Method) Example Request:
                $ref: '#/components/examples/berlin-group-selected-sca-method-example-request'
            schema:
              $ref: '#/components/schemas/EmbeddedAccountAuthorisationRequest'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                Berlin Group (SCA Code) Example Response:
                  $ref: '#/components/examples/berlin-group-sca-code-example-response'
                Berlin Group (Selected SCA Method) Example Response:
                  $ref: '#/components/examples/berlin-group-selected-sca-method-example-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfEmbeddedAccountAuthorisationResponse'
          description: Created
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Update Embedded Account Authorisation
      tags:
      - Authorisations
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
  /embedded-bulk-payment-auth-requests:
    post:
      description: 'Used to initiate the embedded authorisation process for an `Institution`
        that contains the `INITIATE_EMBEDDED_BULK_PAYMENT` feature in order to obtain
        the the user''s authorisation for a bulk payment. See [Bulk Payments](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/bulk-payments/)
        for more information. <br><br> See [Embedded Payment Flows](https://docs.yapily.com/pages/key-concepts/payments/payment-authorisation/embedded-payment-flows/)
        for more information about this flow.<br><br>Feature: `INITIATE_EMBEDDED_BULK_PAYMENT`'
      operationId: createEmbeddedBulkPaymentAuthorisation
      parameters:
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              Berlin Group EUR Embedded Bulk Payment Example Request:
                $ref: '#/components/examples/berlin-group-eur-embedded-bulk-payment-example-request'
            schema:
              $ref: '#/components/schemas/BulkPaymentEmbeddedAuthorisationRequest'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                Berlin Group EUR Embedded Bulk Payment Example Response:
                  $ref: '#/components/examples/berlin-group-eur-embedded-bulk-payment-example-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfPaymentEmbeddedAuthorisationRequestResponse'
          description: Created
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Create Embedded Bulk Payment Authorisation
      tags:
      - Authorisations
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
  /embedded-bulk-payment-auth-requests/{consentId}:
    put:
      description: 'Used to pass the SCA Code received from the `Institution` (and
        the SCA method selected by the user where multiple SCA methods are supported
        by the `Institution`) in order to complete the embedded authorisation to initiate
        a bulk payment. See [Bulk Payments](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/bulk-payments/)
        for more information. <br><br>See [Embedded Payment Flows](https://docs.yapily.com/pages/key-concepts/payments/payment-authorisation/embedded-payment-flows/)
        for more information about this flow.<br><br>Feature: `INITIATE_EMBEDDED_BULK_PAYMENT`'
      operationId: updateEmbeddedBulkPaymentAuthorisation
      parameters:
      - description: __Mandatory__. The consent Id of the `Consent` to update.
        explode: false
        in: path
        name: consentId
        required: true
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              Berlin Group EUR Embedded Bulk Payment (SCA Code) Example Request:
                $ref: '#/components/examples/berlin-group-eur-embedded-bulk-payment-sca-code-example-request'
            schema:
              $ref: '#/components/schemas/BulkPaymentEmbeddedAuthorisationRequest'
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Berlin Group EUR Embedded Bulk Payment (SCA Code) Example Response:
                  $ref: '#/components/examples/berlin-group-eur-embedded-bulk-payment-sca-code-example-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfPaymentEmbeddedAuthorisationRequestResponse'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Update Embedded Bulk Payment Authorisation
      tags:
      - Authorisations
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
  /embedded-payment-auth-requests:
    post:
      description: 'Used to initiate the embedded authorisation process for an `Institution`
        that contains the `INITIATE_EMBEDDED_DOMESTIC_SINGLE_PAYMENT` feature in order
        to obtain the the user''s authorisation for a payment.<br><br> See [Embedded
        Payment Flows](https://docs.yapily.com/pages/key-concepts/payments/payment-authorisation/embedded-payment-flows/)
        for more information about this flow.<br><br>Feature: `INITIATE_EMBEDDED_DOMESTIC_SINGLE_PAYMENT`'
      operationId: createEmbeddedPaymentAuthorisation
      parameters:
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              Berlin Group EUR Single Domestic Payment Example Request:
                $ref: '#/components/examples/berlin-group-eur-single-domestic-embedded-payment-example-request'
            schema:
              $ref: '#/components/schemas/PaymentEmbeddedAuthorisationRequest'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                Berlin Group EUR Single Domestic Payment Example Response:
                  $ref: '#/components/examples/berlin-group-eur-single-domestic-embedded-payment-example-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfPaymentEmbeddedAuthorisationRequestResponse'
          description: Created
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Create Embedded Payment Authorisation
      tags:
      - Authorisations
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
  /embedded-payment-auth-requests/{consentId}:
    put:
      description: 'Used to pass the SCA Code received from the `Institution` (and
        the SCA method selected by the user where multiple SCA methods are supported
        by the `Institution`) in order to complete the embedded authorisation to initiate
        a payment. <br><br> See [Embedded Payment Flows](https://docs.yapily.com/guides/payments/payment-authorisation-flows/embedded/)
        for more information about this flow.<br><br>Feature: `INITIATE_EMBEDDED_DOMESTIC_SINGLE_PAYMENT`'
      operationId: updateEmbeddedPaymentAuthorisation
      parameters:
      - description: __Mandatory__. The consent Id of the `Consent` to update.
        explode: false
        in: path
        name: consentId
        required: true
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              Berlin Group EUR Single Domestic Payment (SCA Code) Example Request:
                $ref: '#/components/examples/berlin-group-eur-single-domestic-payment-sca-code-example-request'
              Berlin Group EUR Single Domestic Payment (Selected SCA Method) Example Request:
                $ref: '#/components/examples/berlin-group-eur-single-domestic-payment-selected-sca-method-example-request'
            schema:
              $ref: '#/components/schemas/PaymentEmbeddedAuthorisationRequest'
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Berlin Group EUR Single Domestic Payment (SCA Code) Example Response:
                  $ref: '#/components/examples/berlin-group-eur-single-domestic-payment-sca-code-example-response'
                Berlin Group EUR Single Domestic Payment (Selected SCA Method) Example Response:
                  $ref: '#/components/examples/berlin-group-eur-single-domestic-payment-selected-sca-method-example-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfPaymentEmbeddedAuthorisationRequestResponse'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Update Embedded Payment Authorisation
      tags:
      - Authorisations
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
  /features:
    get:
      description: 'Used to retrieve all features available from Yapily. Each `Institution`
        supports a one, many or all of these features and can be seen in the features
        field of the `Institution` object.<br><br>Note: Every `Institution` does not
        necessarily support every feature. To see which features are available for
        a particular Institution, use either the [Get Institutions](https://docs.yapily.com/api/reference/#operation/getInstitutions)
        or [Get Institution](https://docs.yapily.com/api/reference/#operation/getInstitution)
        endpoint and check the features array within the `Institution` payload.'
      operationId: getFeatureDetails
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Example Response:
                  $ref: '#/components/examples/features-example-response'
              schema:
                $ref: '#/components/schemas/ApiListResponseOfFeatureDetails'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Features
      tags:
      - Institutions
      x-accepts: application/json;charset=UTF-8
  /identity:
    get:
      description: 'Used to get the identity information for an account.<br><br>Feature:
        `IDENTITY`'
      operationId: getIdentity
      parameters:
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Example Response:
                  $ref: '#/components/examples/identity-example-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfIdentity'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Identity
      tags:
      - Financial Data
      x-accepts: application/json;charset=UTF-8
  /institutions:
    get:
      description: Used to retrieve all `Institutions` within an application
      operationId: getInstitutions
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Example Response:
                  $ref: '#/components/examples/institutions-example-response'
              schema:
                $ref: '#/components/schemas/ApiListResponseOfInstitution'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Institutions
      tags:
      - Institutions
      x-accepts: application/json;charset=UTF-8
  /institutions/{institutionId}:
    get:
      description: Used to retrieves details of a specific `Institution` within an
        application
      operationId: getInstitution
      parameters:
      - description: __Mandatory__. The Yapily institution Id for the `Institution`.
        explode: false
        in: path
        name: institutionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Example Response:
                  $ref: '#/components/examples/institution-example-response'
              schema:
                $ref: '#/components/schemas/Institution'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Institution
      tags:
      - Institutions
      x-accepts: application/json;charset=UTF-8
  /me:
    get:
      description: Get the information about the institutions configured in your application
      operationId: getApplicationMe
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Example Response:
                  $ref: '#/components/examples/me-example-response'
              schema:
                $ref: '#/components/schemas/Application'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Application Self
      tags:
      - Application
      x-accepts: application/json;charset=UTF-8
  /payment-auth-requests:
    post:
      description: Used to initiate the authorisation process and direct users to
        the login screen of their financial Institution in order to give their consent
        for a payment. This endpoint is used to initiate all the different payment
        listed below. Based on the type of payment you wish to make, you may be required
        to provide specific properties in [PaymentRequest](https://docs.yapily.com/api/reference/#operation/createPaymentAuthorisation!path=paymentRequest&t=request).
        First make sure that the payment feature you wish to execute is supported
        by the bank by checking the features array in [GET Institution](https://docs.yapily.com/api/reference/#operation/getInstitution).
        <br><br>See [Redirect Payment Flows](https://docs.yapily.com/pages/key-concepts/payments/payment-authorisation/redirect-payment-flows/)
        for more information about this flow.<br><br>Features:<ul><li>`INITIATE_DOMESTIC_PERIODIC_PAYMENT`</li><li>`INITIATE_DOMESTIC_SCHEDULED_PAYMENT`</li><li>`INITIATE_DOMESTIC_SINGLE_INSTANT_PAYMENT`</li><li>`INITIATE_DOMESTIC_SINGLE_PAYMENT`</li><li>`INITIATE_INTERNATIONAL_PERIODIC_PAYMENT`</li><li>`INITIATE_INTERNATIONAL_SCHEDULED_PAYMENT`</li><li>`INITIATE_INTERNATIONAL_SINGLE_PAYMENT`</li></ul>
      operationId: createPaymentAuthorisation
      parameters:
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              EUR Single Domestic Example Request:
                $ref: '#/components/examples/eur-single-domestic-payment-auth-example-request'
              GBP Single Domestic Example Request:
                $ref: '#/components/examples/gbp-single-domestic-payment-auth-example-request'
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationRequest'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                EUR Single Domestic Example Response:
                  $ref: '#/components/examples/eur-single-domestic-payment-auth-example-response'
                GBP Single Domestic Example Response:
                  $ref: '#/components/examples/gbp-single-domestic-payment-auth-example-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfPaymentAuthorisationRequestResponse'
          description: Created
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Create Payment Authorisation
      tags:
      - Authorisations
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
    put:
      description: 'Used to continue the authorisation process and for any `Institution`
        that contains the `INITIATE_PRE_AUTHORISATION` feature and direct user to
        the login screen of their financial institution in order to give consent to
        initiate a payment. <br><br>See [Redirect Payment Flows](https://docs.yapily.com/pages/key-concepts/payments/payment-authorisation/redirect-payment-flows/)
        for more information about this flow. <br><br>Feature: `INITIATE_PRE_AUTHORISATION`'
      operationId: updatePaymentAuthorisation
      parameters:
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              Berlin Group EUR Single Domestic Payment Example Request:
                $ref: '#/components/examples/berlin-group-eur-single-domestic-payment-example-request'
            schema:
              $ref: '#/components/schemas/PaymentAuthorisationRequest'
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Berlin Group EUR Single Domestic Payment Example Response:
                  $ref: '#/components/examples/berlin-group-eur-single-domestic-payment-example-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfPaymentAuthorisationRequestResponse'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Update Payment Pre-authorisation
      tags:
      - Authorisations
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
  /payments:
    post:
      description: Used to initiate a payment after obtaining the user's authorisation.
        <br><br>Features:<ul><li>`INITIATE_DOMESTIC_PERIODIC_PAYMENT`</li><li>`INITIATE_DOMESTIC_SCHEDULED_PAYMENT`</li><li>`INITIATE_DOMESTIC_SINGLE_INSTANT_PAYMENT`</li><li>`INITIATE_DOMESTIC_SINGLE_PAYMENT`</li><li>`INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT`</li><li>`INITIATE_INTERNATIONAL_PERIODIC_PAYMENT`</li><li>`INITIATE_INTERNATIONAL_SCHEDULED_PAYMENT`</li><li>`INITIATE_INTERNATIONAL_SINGLE_PAYMENT`</li></ul>
      operationId: createPayment
      parameters:
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              EUR Domestic Single Payment Example Request:
                $ref: '#/components/examples/eur-domestic-single-payment-example-request'
              GBP Domestic Single Payment Example Request:
                $ref: '#/components/examples/gbp-domestic-single-payment-example-request'
            schema:
              $ref: '#/components/schemas/PaymentRequest'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                EUR Domestic Single Payment Example Response:
                  $ref: '#/components/examples/eur-domestic-single-payment-example-response'
                GBP Domestic Single Payment Example Response:
                  $ref: '#/components/examples/gbp-domestic-single-payment-example-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfPaymentResponse'
          description: Created
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Create Payment
      tags:
      - Payments
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
  /payments/{paymentId}/details:
    get:
      description: 'Used to get the payment details of a payment. This is most commonly
        used to check for any updates to the payment status. <br><br>Feature: `EXISTING_PAYMENTS_DETAILS`'
      operationId: getPayments
      parameters:
      - description: __Mandatory__. The payment Id of the payment.
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a personal account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. Represents the user's login ID for the `Institution`
          to a business account. <br><br>See [PSU identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-corporate-id
        required: false
        schema:
          type: string
        style: simple
      - description: __Conditional__. The IP address of the PSU. <br><br>See [PSU
          identifiers](https://docs.yapily.com/pages/knowledge/open-banking/psu_identifiers/)
          to see if this header is required.
        explode: false
        in: header
        name: psu-ip-address
        required: false
        schema:
          type: string
        style: simple
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                EUR Single Domestic Payment Example Response:
                  $ref: '#/components/examples/eur-single-domestic-payment-details-example-response'
                GBP Single Domestic Payment Example Response:
                  $ref: '#/components/examples/gbp-single-domestic-payment-details-example-response'
                UK Bulk Payment Example Response:
                  $ref: '#/components/examples/uk-bulk-payment-details-example-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfPaymentResponses'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Payment Details
      tags:
      - Payments
      x-accepts: application/json;charset=UTF-8
  /pre-auth-requests:
    post:
      description: 'Used to initiate the pre-authorisation process for any `Institution`
        that contains the `INITIATE_PRE_AUTHORISATION` feature to authenticate the
        user. <br><br>Feature: `INITIATE_PRE_AUTHORISATION`'
      operationId: createPreAuthorisationRequest
      parameters:
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              Berlin Group (AIS) Example Request:
                $ref: '#/components/examples/berlin-group-ais-pre-auth-example-request'
              Berlin Group (PIS) Example Request:
                $ref: '#/components/examples/berlin-group-pis-pre-auth-example-request'
            schema:
              $ref: '#/components/schemas/PreAuthorisationRequest'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                Berlin Group Example (AIS) Response:
                  $ref: '#/components/examples/berlin-group-example-ais-pre-auth-response'
                Berlin Group Example (PIS) Response:
                  $ref: '#/components/examples/berlin-group-pis-pre-auth-example-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfAccountAuthorisationResponse'
          description: Created
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Create Pre-authorisation
      tags:
      - Authorisations
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
  /payment-pre-auth-requests:
    post:
      description: 'Used to initiate the pre-authorisation process for payments for
        CbiGlobe `Institution` that contains the `INITIATE_ONETIME_PRE_AUTHORISATION_PAYMENTS`
        feature to authenticate the user. <br><br>Feature: `INITIATE_ONETIME_PRE_AUTHORISATION_PAYMENTS`'
      operationId: createPaymentPreAuthorisationRequest
      parameters:
      - description: __Optional__. Used to obtain the raw request and response to
          and from the <code>Institution</code>.
        explode: true
        in: query
        name: raw
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              Cbi Globe (PIS) Example Request:
                $ref: '#/components/examples/cbi-globe-pis-pre-auth-example-request'
            schema:
              $ref: '#/components/schemas/PaymentPreAuthorisationRequest'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                Berlin Group Example (PIS) Response:
                  $ref: '#/components/examples/berlin-group-pis-pre-auth-example-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfAccountAuthorisationResponse'
          description: Created
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Create Payment Pre-authorisation
      tags:
      - Authorisations
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
  /users:
    get:
      description: Get all the users configured in your application
      operationId: getUsers
      parameters:
      - description: __Optional__. Filter records based on the list of `applicationUserId`
          users provided.
        explode: true
        in: query
        name: filter[applicationUserId]
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Example Response:
                  $ref: '#/components/examples/users_example-response'
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationUser'
                type: array
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Users
      tags:
      - Users
      x-accepts: application/json;charset=UTF-8
    post:
      description: Create a new user in your application
      operationId: addUser
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              Create User Example Request:
                $ref: '#/components/examples/create-user-example-request'
            schema:
              $ref: '#/components/schemas/NewApplicationUser'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                Example Response:
                  $ref: '#/components/examples/create-user_example-response'
              schema:
                $ref: '#/components/schemas/ApplicationUser'
          description: Created
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Create User
      tags:
      - Users
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
  /users/{userUuid}:
    delete:
      description: Delete a user from your application along with any sub-resources
        (including consent resources on institution APIs if they exist)
      operationId: deleteUser
      parameters:
      - description: __Mandatory__. The Yapily generated UUID for the user.
        explode: false
        in: path
        name: userUuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Example Response:
                  $ref: '#/components/examples/delete-user_example-response'
              schema:
                $ref: '#/components/schemas/ApiResponseOfUserDeleteResponse'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Delete User
      tags:
      - Users
      x-accepts: application/json;charset=UTF-8
    get:
      description: Get a specific user using the user UUID
      operationId: getUser
      parameters:
      - description: __Mandatory__. The Yapily generated UUID for the user.
        explode: false
        in: path
        name: userUuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Example Response:
                  $ref: '#/components/examples/user_example-response'
              schema:
                $ref: '#/components/schemas/ApplicationUser'
          description: Ok
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  $ref: '#/components/examples/error-response-code-401'
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get User
      tags:
      - Users
      x-accepts: application/json;charset=UTF-8
  /users/{userUuid}/profile/consents:
    post:
      description: Used to add a consent to a `Financial Profile` for a `User`.  The
        response is asynchronous, returned with pending status, while retrieval of
        financial data is commenced.  There is a limit of 10,000 transactions for
        enrichment.
      operationId: createProfileConsent
      parameters:
      - description: __Mandatory__. The Yapily generated UUID for the user.
        explode: false
        in: path
        name: userUuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: __Mandatory__. The `consent-token` obtained from the original
          authorisation.
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileConsent'
          description: A successful response, returning a ProfileConsent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Bad Request.  Returned if the userUuid is not a valid UUID.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Either authentication credentials were not supplied, or they
            were invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Not Found.  Returned if the userUuid is not found for the `Application`.
      summary: Create Profile Consent
      tags:
      - Financial Profile
      x-accepts: application/json
  /users/{userUuid}/profile/consents/{profileConsentId}:
    delete:
      description: Used to delete a `ProfileConsent` for a `User`. This will remove
        the consent and all associated financial data from the 'Financial Profile'.
      operationId: deleteProfileConsent
      parameters:
      - description: __Mandatory__. The Yapily generated UUID for the user.
        explode: false
        in: path
        name: userUuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: __Mandatory__. The ID of the ProfileConsent
        explode: false
        in: path
        name: profileConsentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The ProfileConsent was deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Bad Request.  Returned if the userUuid is not a valid UUID.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Either authentication credentials were not supplied, or they
            were invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Not Found.  Returned if the userUuid or ProfileConsent is not
            found for the `Application`.
      summary: Delete Profile Consent
      tags:
      - Financial Profile
      x-accepts: application/json
    get:
      description: Used to retreive a specific ProfileConsent for a User.
      operationId: getProfileConsent
      parameters:
      - description: __Mandatory__. The Yapily generated UUID for the user.
        explode: false
        in: path
        name: userUuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: __Mandatory__. The ID of the ProfileConsent
        explode: false
        in: path
        name: profileConsentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileConsent'
          description: A successful response, returning a ProfileConsent.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Bad Request.  Returned if the userUuid is not a valid UUID.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Either authentication credentials were not supplied, or they
            were invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Not Found.  Returned if the userUuid or ProfileConsent is not
            found for the `Application`.
      summary: Get Profile Consent
      tags:
      - Financial Profile
      x-accepts: application/json
  /users/{userUuid}/profile:
    get:
      description: Used to retrieve a `FinancialProfile` for a `User`.  Status will
        be `PENDING` until all ProfileConsents are `COMPLETED`.
      operationId: getUserProfile
      parameters:
      - description: __Mandatory__. The Yapily generated UUID for the user.
        explode: false
        in: path
        name: userUuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialProfile'
          description: A successful response, returning a FinancialProfile.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Bad Request.  Returned if the userUuid is not a valid UUID.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Either authentication credentials were not supplied, or they
            were invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Not Found.  Returned if the userUuid is not found for the `Application`.
      summary: Get User Profile
      tags:
      - Financial Profile
      x-accepts: application/json
  /notifications/event-subscriptions:
    get:
      description: Get all event subscriptions that your application is subscribed
        to
      operationId: getEventSubscriptions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiListResponseOfEventSubscriptionResponse'
          description: Event subscriptions for the application
        "401":
          description: Unauthorized
      summary: Get Event Subscriptions
      tags:
      - Notifications
      x-beta: true
      x-accepts: application/json
    post:
      description: Used to subscribe to notifications relating to a specified event
        type.
      operationId: createEventSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseOfEventSubscriptionResponse'
          description: Event subscription created successfully
        "400":
          description: Bad request for missing required properties
        "401":
          description: Unauthorized
        "409":
          description: Event subscription already exist for the application
      summary: Create Event Subscription
      tags:
      - Notifications
      x-beta: true
      x-contentType: application/json
      x-accepts: application/json
  /notifications/event-subscriptions/{eventTypeId}:
    delete:
      description: Used to unsubscribe to notifications relating to a specified event
        type.
      operationId: deleteEventSubscriptionById
      parameters:
      - description: Unique identifier of the event type (for which notifications
          will be sent)
        explode: false
        in: path
        name: eventTypeId
        required: true
        schema:
          description: Valid event type Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseOfEventSubscriptionDeleteResponse'
          description: Event subscription deleted successfully
        "401":
          description: Unauthorized
        "404":
          description: Event subscription not found
      summary: Delete Event Subscription
      tags:
      - Notifications
      x-beta: true
      x-accepts: application/json
    get:
      description: Used to get details of your subscription to a specified event type.
      operationId: getEventSubscriptionById
      parameters:
      - description: Unique identifier of the event type (for which notifications
          will be sent)
        explode: false
        in: path
        name: eventTypeId
        required: true
        schema:
          description: Valid event type Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseOfEventSubscriptionResponse'
          description: Event subscription data found
        "401":
          description: Unauthorized
        "404":
          description: Event subscription not found
      summary: Get Event Subscription
      tags:
      - Notifications
      x-beta: true
      x-accepts: application/json
  /virtual-accounts/beneficiaries:
    get:
      description: Gets the list of beneficiaries (individual or business account)
        to which a Pay Out can be made.
      operationId: getVirtualAccountBeneficiaries
      parameters:
      - description: __Optional__. Data required to provide pagination
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: __Mandatory__. The customer or sub-customer id for which the
          request will be done
        example: 5a7294ab-6b7d-4681-835a-f9b9775c75db
        explode: false
        in: header
        name: client-id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get Beneficiaries Example Response:
                  description: Get Beneficiaries Example Response
                  value:
                    meta:
                      tracingId: 96169af01d394ad39658f17d53b49a5d
                    links:
                      self: "2"
                      first: "0"
                      last: "7"
                      next: "3"
                      previous: "1"
                    data:
                    - id: a2d43be3-972a-4458-9b6b-84ac15ae5287
                      nickname: MyBeneficiary123
                      paymentSchemes:
                      - FASTER_PAYMENTS
                      - CHAPS
                      type: INDIVIDUAL
                      name: Mr Jack Williams
                      birthDate: 1999-10-04
                      address:
                        addressLine: 12 New Street
                        townName: London
                        postCode: NE15 PLZ
                        country: GB
                      account:
                        currency: GBP
                        bankName: Lloyds Bank
                        bankAddress: London, WE12 ABC
                        bankCountry: GB
                        accountIdentifications:
                        - type: SORT_CODE
                          identification: "401016"
                        - type: ACCOUNT_NUMBER
                          identification: "71518920"
                      status: ACTIVE
              schema:
                $ref: '#/components/schemas/ApiListResponseOfVirtualAccountBeneficiary'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unauthorised. Credentials are missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Forbidden. Permission to access this endpoint is not granted.
        "424":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: A failure occured during interaction with a third party provider
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unexpected Error
      summary: Get List Of Beneficiaries
      tags:
      - Virtual Accounts
      x-beta: true
      x-accepts: application/json
    post:
      description: Create a new beneficiary (individual or business account) to which
        a Pay Out can be made. The beneficiary can be used from any virtual account
        that is held
      operationId: createVirtualAccountBeneficiary
      parameters:
      - description: __Mandatory__. The customer or sub-customer id for which the
          request will be done
        example: 5a7294ab-6b7d-4681-835a-f9b9775c75db
        explode: false
        in: header
        name: client-id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              Create Beneficiary Example Request:
                description: Create Beneficiary Example Request
                value:
                  nickname: MyBeneficiary123
                  paymentSchemes:
                  - FASTER_PAYMENTS
                  - CHAPS
                  type: INDIVIDUAL
                  name: Mr Jack Williams
                  birthDate: 1999-10-04
                  address:
                    addressLine: 12 New Street
                    townName: London
                    postCode: NE15 PLZ
                    country: GB
                  account:
                    currency: GBP
                    bankName: Lloyds Bank
                    bankAddress: London, WE12 ABC
                    bankCountry: GB
                    accountIdentifications:
                    - type: SORT_CODE
                      identification: "401016"
                    - type: ACCOUNT_NUMBER
                      identification: "71518920"
            schema:
              $ref: '#/components/schemas/VirtualAccountBeneficiaryRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                Create Beneficiary Example Response:
                  description: Create Beneficiary Example Response
                  value:
                    meta:
                      tracingId: 96169af01d394ad39658f17d53b49a5d
                    data:
                      id: a2d43be3-972a-4458-9b6b-84ac15ae5287
                      nickname: MyBeneficiary123
                      paymentSchemes:
                      - FASTER_PAYMENTS
                      - CHAPS
                      type: INDIVIDUAL
                      name: Mr Jack Williams
                      birthDate: 1999-10-04
                      address:
                        addressLine: 12 New Street
                        townName: London
                        postCode: NE15 PLZ
                        country: GB
                      account:
                        currency: GBP
                        bankName: Lloyds Bank
                        bankAddress: London, WE12 ABC
                        bankCountry: GB
                        accountIdentifications:
                        - type: SORT_CODE
                          identification: "401016"
                        - type: ACCOUNT_NUMBER
                          identification: "71518920"
                      status: ACTIVE
              schema:
                $ref: '#/components/schemas/ApiResponseOfVirtualAccountBeneficiary'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unauthorised. Credentials are missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Forbidden. Permission to access this endpoint is not granted.
        "424":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: A failure occured during interaction with a third party provider
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unexpected Error
      summary: Create Beneficiary
      tags:
      - Virtual Accounts
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json
  /virtual-accounts/beneficiaries/{beneficiaryId}:
    get:
      description: Get the details of a specific beneficiary (individual or business
        account) to which a Pay Out can be made from its id.
      operationId: getVirtualAccountBeneficiary
      parameters:
      - description: __Mandatory__. The Id of the requested beneficiary.
        explode: false
        in: path
        name: beneficiaryId
        required: true
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The customer or sub-customer id for which the
          request will be done
        example: 5a7294ab-6b7d-4681-835a-f9b9775c75db
        explode: false
        in: header
        name: client-id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get Beneficiaries Example Response:
                  description: Get Beneficiary Example Response
                  value:
                    meta:
                      tracingId: 96169af01d394ad39658f17d53b49a5d
                    data:
                      id: a2d43be3-972a-4458-9b6b-84ac15ae5287
                      nickname: MyBeneficiary123
                      paymentSchemes:
                      - FASTER_PAYMENTS
                      - CHAPS
                      type: INDIVIDUAL
                      name: Mr Jack Williams
                      birthDate: 1999-10-04
                      address:
                        addressLine: 12 New Street
                        townName: London
                        postCode: NE15 PLZ
                        country: GB
                      account:
                        currency: GBP
                        bankName: Lloyds Bank
                        bankAddress: London, WE12 ABC
                        bankCountry: GB
                        accountIdentifications:
                        - type: SORT_CODE
                          identification: "401016"
                        - type: ACCOUNT_NUMBER
                          identification: "71518920"
                      status: ACTIVE
              schema:
                $ref: '#/components/schemas/ApiResponseOfVirtualAccountBeneficiary'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unauthorised. Credentials are missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Forbidden. Permission to access this endpoint is not granted.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Not Found. Requested beneficiary is not found.
        "424":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: A failure occured during interaction with a third party provider
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unexpected Error
      summary: Get Beneficiary
      tags:
      - Virtual Accounts
      x-beta: true
      x-accepts: application/json
  /virtual-accounts/accounts:
    get:
      description: Retrieve a list of all virtual accounts held
      operationId: getVirtualAccounts
      parameters:
      - description: __Optional__. Filter accounts based on reference provided in
          order to help with identification of the account
        explode: true
        in: query
        name: nickname
        required: false
        schema:
          type: string
        style: form
      - description: __Optional__. Filter accounts based on three-letter ISO 4217
          currency code
        explode: true
        in: query
        name: currency
        required: false
        schema:
          pattern: '[A-Z]{3}'
          type: string
        style: form
      - description: __Optional__. Filter accounts based on their current state. One
          of PENDING, ACTIVE, FAILED, SUSPENDED or CLOSED
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - description: __Optional__. Data required to provide pagination
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: __Mandatory__. The customer or sub-customer id for which the
          request will be done
        example: 5a7294ab-6b7d-4681-835a-f9b9775c75db
        explode: false
        in: header
        name: client-id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get Accounts Example Response:
                  description: Get Accounts Example Response
                  value:
                    meta:
                      tracingId: sd2ad0343-a141-4143-8756-a3a3cefrt31c
                      count: 1
                    links:
                      self: "2"
                      first: "0"
                      last: "7"
                      next: "3"
                      previous: "1"
                    data:
                    - id: eb2ad083-a111-4143-8756-a3a3cef4031c
                      createdDateTime: 2020-04-24T00:30:19.951Z
                      status: ACTIVE
                      nickname: MyAccount123
                      currency: GBP
                      balances:
                      - type: INTERIM_AVAILABLE
                        balanceAmount:
                          amount: 10.5
                          currency: GBP
                      - type: INTERIM_BOOKED
                        balanceAmount:
                          amount: 10.5
                          currency: GBP
                      bankAccount:
                        currency: GBP
                        bankName: Lloyds Bank
                        bankAddress: WE12 ABC
                        bankCountry: GB
                        accountIdentifications:
                        - identification: "401016"
                          type: SORT_CODE
                        - identification: "71518920"
                          type: ACCOUNT_NUMBER
                        payInReference: Ref1249944
                    forwardedData: []
              schema:
                $ref: '#/components/schemas/ApiListResponseOfVirtualAccount'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unauthorised. Credentials are missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Forbidden. Permission to access this endpoint is not granted.
        "424":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: A failure occured during interaction with a third party provider
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unexpected Error
      summary: Get Accounts
      tags:
      - Virtual Accounts
      x-beta: true
      x-accepts: application/json
    post:
      description: Create a new virtual account
      operationId: createVirtualAccount
      parameters:
      - description: __Mandatory__. The customer or sub-customer id for which the
          request will be done
        example: 5a7294ab-6b7d-4681-835a-f9b9775c75db
        explode: false
        in: header
        name: client-id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              Create Account Example Request:
                description: Create Account Example Request
                value:
                  nickname: MyAccount123
                  currency: GBP
            schema:
              $ref: '#/components/schemas/VirtualAccountRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                Create Account Example Response:
                  description: Create Account Example Response
                  value:
                    meta:
                      tracingId: sd2ad0343-a141-4143-8756-a3a3cefrt31c
                      count: 1
                    data:
                      id: eb2ad083-a111-4143-8756-a3a3cef4031c
                      createdDateTime: 2020-04-24T00:30:19.951Z
                      status: PENDING
                      nickname: MyAccount123
                      currency: GBP
                      balances:
                      - type: INTERIM_AVAILABLE
                        balanceAmount:
                          amount: 0
                          currency: GBP
                      - type: INTERIM_BOOKED
                        balanceAmount:
                          amount: 0
                          currency: GBP
                    forwardedData: []
              schema:
                $ref: '#/components/schemas/ApiResponseOfVirtualAccount'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unauthorised. Credentials are missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Forbidden. Permission to access this endpoint is not granted.
        "424":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: A failure occured during interaction with a third party provider
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unexpected Error
      summary: Create Account
      tags:
      - Virtual Accounts
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json
  /virtual-accounts/payments/pay-outs:
    post:
      description: 'Initiate a payment from a specified virtual account to a previously
        added beneficiary using any of the schemes that it supports <br> When subscribed
        to virtualAccount.payOut.status notifications, further updates on payment
        processing status will be develivered asynchronously '
      operationId: createVirtualAccountPayOut
      parameters:
      - description: 'Uniquely identifies a request, such that requests made with
          a same value are considered retries <br> We recommend that a v4 UUID is
          supplied '
        example: a346fe67-1d81-4ccd-8409-bf9d6c07980f
        explode: false
        in: header
        name: idempotency-key
        required: true
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The customer or sub-customer id for which the
          request will be done
        example: 5a7294ab-6b7d-4681-835a-f9b9775c75db
        explode: false
        in: header
        name: client-id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              Initiate Pay Out Example Request:
                description: Create Pay Out Example Request
                value:
                  accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
                  amount:
                    amount: 10.5
                    currency: GBP
                  reference: Invoice 1267765
                  beneficiaryId: sd6ad034-a111-4143-8756-a3a3cef4045v
                  paymentScheme: FASTER_PAYMENTS
                  paymentDate: 2022-08-28
            schema:
              $ref: '#/components/schemas/VirtualAccountPayOutRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                Create Pay Out Example Response:
                  description: Create Pay Out Example Response
                  value:
                    meta:
                      tracingId: 96169af01d394ad39658f17d53b49a5d
                    data:
                      id: za2ad0234-a333-5435-8787-a3a3cef4031c
                      createdDateTime: 2022-08-24T00:30:19.951Z
                      paymentDate: 2022-08-28
                      type: PAY_OUT
                      paymentScheme: FASTER_PAYMENTS
                      amount:
                        amount: 10.5
                        currency: GBP
                      reference: Invoice 1267765
                      status: INITIATED
                      source:
                        type: ACCOUNT
                        accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
                      destination:
                        type: BENEFICIARY
                        beneficiaryId: sd6ad034-a111-4143-8756-a3a3cef4045v
              schema:
                $ref: '#/components/schemas/ApiResponseOfVirtualAccountPayment'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unauthorised. Credentials are missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Forbidden. Permission to access this endpoint is not granted.
        "424":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: A failure occured during interaction with a third party provider
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unexpected Error
      summary: Create Pay Out
      tags:
      - Virtual Accounts
      x-beta: true
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json
  /virtual-accounts/accounts/{accountId}:
    get:
      description: Get the details of a specific account using its Id
      operationId: getVirtualAccountById
      parameters:
      - description: __Mandatory__. The Id of the account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The customer or sub-customer id for which the
          request will be done
        example: 5a7294ab-6b7d-4681-835a-f9b9775c75db
        explode: false
        in: header
        name: client-id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get Accounts Example Response:
                  description: Get Account By Id Example Response
                  value:
                    meta:
                      tracingId: sd2ad0343-a141-4143-8756-a3a3cefrt31c
                      count: 1
                    data:
                      id: eb2ad083-a111-4143-8756-a3a3cef4031c
                      createdDateTime: 2020-04-24T00:30:19.951Z
                      status: ACTIVE
                      nickname: MyAccount123
                      currency: GBP
                      balances:
                      - type: INTERIM_AVAILABLE
                        balanceAmount:
                          amount: 10.5
                          currency: GBP
                      - type: INTERIM_BOOKED
                        balanceAmount:
                          amount: 10.5
                          currency: GBP
                      bankAccount:
                        currency: GBP
                        bankName: Lloyds Bank
                        bankAddress: WE12 ABC
                        bankCountry: GB
                        accountIdentifications:
                        - identification: "401016"
                          type: SORT_CODE
                        - identification: "71518920"
                          type: ACCOUNT_NUMBER
                        payInReference: Ref1249944
                    forwardedData: []
              schema:
                $ref: '#/components/schemas/ApiResponseOfVirtualAccount'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unauthorised. Credentials are missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Forbidden. Permission to access this endpoint is not granted.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Not Found. Resource requested is not found.
        "424":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: A failure occured during interaction with a third party provider
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unexpected Error
      summary: Get Account
      tags:
      - Virtual Accounts
      x-beta: true
      x-accepts: application/json
  /virtual-accounts/payments:
    get:
      description: Retrieve a list of virtual account payments
      operationId: getVirtualAccountPayments
      parameters:
      - description: __Optional__. Filter payments based on accountId
        example: eb2ad083-a111-4143-8756-a3a3cef4031c
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          type: string
        style: form
      - description: __Optional__. Filter payments based on the createdDateTime
        example: 2022-04-24T00:30:19.951Z
        explode: true
        in: query
        name: createdDateTimeFrom
        required: false
        schema:
          example: 2020-04-24T00:30:19.951Z
          format: date-time
          type: string
        style: form
      - description: __Optional__. Filter payments based on the createdDateTime
        example: 2022-04-24T00:30:19.951Z
        explode: true
        in: query
        name: createdDateTimeTo
        required: false
        schema:
          example: 2020-04-24T00:30:19.951Z
          format: date-time
          type: string
        style: form
      - description: __Optional__. Filter payments based on the payment status. One
          of INITIATED, PROCESSING, COMPLETED, FAILED
        example:
        - INITIATED
        - COMPLETED
        explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: __Optional__. Filter payments based on the payment type. One
          of PAY_IN, PAY_OUT, RETURN_IN, RETURN_OUT
        example:
        - PAY_IN
        - PAY_OUT
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: __Optional__. Data required to provide pagination
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: __Mandatory__. The customer or sub-customer id for which the
          request will be done
        example: 5a7294ab-6b7d-4681-835a-f9b9775c75db
        explode: false
        in: header
        name: client-id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get List of Payments Example Response:
                  description: Get List of Payments Example Response
                  value:
                    meta:
                      tracingId: sd2ad0343-a141-4143-8756-a3a3cefrt31c
                      count: 1
                    links:
                      self: "2"
                      first: "0"
                      last: "7"
                      next: "3"
                      previous: "1"
                    data:
                    - id: za2ad0234-a333-5435-8787-a3a3cef4031c
                      createdDateTime: 2022-08-24T00:30:19.951Z
                      paymentDate: 2022-08-28
                      type: PAY_OUT
                      paymentScheme: FASTER_PAYMENTS
                      amount:
                        amount: 10.5
                        currency: GBP
                      reference: Invoice 1267765
                      status: INITIATED
                      source:
                        type: ACCOUNT
                        accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
                      destination:
                        type: BENEFICIARY
                        beneficiaryId: sd6ad034-a111-4143-8756-a3a3cef4045v
                    forwardedData: []
              schema:
                $ref: '#/components/schemas/ApiListResponseOfVirtualAccountPayment'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unauthorised. Credentials are missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Forbidden. Permission to access this endpoint is not granted.
        "424":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: A failure occured during interaction with a third party provider
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unexpected Error
      summary: Get Payments
      tags:
      - Virtual Accounts
      x-beta: true
      x-accepts: application/json
  /virtual-accounts/payments/{id}:
    get:
      description: Get the details of a specific payment using its Id
      operationId: getPaymentsById
      parameters:
      - description: __Mandatory__. The id of the payment
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The customer or sub-customer id for which the
          request will be done
        example: 5a7294ab-6b7d-4681-835a-f9b9775c75db
        explode: false
        in: header
        name: client-id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get Payment Example Response:
                  description: Get Payment Example Response
                  value:
                    meta:
                      tracingId: 96169af01d394ad39658f17d53b49a5d
                    data:
                      id: za2ad0234-a333-5435-8787-a3a3cef4031c
                      createdDateTime: 2022-08-24T00:30:19.951Z
                      paymentDate: 2022-08-28
                      type: PAY_OUT
                      paymentScheme: FASTER_PAYMENTS
                      amount:
                        amount: 10.5
                        currency: GBP
                      reference: Invoice 1267765
                      status: INITIATED
                      source:
                        type: ACCOUNT
                        accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
                      destination:
                        type: BENEFICIARY
                        beneficiaryId: sd6ad034-a111-4143-8756-a3a3cef4045v
              schema:
                $ref: '#/components/schemas/ApiResponseOfVirtualAccountPayment'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unauthorised. Credentials are missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Forbidden. Permission to access this endpoint is not granted.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Not Found. Requested payment is not found.
        "424":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: A failure occured during interaction with a third party provider
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unexpected Error
      summary: Get Payment
      tags:
      - Virtual Accounts
      x-beta: true
      x-accepts: application/json
  /virtual-accounts/payments/transfers:
    post:
      description: Create a transfer between two virtual accounts
      operationId: createVirtualAccountTransfer
      parameters:
      - description: 'Uniquely identifies a request, such that requests made with
          a same value are considered retries <br> We recommend that a v4 UUID is
          supplied '
        example: a346fe67-1d81-4ccd-8409-bf9d6c07980f
        explode: false
        in: header
        name: idempotency-key
        required: true
        schema:
          type: string
        style: simple
      - description: __Mandatory__. The customer or sub-customer id for which the
          request will be done
        example: 5a7294ab-6b7d-4681-835a-f9b9775c75db
        explode: false
        in: header
        name: client-id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              Create Transfer Example Request:
                description: Create Transfer Example Request
                value:
                  amount:
                    amount: 10.5
                    currency: GBP
                  source:
                    accountId: a346fe67-1d81-4ccd-8409-bf9d6c07980f
                  destination:
                    accountId: e3465e67-1d81-4ccd-8409-tf9d6c07980r
                  reference: Ref 86543
            schema:
              $ref: '#/components/schemas/VirtualAccountTransferRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                Create Transfer Example Response:
                  description: Create Transfer Example Response
                  value:
                    meta:
                      tracingId: 96169af01d394ad39658f17d53b49a5d
                    data:
                      id: za2ad0234-a333-5435-8787-a3a3cef4031c
                      createdDateTime: 2022-08-24T00:30:19.951Z
                      type: TRANSFER
                      amount:
                        amount: 10.5
                        currency: GBP
                      reference: Invoice 1267765
                      status: INITIATED
                      source:
                        type: ACCOUNT
                        accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
                      destination:
                        type: ACCOUNT
                        accountId: sd6ad034-a111-4143-8756-a3a3cef4045v
              schema:
                $ref: '#/components/schemas/ApiResponseOfVirtualAccountPayment'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unauthorised. Credentials are missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Forbidden. Permission to access this endpoint is not granted.
        "424":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: A failure occured during interaction with a third party provider
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unexpected Error
      summary: Create Virtual Account Transfer
      tags:
      - Virtual Accounts
      x-beta: true
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json
  /virtual-accounts/payments/{paymentId}/pay-in-details:
    get:
      description: Get the details of a pay-in transaction
      operationId: getPayInDetails
      parameters:
      - description: Uniquely identifies a transaction
        example: 8b66abb5-5412-4454-aa7b-4e693ada6321
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get Pay-in Details Example Response:
                  description: Create Pay-in Details Example Response
                  value:
                    meta:
                      tracingId: 96169af01d394ad39658f17d53b49a5d
                    data:
                      id: 96169af01d394ad39658f17d53b49a5d
                      paymentScheme: FASTER_PAYMENTS
                      amount:
                        amount: 10.0
                        currency: GBP
                      reference: My part of meal
                      source:
                        type: EXTERNAL
                        accountIdentifications:
                        - type: SORT_CODE
                          identification: "401016"
                        - type: ACCOUNT_NUMBER
                          identification: "71518920"
                        - type: BIC
                          identification: BUKBGB22
                      name: Sam Sender
                      address: 10 Old Street
              schema:
                $ref: '#/components/schemas/ApiResponseOfVirtualAccountPayInDetails'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unauthorised. Credentials are missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Forbidden. Permission to access this endpoint is not granted.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Not Found. Requested beneficiary is not found.
        "424":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: A failure occured during interaction with a third party provider
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Unexpected Error
      summary: Get Pay-In Details
      tags:
      - Virtual Accounts
      x-beta: true
      x-accepts: application/json
  /variable-recurring-payments/sweeping/consents:
    post:
      description: Used to initiate the authorisation process and direct users to
        the login screen of their financial Institution in order to give their consent
        for Sweeping Variable Recurring Payments. The request would return an Authorization
        URL and an Identifier for the consent created at the Institution. First make
        sure that the payment feature you wish to execute is supported by the bank
        by checking the features array in [GET Institution](https://docs.yapily.com/api/#get-institution).
        <br><br>See [Redirect Payment Flows](https://docs.yapily.com/guides/payments/payment-authorisation-flows/redirect/)
        for more information about this flow.<br><br>Features:<ul><li>`INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING`</li></ul>
      operationId: createSweepingAuthorisation
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              UK Domestic Sweeping VRP Authorisation Example Request:
                description: UK Domestic Sweeping VRP Authorisation Example Request
                value:
                  applicationUserId: john.doe@company.com
                  institutionId: modelo-sandbox
                  callback: https://display-parameters.com/
                  controlParameters:
                    psuAuthenticationMethods:
                    - SCA_NOT_REQUIRED
                    periodicLimits:
                    - totalMaxAmount:
                        amount: 100
                        currency: GBP
                      frequency: DAILY
                      alignment: CONSENT
                    maxAmountPerPayment:
                      amount: 10
                      currency: GBP
                  initiationDetails:
                    reference: Own Account Sweeping
                    payer:
                      name: John Doe
                      accountIdentifications:
                      - type: ACCOUNT_NUMBER
                        identification: "87654321"
                      - type: SORT_CODE
                        identification: "654321"
                    payee:
                      name: John Doe
                      accountIdentifications:
                      - type: ACCOUNT_NUMBER
                        identification: "12345678"
                      - type: SORT_CODE
                        identification: "123456"
            schema:
              $ref: '#/components/schemas/SweepingAuthorisationRequest'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                UK Domestic Sweeping VRP Authorisation Example Response:
                  description: UK Domestic Sweeping VRP Authorisation Example Response
                  value:
                    meta:
                      tracingId: 96169af01d394ad39658f17d53b49a5d
                    data:
                      id: a2a9ec77-a479-4996-9896-4568e1968e7a
                      userId: 5350782b-60f3-489e-aae5-a24d8d679a07
                      applicationUserId: john.doe@company.com
                      institutionId: modelo-sandbox
                      status: AWAITING_AUTHORIZATION
                      createdAt: 2021-06-09T13:48:25.138Z
                      featureScope:
                      - EXISTING_PAYMENTS_DETAILS
                      - EXISTING_PAYMENT_INITIATION_DETAILS
                      - CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING
                      - VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION
                      - INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING
                      state: 80052c03007f41d589f64377eef4d620
                      institutionConsentId: sdp-6-25ff5bd8-d01c-422d-aa9e-8e68808bc899
                      authorisationUrl: https://ob19-auth1-ui.o3bank.co.uk/auth?client_id=e7f6b95b-5f35-419b-b301-8b08bcd946de&response_type=code+id_token&state=80052c03007f41d589f64377eef4d620&nonce=80052c03007f41d589f64377eef4d620&scope=openid+payments&redirect_uri=https%3A%2F%2Fauth.yapily.com%2F&request=eyJraWQiOiJnRTRvU3VaZDl4TVpUNXZDdTNWYy1mdktNak0iLCJhbGciOiJQUzI1NiJ9.eyJhdWQiOiJodHRwczovL29iMTktYXV0aDEtdWkubzNiYW5rLmNvLnVrIiwic2NvcGUiOiJvcGVuaWQgcGF5bWVudHMiLCJpc3MiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJjbGllbnRfaWQiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJyZXNwb25zZV90eXBlIjoiY29kZSBpZF90b2tlbiIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vYXV0aC55YXBpbHkuY29tLyIsInN0YXRlIjoiODAwNTJjMDMwMDdmNDFkNTg5ZjY0Mzc3ZWVmNGQ2MjAiLCJjbGFpbXMiOnsiaWRfdG9rZW4iOnsiYWNyIjp7InZhbHVlIjoidXJuOm9wZW5iYW5raW5nOnBzZDI6c2NhIiwiZXNzZW50aWFsIjp0cnVlfSwib3BlbmJhbmtpbmdfaW50ZW50X2lkIjp7InZhbHVlIjoic2RwLTYtMjVmZjViZDgtZDAxYy00MjJkLWFhOWUtOGU2ODgwOGJjODk5IiwiZXNzZW50aWFsIjp0cnVlfX0sInVzZXJpbmZvIjp7Im9wZW5iYW5raW5nX2ludGVudF9pZCI6eyJ2YWx1ZSI6InNkcC02LTI1ZmY1YmQ4LWQwMWMtNDIyZC1hYTllLThlNjg4MDhiYzg5OSIsImVzc2VudGlhbCI6dHJ1ZX19fSwibm9uY2UiOiI4MDA1MmMwMzAwN2Y0MWQ1ODlmNjQzNzdlZWY0ZDYyMCIsImp0aSI6ImUxYjZmMWM4LTQ1ZTktNGM0NS05NGE0LWExMTY1Nzk2NjZiNiIsImlhdCI6MTYyMzI0NjUwNSwiZXhwIjoxNjIzMjQ4MzA1fQ.C5YkClHiDOWl1CKnmEY0gM_JizUuELp2-k7sDjsWV5T-mgTWviO-jM7iVfCf4MsU6batLSBmeUFLco1b3S8PTQkAzwM3laHIgbfDAb_6bYkSBTbPriyzKcC8xAwhX3VdvWtb9qqdrn9zXSmIIITBhJdMzk1cgIjyETD7WNPln839eGP1-w8iB8yDOJOkYGRHJ850mQY-lk61GegmKs5kaxtYPIhrG2gygIi3JsN-uQJ6YOl2-5pylTEcJbuwhFiyeePdqHZdabqW2BSA6lDKQbMV_Zow_zhSWoFFv6RZdXCQpt4TBRj1W7tzZQKin-MC-TpzaF1q07RpSy0NtlN85w
                      qrCodeUrl: https://images.yapily.com/image/2bbb79b8-2c4a-4c8e-9132-0636879437da/1623246505?size=0
                      controlParameters:
                        psuAuthenticationMethods:
                        - SCA_NOT_REQUIRED
                        periodicLimits:
                        - totalMaxAmount:
                            amount: 100
                            currency: GBP
                          frequency: DAILY
                          alignment: CONSENT
                        maxAmountPerPayment:
                          amount: 10
                          currency: GBP
                      payer:
                        name: John Doe
                        accountIdentifications:
                        - type: ACCOUNT_NUMBER
                          identification: "87654321"
                        - type: SORT_CODE
                          identification: "654321"
                      initiationDetails:
                        reference: Own Account Sweeping
                        payer:
                          name: John Doe
                          accountIdentifications:
                          - type: ACCOUNT_NUMBER
                            identification: "87654321"
                          - type: SORT_CODE
                            identification: "654321"
                        payee:
                          name: John Doe
                          accountIdentifications:
                          - type: ACCOUNT_NUMBER
                            identification: "12345678"
                          - type: SORT_CODE
                            identification: "123456"
              schema:
                $ref: '#/components/schemas/ApiResponseOfSweepingAuthorisationResponse'
          description: Created
        "401":
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  description: Error Response
                  value:
                    error:
                      tracingId: 0c2d0973bdd24224a65e5d0f7d1b6154
                      code: 401
                      status: UNAUTHORIZED
                      supportUrl: https://support.yapily.com/
                      source: YAPILY
                      issues:
                      - type: CREDENTIALS
                        code: CREDENTIALS_MISING
                        message: Authentication header not present
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  description: Error Response
                  value:
                    error:
                      tracingId: 0c2d0973bdd24224a65e5d0f7d1b6154
                      code: 400
                      status: BAD_REQUEST
                      supportUrl: https://support.yapily.com/
                      source: YAPILY
                      issues:
                      - type: BAD_REQUEST
                        code: BAD_REQUEST
                        message: The server could not understand the request due to
                          invalid syntax
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Create Sweeping Variable Recurring Payment Authorisation
      tags:
      - Variable Recurring Payments
      x-beta: true
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
  /variable-recurring-payments/non-sweeping/consents:
    post:
      description: Used to initiate the authorisation process and direct users to
        the login screen of their financial Institution in order to give their consent
        for Non-Sweeping Variable Recurring Payments. The request would return an
        Authorization URL and an Identifier for the consent created at the Institution.
        First make sure that the payment feature you wish to execute is supported
        by the bank by checking the features array in [GET Institution](https://docs.yapily.com/api/#get-institution).
        <br><br>See [Redirect Payment Flows](https://docs.yapily.com/guides/payments/payment-authorisation-flows/redirect/)
        for more information about this flow.<br><br>Features:<ul><li>`INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING`</li></ul>
      operationId: createNonSweepingAuthorisation
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              UK Domestic Non-Sweeping VRP Authorisation Example Request:
                description: UK Domestic Non-Sweeping VRP Authorisation Example Request
                value:
                  applicationUserId: john.doe@company.com
                  institutionId: modelo-sandbox
                  callback: https://display-parameters.com/
                  controlParameters:
                    psuAuthenticationMethods:
                    - SCA_NOT_REQUIRED
                    periodicLimits:
                    - totalMaxAmount:
                        amount: 100
                        currency: GBP
                      frequency: DAILY
                      alignment: CONSENT
                      maxNumberOfPayments: 1
                    maxAmountPerPayment:
                      amount: 10
                      currency: GBP
                    maxCumulativeAmount:
                      amount: 100
                      currency: GBP
                    maxCumulativeNumberOfPayments: 10
                  initiationDetails:
                    reference: Bill Payment
                    payer:
                      name: John Doe
                      accountIdentifications:
                      - type: ACCOUNT_NUMBER
                        identification: "87654321"
                      - type: SORT_CODE
                        identification: "654321"
                    payee:
                      name: Thames Water
                      accountIdentifications:
                      - type: ACCOUNT_NUMBER
                        identification: "12345678"
                      - type: SORT_CODE
                        identification: "123456"
            schema:
              $ref: '#/components/schemas/NonSweepingAuthorisationRequest'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                UK Domestic Non-Sweeping VRP Authorisation Example Response:
                  description: UK Domestic Non-Sweeping VRP Authorisation Example
                    Response
                  value:
                    meta:
                      tracingId: 96169af01d394ad39658f17d53b49a5d
                    data:
                      id: a2a9ec77-a479-4996-9896-4568e1968e7a
                      userId: 5350782b-60f3-489e-aae5-a24d8d679a07
                      applicationUserId: john.doe@company.com
                      institutionId: modelo-sandbox
                      status: AWAITING_AUTHORIZATION
                      createdAt: 2021-06-09T13:48:25.138Z
                      featureScope:
                      - EXISTING_PAYMENTS_DETAILS
                      - EXISTING_PAYMENT_INITIATION_DETAILS
                      - CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING
                      - VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION
                      - INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING
                      state: 80052c03007f41d589f64377eef4d620
                      institutionConsentId: sdp-6-25ff5bd8-d01c-422d-aa9e-8e68808bc899
                      authorisationUrl: https://ob19-auth1-ui.o3bank.co.uk/auth?client_id=e7f6b95b-5f35-419b-b301-8b08bcd946de&response_type=code+id_token&state=80052c03007f41d589f64377eef4d620&nonce=80052c03007f41d589f64377eef4d620&scope=openid+payments&redirect_uri=https%3A%2F%2Fauth.yapily.com%2F&request=eyJraWQiOiJnRTRvU3VaZDl4TVpUNXZDdTNWYy1mdktNak0iLCJhbGciOiJQUzI1NiJ9.eyJhdWQiOiJodHRwczovL29iMTktYXV0aDEtdWkubzNiYW5rLmNvLnVrIiwic2NvcGUiOiJvcGVuaWQgcGF5bWVudHMiLCJpc3MiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJjbGllbnRfaWQiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJyZXNwb25zZV90eXBlIjoiY29kZSBpZF90b2tlbiIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vYXV0aC55YXBpbHkuY29tLyIsInN0YXRlIjoiODAwNTJjMDMwMDdmNDFkNTg5ZjY0Mzc3ZWVmNGQ2MjAiLCJjbGFpbXMiOnsiaWRfdG9rZW4iOnsiYWNyIjp7InZhbHVlIjoidXJuOm9wZW5iYW5raW5nOnBzZDI6c2NhIiwiZXNzZW50aWFsIjp0cnVlfSwib3BlbmJhbmtpbmdfaW50ZW50X2lkIjp7InZhbHVlIjoic2RwLTYtMjVmZjViZDgtZDAxYy00MjJkLWFhOWUtOGU2ODgwOGJjODk5IiwiZXNzZW50aWFsIjp0cnVlfX0sInVzZXJpbmZvIjp7Im9wZW5iYW5raW5nX2ludGVudF9pZCI6eyJ2YWx1ZSI6InNkcC02LTI1ZmY1YmQ4LWQwMWMtNDIyZC1hYTllLThlNjg4MDhiYzg5OSIsImVzc2VudGlhbCI6dHJ1ZX19fSwibm9uY2UiOiI4MDA1MmMwMzAwN2Y0MWQ1ODlmNjQzNzdlZWY0ZDYyMCIsImp0aSI6ImUxYjZmMWM4LTQ1ZTktNGM0NS05NGE0LWExMTY1Nzk2NjZiNiIsImlhdCI6MTYyMzI0NjUwNSwiZXhwIjoxNjIzMjQ4MzA1fQ.C5YkClHiDOWl1CKnmEY0gM_JizUuELp2-k7sDjsWV5T-mgTWviO-jM7iVfCf4MsU6batLSBmeUFLco1b3S8PTQkAzwM3laHIgbfDAb_6bYkSBTbPriyzKcC8xAwhX3VdvWtb9qqdrn9zXSmIIITBhJdMzk1cgIjyETD7WNPln839eGP1-w8iB8yDOJOkYGRHJ850mQY-lk61GegmKs5kaxtYPIhrG2gygIi3JsN-uQJ6YOl2-5pylTEcJbuwhFiyeePdqHZdabqW2BSA6lDKQbMV_Zow_zhSWoFFv6RZdXCQpt4TBRj1W7tzZQKin-MC-TpzaF1q07RpSy0NtlN85w
                      qrCodeUrl: https://images.yapily.com/image/2bbb79b8-2c4a-4c8e-9132-0636879437da/1623246505?size=0
                      controlParameters:
                        psuAuthenticationMethods:
                        - SCA_NOT_REQUIRED
                        periodicLimits:
                        - totalMaxAmount:
                            amount: 100
                            currency: GBP
                          frequency: DAILY
                          alignment: CONSENT
                          maxNumberOfPayments: 1
                        maxAmountPerPayment:
                          amount: 10
                          currency: GBP
                        maxCumulativeAmount:
                          amount: 100
                          currency: GBP
                        maxCumulativeNumberOfPayments: 10
                      payer:
                        name: John Doe
                        accountIdentifications:
                        - type: ACCOUNT_NUMBER
                          identification: "87654321"
                        - type: SORT_CODE
                          identification: "654321"
                      initiationDetails:
                        reference: Bill Payment
                        payer:
                          name: John Doe
                          accountIdentifications:
                          - type: ACCOUNT_NUMBER
                            identification: "87654321"
                          - type: SORT_CODE
                            identification: "654321"
                        payee:
                          name: Thames Water
                          accountIdentifications:
                          - type: ACCOUNT_NUMBER
                            identification: "12345678"
                          - type: SORT_CODE
                            identification: "123456"
              schema:
                $ref: '#/components/schemas/ApiResponseOfNonSweepingAuthorisationResponse'
          description: Created
        "401":
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  description: Error Response
                  value:
                    error:
                      tracingId: 0c2d0973bdd24224a65e5d0f7d1b6154
                      code: 401
                      status: UNAUTHORIZED
                      supportUrl: https://support.yapily.com/
                      source: YAPILY
                      issues:
                      - type: CREDENTIALS
                        code: CREDENTIALS_MISING
                        message: Authentication header not present
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  description: Error Response
                  value:
                    error:
                      tracingId: 0c2d0973bdd24224a65e5d0f7d1b6154
                      code: 400
                      status: BAD_REQUEST
                      supportUrl: https://support.yapily.com/
                      source: YAPILY
                      issues:
                      - type: BAD_REQUEST
                        code: BAD_REQUEST
                        message: The server could not understand the request due to
                          invalid syntax
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Create Non-Sweeping Variable Recurring Payment Authorisation
      tags:
      - Variable Recurring Payments
      x-beta: true
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
  /variable-recurring-payments/payments:
    post:
      description: Used to submit a Variable Recurring Payments transaction after
        obtaining the user's authorisation. First make sure that the payment feature
        you wish to execute is supported by the bank by checking the features array
        in [GET Institution](https://docs.yapily.com/api/#get-institution). <br><br>Features:<ul><li>`CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING`</li><li>`CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING`</li></ul>
      operationId: createVrpPayment
      parameters:
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              UK Domestic VRP Payment Example Request:
                description: UK Domestic VRP Payment Example Request
                value:
                  paymentIdempotencyId: 234g87t58tgeuo848wudjew489
                  psuAuthenticationMethod: SCA_NOT_REQUIRED
                  paymentAmount:
                    amount: 10
                    currency: GBP
            schema:
              $ref: '#/components/schemas/SubmissionRequest'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                UK Domestic VRP Payment Example Response:
                  description: UK Domestic VRP Payment Example Response
                  value:
                    meta:
                      tracingId: 0f14e900011b445fa6b6c2c4272d7321
                    data:
                      id: a9582f8e-08be-4cca-9f01-1ad3be96532d
                      paymentIdempotencyId: 234g87t58tgeuo848wudjew489
                      institutionConsentId: PF23232222DD
                      status: COMPLETED
                      statusDetails:
                        status: COMPLETED
                        isoStatus:
                          code: ACCP
                          name: AcceptedCustomerProfile
                      initiationDetails:
                        reference: Own Account Sweeping
                        payer:
                          name: John Doe
                          accountIdentifications:
                          - type: ACCOUNT_NUMBER
                            identification: "87654321"
                          - type: SORT_CODE
                            identification: "654321"
                        payee:
                          name: John Doe
                          accountIdentifications:
                          - type: ACCOUNT_NUMBER
                            identification: "12345678"
                          - type: SORT_CODE
                            identification: "123456"
                      submissionDetails:
                        reference: Own Account Sweeping
                        payee:
                          name: John Doe
                          accountIdentifications:
                          - type: ACCOUNT_NUMBER
                            identification: "12345678"
                          - type: SORT_CODE
                            identification: "123456"
                        paymentAmount:
                          amount: 10
                          currency: GBP
                      payer:
                        name: John Doe
                        accountIdentifications:
                        - type: ACCOUNT_NUMBER
                          identification: "87654321"
                        - type: SORT_CODE
                          identification: "654321"
                      refundAccount:
                        accountIdentifications:
                        - identification: "400400"
                          type: SORT_CODE
                        - identification: "99999999"
                          type: ACCOUNT_NUMBER
                        name: Refund Account
                      expectedSettlementTime: 2022-03-02T12:00:00.000Z
                      expectedExecutionTime: 2022-03-02T12:00:00.000Z
              schema:
                $ref: '#/components/schemas/ApiResponseOfSubmissionResponse'
          description: Created
        "401":
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  description: Error Response
                  value:
                    error:
                      tracingId: 0c2d0973bdd24224a65e5d0f7d1b6154
                      code: 401
                      status: UNAUTHORIZED
                      supportUrl: https://support.yapily.com/
                      source: YAPILY
                      issues:
                      - type: CREDENTIALS
                        code: CREDENTIALS_MISING
                        message: Authentication header not present
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  description: Error Response
                  value:
                    error:
                      tracingId: 0c2d0973bdd24224a65e5d0f7d1b6154
                      code: 400
                      status: BAD_REQUEST
                      supportUrl: https://support.yapily.com/
                      source: YAPILY
                      issues:
                      - type: BAD_REQUEST
                        code: BAD_REQUEST
                        message: The server could not understand the request due to
                          invalid syntax
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Create Variable Recurring Payment
      tags:
      - Variable Recurring Payments
      x-beta: true
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
  /variable-recurring-payments/sweeping/consents/{consentId}:
    get:
      description: Get Sweeping Variable Recurring Payments consent details using
        the consent Id
      operationId: getSweepingVrpConsentById
      parameters:
      - description: __Mandatory__. The consent Id of the `Variable Recurring Payments
          Consent` to retrieve.
        explode: false
        in: path
        name: consentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Get Sweeping Variable Recurring Payments Consent Example Response:
                  description: Get Sweeping Variable Recurring Payments Consent Example
                    Response
                  value:
                    meta:
                      tracingId: 679e7bb6cd45416a9a9a8d004c5315da
                    data:
                      id: 56a42244-414a-4b52-8c4f-4ad2a50e82fe
                      userId: ca412fdf-5a30-43a2-88b7-5964a24a8e55
                      applicationUserId: john.doe@company.com
                      institutionId: modelo-sandbox
                      status: AUTHORIZED
                      createdAt: 2021-06-08T10:59:35.138Z
                      featureScope:
                      - EXISTING_PAYMENTS_DETAILS
                      - EXISTING_PAYMENT_INITIATION_DETAILS
                      - CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING
                      - VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION
                      - INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING
                      consentToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJJTlNUSVRVVElPTiI6Im1vZGVsby1zYW5kYm94IiwiQ09OU0VOVCI6IjU2YTQyMjQ0LTQxNGEtNGI1Mi04YzRmLTRhZDJhNTBlODJmZSIsIkFQUExJQ0FUSU9OX1VTRVJfSUQiOiJtb2ZlLTIiLCJVU0VSIjoiY2E0MTJmZGYtNWEzMC00M2EyLTg4YjctNTk2NGEyNGE4ZTU1In0.gorwpnUjSr5dzQJLR32M2geWOj7yK9xMsZmq27ssY9xP_xGmWfUL_aqVHYyQ4r5KWw6Xb6RjvO839st8chJLtg
                      state: a09f8ff9c1284444aa635267e05f76e1
                      authorizedAt: 2021-06-08T10:59:53.288Z
                      institutionConsentId: aac-605d48f2-2a0e-4594-81a9-996524fa3b2a
                      controlParameters:
                        psuAuthenticationMethods:
                        - SCA_NOT_REQUIRED
                        periodicLimits:
                        - totalMaxAmount:
                            amount: 100
                            currency: GBP
                          frequency: DAILY
                          alignment: CONSENT
                        maxAmountPerPayment:
                          amount: 10
                          currency: GBP
                      payer:
                        name: John Doe
                        accountIdentifications:
                        - type: ACCOUNT_NUMBER
                          identification: "87654321"
                        - type: SORT_CODE
                          identification: "654321"
                      initiationDetails:
                        reference: Own Account Sweeping
                        payer:
                          name: John Doe
                          accountIdentifications:
                          - type: ACCOUNT_NUMBER
                            identification: "87654321"
                          - type: SORT_CODE
                            identification: "654321"
                        payee:
                          name: John Doe
                          accountIdentifications:
                          - type: ACCOUNT_NUMBER
                            identification: "12345678"
                          - type: SORT_CODE
                            identification: "123456"
              schema:
                $ref: '#/components/schemas/ApiResponseOfSweepingAuthorisationResponse'
          description: Ok
        "401":
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  description: Error Response
                  value:
                    error:
                      tracingId: 0c2d0973bdd24224a65e5d0f7d1b6154
                      code: 401
                      status: UNAUTHORIZED
                      supportUrl: https://support.yapily.com/
                      source: YAPILY
                      issues:
                      - type: CREDENTIALS
                        code: CREDENTIALS_MISING
                        message: Authentication header not present
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  description: Error Response
                  value:
                    error:
                      tracingId: 0c2d0973bdd24224a65e5d0f7d1b6154
                      code: 400
                      status: BAD_REQUEST
                      supportUrl: https://support.yapily.com/
                      source: YAPILY
                      issues:
                      - type: BAD_REQUEST
                        code: BAD_REQUEST
                        message: The server could not understand the request due to
                          invalid syntax
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Sweeping Variable Recurring Payment Consent Details
      tags:
      - Variable Recurring Payments
      x-beta: true
      x-accepts: application/json;charset=UTF-8
  /variable-recurring-payments/non-sweeping/consents/{consentId}:
    get:
      description: Get Non-Sweeping Variable Recurring Payments consent details using
        the consent Id
      operationId: getpNonSweepingVrpConsentById
      parameters:
      - description: __Mandatory__. The consent Id of the `Variable Recurring Payments
          Consent` to retrieve.
        explode: false
        in: path
        name: consentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Get Non-Sweeping Variable Recurring Payments Consent Example Response:
                  description: Get Non-Sweeping Variable Recurring Payments Consent
                    Example Response
                  value:
                    meta:
                      tracingId: 679e7bb6cd45416a9a9a8d004c5315da
                    data:
                      id: 56a42244-414a-4b52-8c4f-4ad2a50e82fe
                      userId: ca412fdf-5a30-43a2-88b7-5964a24a8e55
                      applicationUserId: john.doe@company.com
                      institutionId: modelo-sandbox
                      status: AUTHORIZED
                      createdAt: 2021-06-08T10:59:35.138Z
                      featureScope:
                      - EXISTING_PAYMENTS_DETAILS
                      - EXISTING_PAYMENT_INITIATION_DETAILS
                      - CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING
                      - VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION
                      - INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING
                      consentToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJJTlNUSVRVVElPTiI6Im1vZGVsby1zYW5kYm94IiwiQ09OU0VOVCI6IjU2YTQyMjQ0LTQxNGEtNGI1Mi04YzRmLTRhZDJhNTBlODJmZSIsIkFQUExJQ0FUSU9OX1VTRVJfSUQiOiJtb2ZlLTIiLCJVU0VSIjoiY2E0MTJmZGYtNWEzMC00M2EyLTg4YjctNTk2NGEyNGE4ZTU1In0.gorwpnUjSr5dzQJLR32M2geWOj7yK9xMsZmq27ssY9xP_xGmWfUL_aqVHYyQ4r5KWw6Xb6RjvO839st8chJLtg
                      state: a09f8ff9c1284444aa635267e05f76e1
                      authorizedAt: 2021-06-08T10:59:53.288Z
                      institutionConsentId: aac-605d48f2-2a0e-4594-81a9-996524fa3b2a
                      controlParameters:
                        psuAuthenticationMethods:
                        - SCA_NOT_REQUIRED
                        periodicLimits:
                        - totalMaxAmount:
                            amount: 100
                            currency: GBP
                          frequency: DAILY
                          alignment: CONSENT
                          maxNumberOfPayments: 10
                        maxAmountPerPayment:
                          amount: 10
                          currency: GBP
                        maxCumulativeAmount:
                          amount: 100
                          currency: GBP
                        maxCumulativeNumberOfPayments: 10
                      payer:
                        name: John Doe
                        accountIdentifications:
                        - type: ACCOUNT_NUMBER
                          identification: "87654321"
                        - type: SORT_CODE
                          identification: "654321"
                      initiationDetails:
                        reference: Bill Payment
                        payer:
                          name: John Doe
                          accountIdentifications:
                          - type: ACCOUNT_NUMBER
                            identification: "87654321"
                          - type: SORT_CODE
                            identification: "654321"
                        payee:
                          name: Thames Water
                          accountIdentifications:
                          - type: ACCOUNT_NUMBER
                            identification: "12345678"
                          - type: SORT_CODE
                            identification: "123456"
              schema:
                $ref: '#/components/schemas/ApiResponseOfNonSweepingAuthorisationResponse'
          description: Ok
        "401":
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  description: Error Response
                  value:
                    error:
                      tracingId: 0c2d0973bdd24224a65e5d0f7d1b6154
                      code: 401
                      status: UNAUTHORIZED
                      supportUrl: https://support.yapily.com/
                      source: YAPILY
                      issues:
                      - type: CREDENTIALS
                        code: CREDENTIALS_MISING
                        message: Authentication header not present
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  description: Error Response
                  value:
                    error:
                      tracingId: 0c2d0973bdd24224a65e5d0f7d1b6154
                      code: 400
                      status: BAD_REQUEST
                      supportUrl: https://support.yapily.com/
                      source: YAPILY
                      issues:
                      - type: BAD_REQUEST
                        code: BAD_REQUEST
                        message: The server could not understand the request due to
                          invalid syntax
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Non-Sweeping Variable Recurring Payment Consent Details
      tags:
      - Variable Recurring Payments
      x-beta: true
      x-accepts: application/json;charset=UTF-8
  /variable-recurring-payments/funds-confirmation:
    post:
      description: Used to confirm funds on the Payer account to execute Variable
        Recurring Payments after obtaining the user's authorisation. <br><br>Features:<ul><li>`VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION`</li></ul>
      operationId: createVrpFundsConfirmation
      parameters:
      - description: __Mandatory__. The `consent-token` containing the user's authorisation
          to make the request.
        example: '{consentToken}'
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              UK Domestic VRP Funds Confirmation Example Request:
                description: UK Domestic VRP Funds Confirmation Example Request
                value:
                  reference: Own Account Sweeping
                  paymentAmount:
                    amount: 10
                    currency: GBP
            schema:
              $ref: '#/components/schemas/FundsConfirmationRequest'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                UK Domestic VRP Funds Confirmation Example Response:
                  description: UK Domestic VRP Funds Confirmation Example Response
                  value:
                    meta:
                      tracingId: 0f14e900011b445fa6b6c2c4272d7321
                    data:
                      id: a9582f8e-08be-4cca-9f01-1ad3be96532d
                      fundsAvailable:
                        fundsAvailable: true
                        fundsAvailableAt: 2021-06-08T10:59:35.138Z
                      reference: Own Account Sweeping
                      paymentAmount:
                        amount: 10
                        currency: GBP
              schema:
                $ref: '#/components/schemas/ApiResponseOfFundsConfirmationResponse'
          description: Created
        "401":
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  description: Error Response
                  value:
                    error:
                      tracingId: 0c2d0973bdd24224a65e5d0f7d1b6154
                      code: 401
                      status: UNAUTHORIZED
                      supportUrl: https://support.yapily.com/
                      source: YAPILY
                      issues:
                      - type: CREDENTIALS
                        code: CREDENTIALS_MISING
                        message: Authentication header not present
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  description: Error Response
                  value:
                    error:
                      tracingId: 0c2d0973bdd24224a65e5d0f7d1b6154
                      code: 400
                      status: BAD_REQUEST
                      supportUrl: https://support.yapily.com/
                      source: YAPILY
                      issues:
                      - type: BAD_REQUEST
                        code: BAD_REQUEST
                        message: The server could not understand the request due to
                          invalid syntax
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Confirm Funds for Variable Recurring Payment
      tags:
      - Variable Recurring Payments
      x-beta: true
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json;charset=UTF-8
  /variable-recurring-payments/payments/{paymentId}/details:
    get:
      description: Get Variable Recurring Payment details using the Payment Id
      operationId: getVrpPaymentDetails
      parameters:
      - description: __Mandatory__. The Payment Id of the `Variable Recurring Payments`
          to retrieve.
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: __Mandatory__. The consent token containing the user's authorisation
          to make the `Variable Recurring Payments` request.
        explode: false
        in: header
        name: consent
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              examples:
                Get Variable Recurring Payment Details Example Response:
                  description: Get Variable Recurring Payment Details Example Response
                  value:
                    meta:
                      tracingId: 679e7bb6cd45416a9a9a8d004c5315da
                    data:
                      id: a9582f8e-08be-4cca-9f01-1ad3be96532d
                      paymentIdempotencyId: 234g87t58tgeuo848wudjew489
                      institutionConsentId: PF23232222DD
                      status: COMPLETED
                      statusDetails:
                        status: COMPLETED
                        isoStatus:
                          code: ACCP
                          name: AcceptedCustomerProfile
                      initiationDetails:
                        reference: Own Account Sweeping
                        payer:
                          name: John Doe
                          accountIdentifications:
                          - type: ACCOUNT_NUMBER
                            identification: "87654321"
                          - type: SORT_CODE
                            identification: "654321"
                        payee:
                          name: John Doe
                          accountIdentifications:
                          - type: ACCOUNT_NUMBER
                            identification: "12345678"
                          - type: SORT_CODE
                            identification: "123456"
                      submissionDetails:
                        reference: Own Account Sweeping
                        payee:
                          name: John Doe
                          accountIdentifications:
                          - type: ACCOUNT_NUMBER
                            identification: "12345678"
                          - type: SORT_CODE
                            identification: "123456"
                        paymentAmount:
                          amount: 10
                          currency: GBP
                      payer:
                        name: John Doe
                        accountIdentifications:
                        - type: ACCOUNT_NUMBER
                          identification: "87654321"
                        - type: SORT_CODE
                          identification: "654321"
                      refundAccount:
                        accountIdentifications:
                        - identification: "400400"
                          type: SORT_CODE
                        - identification: "99999999"
                          type: ACCOUNT_NUMBER
                        name: Refund Account
                      expectedSettlementTime: 2022-03-02T12:00:00.000Z
                      expectedExecutionTime: 2022-03-02T12:00:00.000Z
              schema:
                $ref: '#/components/schemas/ApiResponseOfSubmissionResponse'
          description: Ok
        "401":
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  description: Error Response
                  value:
                    error:
                      tracingId: 0c2d0973bdd24224a65e5d0f7d1b6154
                      code: 401
                      status: UNAUTHORIZED
                      supportUrl: https://support.yapily.com/
                      source: YAPILY
                      issues:
                      - type: CREDENTIALS
                        code: CREDENTIALS_MISING
                        message: Authentication header not present
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                Error Response:
                  description: Error Response
                  value:
                    error:
                      tracingId: 0c2d0973bdd24224a65e5d0f7d1b6154
                      code: 400
                      status: BAD_REQUEST
                      supportUrl: https://support.yapily.com/
                      source: YAPILY
                      issues:
                      - type: BAD_REQUEST
                        code: BAD_REQUEST
                        message: The server could not understand the request due to
                          invalid syntax
              schema:
                $ref: '#/components/schemas/ApiResponseError'
          description: Error Response
      summary: Get Variable Recurring Payment Details
      tags:
      - Variable Recurring Payments
      x-beta: true
      x-accepts: application/json;charset=UTF-8
components:
  examples:
    berlin-group-example-acc-auth-request:
      description: Berlin Group Example Request
      value:
        applicationUserId: john.doe@company.com
        institutionId: n26
    berlin-group-example-embedded-acc-auth-request:
      description: Berlin Group Example Request
      value:
        applicationUserId: john.doe@company.com
        institutionId: fiducia-sandbox
        userCredentials:
          id: "6154057725"
          password: PISPWD12
    berlin-group-sca-code-example-request:
      description: Berlin Group (SCA Code) Example Request
      value:
        applicationUserId: john.doe@company.com
        institutionId: fiducia-sandbox
        scaCode: "6154057725"
    berlin-group-selected-sca-method-example-request:
      description: Berlin Group (Selected SCA Method) Example Request
      value:
        applicationUserId: john.doe@company.com
        institutionId: fiducia-sandbox
        selectedScaMethod:
          id: "944"
          type: PUSH_OTP
          description: SecureSIGN
    berlin-group-eur-embedded-bulk-payment-example-request:
      description: Berlin Group EUR Embedded Bulk Payment Example Request
      value:
        applicationUserId: john.doe@company.com
        institutionId: fiducia-sandbox
        userCredentials:
          id: VRK1234567890PLUS
          password: password
        paymentRequest:
          executionDateTime: 2021-10-29T00:00:00Z
          payments:
          - type: DOMESTIC_PAYMENT
            paymentIdempotencyId: e4f913909a3d11eabb370242ac130002
            reference: REFERENCE
            amount:
              amount: 1.0
              currency: EUR
            payer:
              name: John Doe
              accountIdentifications:
              - type: IBAN
                identification: DE39499999600000005111
            payee:
              name: Jane Doe
              address:
                country: DE
              accountIdentifications:
              - type: IBAN
                identification: DE12345678901234567890
          - type: DOMESTIC_PAYMENT
            paymentIdempotencyId: e4f913909a3d11eabb370242ac130002
            reference: REFERENCE
            amount:
              amount: 1.0
              currency: EUR
            payer:
              name: Jane Doe
              accountIdentifications:
              - type: IBAN
                identification: DE39499999600000005111
            payee:
              name: John Doe
              address:
                country: DE
              accountIdentifications:
              - type: IBAN
                identification: DE12345678900000000000
    berlin-group-eur-embedded-bulk-payment-sca-code-example-request:
      description: Berlin Group EUR Embedded Bulk Payment (SCA Code) Example Request
      value:
        applicationUserId: john.doe@company.com
        institutionId: fiducia-sandbox
        scaCode: "123456"
        paymentRequest:
          executionDateTime: 2021-10-29T00:00:00Z
          payments:
          - type: DOMESTIC_PAYMENT
            paymentIdempotencyId: e4f913909a3d11eabb370242ac130002
            reference: REFERENCE
            amount:
              amount: 1.0
              currency: EUR
            payer:
              name: John Doe
              accountIdentifications:
              - type: IBAN
                identification: DE39499999600000005111
            payee:
              name: Jane Doe
              address:
                country: DE
              accountIdentifications:
              - type: IBAN
                identification: DE12345678901234567890
          - type: DOMESTIC_PAYMENT
            paymentIdempotencyId: e4f913909a3d11eabb370242ac130002
            reference: REFERENCE
            amount:
              amount: 1.0
              currency: EUR
            payer:
              name: Jane Doe
              accountIdentifications:
              - type: IBAN
                identification: DE39499999600000005111
            payee:
              name: John Doe
              address:
                country: DE
              accountIdentifications:
              - type: IBAN
                identification: DE12345678900000000000
    berlin-group-eur-single-domestic-payment-example-request:
      description: Berlin Group EUR Single Domestic Payment Example Request
      value:
        applicationUserId: john.doe@company.com
        institutionId: n26
        paymentRequest:
          paymentIdempotencyId: 234g87t58tgeuo848wudjew489
          payer:
            name: John Doe
            accountIdentifications:
            - type: IBAN
              identification: DE12345678901234567890
          amount:
            amount: 1.0
            currency: EUR
          reference: Bill Payment
          type: DOMESTIC_PAYMENT
          payee:
            name: Jane Doe
            address:
              country: BE
            accountIdentifications:
            - type: IBAN
              identification: BE12345678901234
    berlin-group-eur-single-domestic-embedded-payment-example-request:
      description: Berlin Group EUR Single Domestic Payment Example Request
      value:
        applicationUserId: john.doe@company.com
        institutionId: postbank-sandbox
        userCredentials:
          id: "6154057725"
          password: PISPWD12
        paymentRequest:
          type: DOMESTIC_PAYMENT
          paymentIdempotencyId: e4f913909a3d11eabb370242ac130002
          reference: REFERENCE
          amount:
            amount: 1.0
            currency: EUR
          payer:
            name: John Doe
            accountIdentifications:
            - type: IBAN
              identification: DE12345678901234567890
          payee:
            name: Jane Doe
            address:
              country: DE
            accountIdentifications:
            - type: IBAN
              identification: DE09876543210987654321
    berlin-group-eur-single-domestic-payment-sca-code-example-request:
      description: Berlin Group EUR Single Domestic Payment (SCA Code) Example Request
      value:
        applicationUserId: john.doe@company.com
        institutionId: postbank-sandbox
        scaCode: "325614"
        paymentRequest:
          type: DOMESTIC_PAYMENT
          paymentIdempotencyId: e4f913909a3d11eabb370242ac130002
          reference: REFERENCE
          amount:
            amount: 1.0
            currency: EUR
          payer:
            name: John Doe
            accountIdentifications:
            - type: IBAN
              identification: DE12345678901234567890
          payee:
            name: Jane Doe
            address:
              country: DE
            accountIdentifications:
            - type: IBAN
              identification: DE09876543210987654321
    berlin-group-eur-single-domestic-payment-selected-sca-method-example-request:
      description: Berlin Group EUR Single Domestic Payment (Selected SCA Method)
        Example Request
      value:
        applicationUserId: john.doe@company.com
        institutionId: postbank-sandbox
        selectedScaMethod:
          id: "591655"
        paymentRequest:
          type: DOMESTIC_PAYMENT
          paymentIdempotencyId: e4f913909a3d11eabb370242ac130002
          reference: REFERENCE
          amount:
            amount: 1.0
            currency: EUR
          payer:
            name: John Doe
            accountIdentifications:
            - type: IBAN
              identification: DE12345678901234567890
          payee:
            name: Jane Doe
            address:
              country: DE
            accountIdentifications:
            - type: IBAN
              identification: DE09876543210987654321
    cbi-globe-example-acc-auth-request:
      description: CBI Globe Example Request
      value:
        applicationUserId: john.doe@company.com
        institutionId: bpm-sandbox
        callback: https://display-parameters.com/
        accountRequest:
          accountIdentifiersForBalance:
          - accountId: account1234567
            accountIdentification:
              type: IBAN
              identification: IT77O0848283352871412938123
          accountIdentifiersForTransaction:
          - accountId: account1234567
            accountIdentification:
              type: IBAN
              identification: IT77O0848283352871412938123
    obie-example-acc-auth-request:
      description: OBIE Example Request
      value:
        applicationUserId: john.doe@company.com
        institutionId: modelo-sandbox
        callback: https://display-parameters.com/
    eur-single-domestic-payment-auth-example-request:
      description: EUR Single Domestic Example Request
      value:
        applicationUserId: john.doe@company.com
        institutionId: bpm-sandbox
        callback: https://display-parameters.com/
        paymentRequest:
          paymentIdempotencyId: 234g87t58tgeuo848wudjew489
          payer:
            name: John Doe
            accountIdentifications:
            - type: IBAN
              identification: DE12345678901234567890
          amount:
            amount: 1.0
            currency: EUR
          reference: Bill Payment
          type: DOMESTIC_PAYMENT
          payee:
            name: Jane Doe
            address:
              country: BE
            accountIdentifications:
            - type: IBAN
              identification: BE12345678901234
    gbp-single-domestic-payment-auth-example-request:
      description: GBP Single Domestic Example Request
      value:
        applicationUserId: john.doe@company.com
        institutionId: modelo-sandbox
        callback: https://display-parameters.com/
        paymentRequest:
          paymentIdempotencyId: 4289457hd38djoa783jw9qag3
          amount:
            amount: 1.0
            currency: GBP
          reference: Bill Payment
          type: DOMESTIC_PAYMENT
          payee:
            name: Jane Doe
            address:
              country: GB
            accountIdentifications:
            - type: SORT_CODE
              identification: "123456"
            - type: ACCOUNT_NUMBER
              identification: "12345678"
    eur-domestic-single-payment-example-request:
      description: EUR Domestic Single Payment Example Request
      value:
        paymentIdempotencyId: 234g87t58tgeuo848wudjew489
        payer:
          name: John Doe
          accountIdentifications:
          - type: IBAN
            identification: DE12345678901234567890
        amount:
          amount: 1.0
          currency: EUR
        reference: Bill Payment
        type: DOMESTIC_PAYMENT
        payee:
          name: Jane Doe
          address:
            country: BE
          accountIdentifications:
          - type: IBAN
            identification: BE12345678901234
    gbp-domestic-single-payment-example-request:
      description: GBP Domestic Single Payment Example Request
      value:
        paymentIdempotencyId: 4289457hd38djoa783jw9qag3
        amount:
          amount: 1.0
          currency: GBP
        reference: Bill Payment
        type: DOMESTIC_PAYMENT
        payee:
          name: Jane Doe
          address:
            country: GB
          accountIdentifications:
          - type: SORT_CODE
            identification: "123456"
          - type: ACCOUNT_NUMBER
            identification: "12345678"
    uk-bulk-payment-example-request:
      description: UK Bulk Payment Example Request
      value:
        payments:
        - type: DOMESTIC_PAYMENT
          paymentIdempotencyId: d78fy48uh8f9odhde68dfi38di9
          reference: payment1
          amount:
            amount: 2.0
            currency: GBP
          payee:
            name: Jane Doe
            accountIdentifications:
            - type: ACCOUNT_NUMBER
              identification: "12345678"
            - type: SORT_CODE
              identification: "123456"
        - type: DOMESTIC_PAYMENT
          paymentIdempotencyId: 4279gdy8t63dg73gd8gx87738dg
          reference: payment2
          amount:
            amount: 5.0
            currency: GBP
          payee:
            name: John Doe
            accountIdentifications:
            - type: ACCOUNT_NUMBER
              identification: "87654321"
            - type: SORT_CODE
              identification: "654321"
    uk-bulk-payment-auth-example-request:
      description: UK Bulk Payment Example Request
      value:
        applicationUserId: john.doe@company.com
        institutionId: modelo-sandbox
        callback: https://display-parameters.com/
        paymentRequest:
          payments:
          - type: DOMESTIC_PAYMENT
            paymentIdempotencyId: d78fy48uh8f9odhde68dfi38di9
            reference: payment1
            amount:
              amount: 2.0
              currency: GBP
            payee:
              name: Jane Doe
              accountIdentifications:
              - type: ACCOUNT_NUMBER
                identification: "12345678"
              - type: SORT_CODE
                identification: "123456"
          - type: DOMESTIC_PAYMENT
            paymentIdempotencyId: 4279gdy8t63dg73gd8gx87738dg
            reference: payment2
            amount:
              amount: 5.0
              currency: GBP
            payee:
              name: John Doe
              accountIdentifications:
              - type: ACCOUNT_NUMBER
                identification: "87654321"
              - type: SORT_CODE
                identification: "654321"
    cbi-globe-pis-pre-auth-example-request:
      description: Cbi Globe (PIS) Example Request
      value:
        applicationUserId: john.doe@company.com
        institutionId: n26
        callback: https://display-parameters.com/
        scope: PIS
        reference: Bill Payment
        amount:
          amount: 1.0
          currency: EUR
        payee:
          name: Jane Doe
          country: BE
          accountIdentifications:
          - type: IBAN
            identification: BE12345678901234
        payer:
          accountIdentifications:
          - type: IBAN
            identification: DE12345678901234567890
    berlin-group-ais-pre-auth-example-request:
      description: Berlin Group (AIS) Example Request
      value:
        applicationUserId: john.doe@company.com
        institutionId: n26
        callback: https://display-parameters.com/
        scope: AIS
    berlin-group-pis-pre-auth-example-request:
      description: Berlin Group (PIS) Example Request
      value:
        applicationUserId: john.doe@company.com
        institutionId: n26
        callback: https://display-parameters.com/
        scope: PIS
    cbi-globe-example-acc-auth-response:
      description: CBI Globe Example Response
      value:
        meta:
          tracingId: a55a89c4a27b41129e484d74fc338121
        data:
          id: 4f988304-67ea-4ea9-a61e-cb90cac37f78
          userUuid: 3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d
          applicationUserId: john.doe@company.com
          institutionId: bpm-sandbox
          status: AWAITING_AUTHORIZATION
          createdAt: 2021-06-09T11:06:54.132Z
          expiresAt: 2021-09-07T00:00:00Z
          timeToExpire: P89DT12H53M5.589S
          featureScope:
          - ACCOUNT_BALANCES
          - ACCOUNT_TRANSACTIONS
          state: a55ae8debaad4fb991b73a3a912a2004
          institutionConsentId: bdbd7ad0-b2d1-4a5c-9173-3586f30bc575
          authorisationUrl: https://scasandbox.bancobpm.it/sca/login.html?idRichiestaSCA=20210609110654029&tipoRisorsa=C&codiceASPSP=05034
          qrCodeUrl: https://images.yapily.com/image/72095dc7-4a23-4971-9a7f-e3f9c6af7921/1623236814?size=0
    berlin-group-eur-single-domestic-embedded-payment-example-response:
      description: Berlin Group EUR Single Domestic Payment Example Response
      value:
        meta:
          tracingId: bcebc29b55434cc8b2aae80cb782edff
        data:
          id: 7c3f0355-f59b-4cc6-b13f-e1b5349b5caf
          userUuid: 95f71ebc-c8ae-4e25-aded-86e9bbd62966
          applicationUserId: john.doe@company.com
          institutionId: postbank-sandbox
          state: 551440fc13794010855ad81c8463c926
          status: AWAITING_SCA_METHOD
          createdAt: 2021-01-26T23:31:45.443Z
          featureScope:
          - CREATE_DOMESTIC_SINGLE_PAYMENT
          - EXISTING_PAYMENTS_DETAILS
          - EXISTING_PAYMENT_INITIATION_DETAILS
          scaMethods:
          - id: 258211#OPTICAL
            type: CHIP_OTP
            description: Testkarte Hr. Haubach_1, optisch
          - id: 258211#MANUEL
            type: CHIP_OTP
            description: Testkarte Hr. Haubach_1, manuell
          - id: "591655"
            type: SMS_OTP
            description: RolandmTAN
          - id: "591656"
            type: PUSH_OTP
            description: RSRolandIP2
    berlin-group-sca-code-example-response:
      description: Berlin Group (SCA Code) Example Response
      value:
        meta:
          tracingId: 0ad7c46c4e4445bab3a0d4ccae25556b
        data:
          id: 66c8c0f2-1678-4404-a68f-2236a1afcdad
          userUuid: 6b082877-b137-4743-bba3-07b6a8148b42
          applicationUserId: john.doe@company.com
          institutionId: fiducia-sandbox
          status: AUTHORIZED
          createdAt: 2021-06-09T11:49:18.815Z
          featureScope:
          - ACCOUNT_TRANSACTIONS
          - ACCOUNTS
          - ACCOUNT
          - ACCOUNT_BALANCES
          state: 3fb4024282d0432cb710094c4c723ae5
          authorizedAt: 2021-06-09T11:51:14.140Z
          institutionConsentId: 1448194319060120228PSDLT-BL-LB002045CO9545RW
    berlin-group-selected-sca-method-example-response:
      description: Berlin Group (Selected SCA Method) Example Response
      value:
        meta:
          tracingId: eaa703f3869b46b18732fa0de60f6073
        data:
          id: 149da283-2958-4128-9d72-e3a02e8bb83d
          userUuid: 6b082877-b137-4743-bba3-07b6a8148b42
          applicationUserId: john.doe@company.com
          institutionId: fiducia-sandbox
          status: AWAITING_SCA_CODE
          createdAt: 2021-06-09T11:47:24.513Z
          expiresAt: 2021-09-07T00:00:00Z
          timeToExpire: P89DT12H6M39.998S
          featureScope:
          - ACCOUNT_TRANSACTIONS
          - ACCOUNTS
          - ACCOUNT
          - ACCOUNT_BALANCES
          state: c99f35c118194737b83487a0e6a48ed9
          institutionConsentId: 4514274319060120226PSDLT-BL-LB002045CO9545RW
          selectedScaMethod:
            id: "942"
            type: SMS_OTP
            description: mobile TAN
    berlin-group-multiple-sca-methods-example-response:
      description: Berlin Group (Multiple SCA Methods) Example Response
      value:
        meta:
          tracingId: a9d8d8c5e6a84b00b8510d90c28cbbc6
        data:
          id: 149da283-2958-4128-9d72-e3a02e8bb83d
          userUuid: 6b082877-b137-4743-bba3-07b6a8148b42
          applicationUserId: john.doe@company.com
          institutionId: fiducia-sandbox
          status: AWAITING_SCA_METHOD
          createdAt: 2021-06-09T11:47:24.513Z
          expiresAt: 2021-09-07T00:00:00Z
          timeToExpire: P89DT12H12M35.472S
          featureScope:
          - ACCOUNT_TRANSACTIONS
          - ACCOUNTS
          - ACCOUNT
          - ACCOUNT_BALANCES
          state: c99f35c118194737b83487a0e6a48ed9
          institutionConsentId: 4514274319060120226PSDLT-BL-LB002045CO9545RW
          scaMethods:
          - id: "962"
            type: CHIP_OTP
            description: SmartTAN plus HHD 1.4
          - id: "952"
            type: CHIP_OTP
            description: SmartTAN optic
          - id: "972"
            type: CHIP_OTP
            description: SmartTAN optic/USB HHD 1.4
          - id: "982"
            type: PHOTO_OTP
            description: Smart-TAN photo
          - id: "932"
            type: CHIP_OTP
            description: SmartTAN plus
          - id: "944"
            type: PUSH_OTP
            description: SecureSIGN
          - id: "942"
            type: SMS_OTP
            description: mobile TAN
    berlin-group-single-sca-method-example-response:
      description: Berlin Group (Single SCA Method) Example Response
      value:
        meta:
          tracingId: 1565f7e13a0b4bf6b312cf8cc5747c7c
        data:
          id: 66c8c0f2-1678-4404-a68f-2236a1afcdad
          userUuid: 6b082877-b137-4743-bba3-07b6a8148b42
          applicationUserId: john.doe@company.com
          institutionId: fiducia-sandbox
          status: AWAITING_SCA_CODE
          createdAt: 2021-06-09T11:49:18.815Z
          expiresAt: 2021-09-07T00:00:00Z
          timeToExpire: P89DT12H10M41.167S
          featureScope:
          - ACCOUNT_TRANSACTIONS
          - ACCOUNTS
          - ACCOUNT
          - ACCOUNT_BALANCES
          state: 3fb4024282d0432cb710094c4c723ae5
          institutionConsentId: 1448194319060120228PSDLT-BL-LB002045CO9545RW
          scaMethods:
          - id: "944"
            type: PUSH_OTP
            description: SecureSIGN
          selectedScaMethod:
            id: "944"
            type: PUSH_OTP
            description: SecureSIGN
    berlin-group-eur-single-domestic-payment-example-response:
      description: Berlin Group EUR Single Domestic Payment Example Response
      value:
        meta:
          tracingId: 54ec0645a5b444c4a70c61357e9ad887
        data:
          id: 53ff00d0-91dd-417d-880b-cdd7c50090ed
          userUuid: e2578545-27a4-4edf-983f-5d33c2d7b559
          applicationUserId: john.doe@company.com
          institutionId: n26
          state: 4399535ee4de46238fce108a95669848
          status: AWAITING_DECOUPLED_AUTHORIZATION
          createdAt: 2021-06-10T09:54:46.669Z
          featureScope:
          - INITIATE_PRE_AUTHORISATION
          - CREATE_DOMESTIC_SINGLE_PAYMENT
          - EXISTING_PAYMENTS_DETAILS
          authorizedAt: 2021-06-10T09:55:22.359Z
          institutionConsentId: a9582f8e-08be-4cca-9f01-1ad3be96532d
    berlin-group-eur-single-domestic-payment-sca-code-example-response:
      description: Berlin Group EUR Single Domestic Payment (SCA Code) Example Response
      value:
        meta:
          tracingId: 94563449b4634d13b89b8f1c78c21882
        data:
          id: 1767d386-c20a-4136-a311-0a455dd41a78
          userUuid: 95f71ebc-c8ae-4e25-aded-86e9bbd62966
          applicationUserId: john.doe@company.com
          institutionId: postbank-sandbox
          state: 048a1187a9324652bedb6a653211a8a3
          status: AUTHORIZED
          createdAt: 2021-01-25T18:32:23.933Z
          featureScope:
          - CREATE_DOMESTIC_SINGLE_PAYMENT
          - EXISTING_PAYMENT_INITIATION_DETAILS
          - EXISTING_PAYMENTS_DETAILS
          authorizedAt: 2021-01-25T18:33:18.248Z
    berlin-group-eur-single-domestic-payment-selected-sca-method-example-response:
      description: Berlin Group EUR Single Domestic Payment (Selected SCA Method)
        Example Response
      value:
        meta:
          tracingId: f69f66322b4b482c93099a206d9f003e
        data:
          id: 1767d386-c20a-4136-a311-0a455dd41a78
          userUuid: 95f71ebc-c8ae-4e25-aded-86e9bbd62966
          applicationUserId: john.doe@company.com
          institutionId: postbank-sandbox
          state: 048a1187a9324652bedb6a653211a8a3
          status: AWAITING_SCA_CODE
          createdAt: 2021-01-25T18:32:23.933Z
          featureScope:
          - CREATE_DOMESTIC_SINGLE_PAYMENT
          - EXISTING_PAYMENT_INITIATION_DETAILS
          - EXISTING_PAYMENTS_DETAILS
          selectedScaMethod:
            id: "591655"
    berlin-group-eur-embedded-bulk-payment-example-response:
      description: Berlin Group EUR Embedded Bulk Payment Example Response
      value:
        meta:
          tracingId: 4ab90c8cc13a4b74ba855a48100d6084
        data:
          id: 6117b6dd-5a43-4f26-8e36-b91b9bf3c434
          userUuid: 3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d
          applicationUserId: john.doe@company.com
          institutionId: fiducia-sandbox
          status: AWAITING_SCA_CODE
          createdAt: 2021-08-02T14:58:45.446Z
          featureScope:
          - EXISTING_PAYMENT_INITIATION_DETAILS
          - CREATE_BULK_PAYMENT
          - EXISTING_PAYMENTS_DETAILS
          state: 85853421299c44e0829debefffd8622e
          institutionConsentId: 0515485612080120206PSDLT-BL-LB002045PA9545RW
          scaMethods:
          - id: "932"
            type: CHIP_OTP
            description: SmartTAN plus
          selectedScaMethod:
            id: "932"
            type: CHIP_OTP
            description: SmartTAN plus
    berlin-group-eur-embedded-bulk-payment-sca-code-example-response:
      description: Berlin Group EUR Embedded Bulk Payment (SCA Code) Example Response
      value:
        meta:
          tracingId: cfa351c5de6f4398bb9deea04041acc5
        data:
          id: 6117b6dd-5a43-4f26-8e36-b91b9bf3c434
          userUuid: 3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d
          applicationUserId: john.doe@company.com
          institutionId: fiducia-sandbox
          status: AUTHORIZED
          createdAt: 2021-08-02T14:58:45.446Z
          featureScope:
          - EXISTING_PAYMENT_INITIATION_DETAILS
          - CREATE_BULK_PAYMENT
          - EXISTING_PAYMENTS_DETAILS
          state: 85853421299c44e0829debefffd8622e
          authorizedAt: 2021-08-02T14:59:29.174Z
          institutionConsentId: 0515485612080120206PSDLT-BL-LB002045PA9545RW
    berlin-group-pis-pre-auth-example-response:
      description: Berlin Group Example (PIS) Response
      value:
        meta:
          tracingId: ba79c56773de42129dbf8164b202276c
        data:
          id: 53ff00d0-91dd-417d-880b-cdd7c50090ed
          userUuid: e2578545-27a4-4edf-983f-5d33c2d7b559
          applicationUserId: john.doe@company.com
          institutionId: n26
          state: 4399535ee4de46238fce108a95669848
          status: AWAITING_PRE_AUTHORIZATION
          createdAt: 2021-06-10T09:54:46.669Z
          featureScope:
          - INITIATE_ONETIME_PRE_AUTHORISATION_PAYMENTS
          authorisationUrl: https://app.n26.com/open-banking?requestId=2e2b2efd-82bb-4a2b-8f67-ced1a93511b8&state=4399535ee4de46238fce108a95669848&authType=XS2A&scope=DEDICATED_PISP
          qrCodeUrl: https://images.yapily.com/image/7384ad3b-5eb1-4304-9cfa-7aa6fcc5e0c7/1623318888?size=0
    berlin-group-example-ais-pre-auth-response:
      description: Berlin Group Example (AIS) Response
      value:
        meta:
          tracingId: 8acb66e6a9e142e79acc3ccf6cc03e04
        data:
          id: 73064bb9-c84d-4242-897c-4150aacfa658
          userUuid: e2578545-27a4-4edf-983f-5d33c2d7b559
          applicationUserId: john.doe@company.com
          institutionId: n26
          state: 1575102ed5664761bce34927f0caa50f
          status: AWAITING_PRE_AUTHORIZATION
          createdAt: 2021-05-11T13:03:43.619Z
          featureScope:
          - INITIATE_PRE_AUTHORISATION
          authorisationUrl: https://app.n26.com/open-banking?requestId=9ae856ce-6b10-4956-8da8-c66ee0c9d86f&state=1575102ed5664761bce34927f0caa50f&authType=XS2A&scope=DEDICATED_AISP
          qrCodeUrl: https://images.yapily.com/image/f86d382b-c00a-4650-8d0d-9ee6ba1093cd/1620738225?size=0
    cbi-globe-example-acc-balance-response:
      description: CBI Globe Example Response
      value:
        meta:
          tracingId: 82e86ae9547a4f04b3773c1207e4b84d
        data:
          mainBalanceAmount:
            amount: -3.07920860411E9
            currency: EUR
          balances:
          - type: INTERIM_AVAILABLE
            balanceAmount:
              amount: -3.07920860411E9
              currency: EUR
          - type: AUTHORISED
            balanceAmount:
              amount: -3.07920860411E9
              currency: EUR
    obie-example-acc-auth-response-post:
      description: OBIE Example Response
      value:
        meta:
          tracingId: 3b262569303f47f188d16b43acd552c0
        data:
          id: 2d5c3632-1729-4a5e-bc69-c7fa1cbba815
          userUuid: 3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d
          applicationUserId: john.doe@company.com
          institutionId: modelo-sandbox
          status: AWAITING_AUTHORIZATION
          createdAt: 2021-06-09T08:03:20.510Z
          featureScope:
          - ACCOUNT_STATEMENT_FILE
          - ACCOUNTS
          - ACCOUNT_STATEMENTS
          - ACCOUNT_TRANSACTIONS
          - ACCOUNT
          - ACCOUNT_BALANCES
          - ACCOUNT_STATEMENT
          - ACCOUNT_SCHEDULED_PAYMENTS
          - ACCOUNT_TRANSACTIONS_WITH_MERCHANT
          - ACCOUNT_PERIODIC_PAYMENTS
          - ACCOUNT_BENEFICIARIES
          - IDENTITY
          - ACCOUNT_DIRECT_DEBITS
          state: 7948ba4d6a064001b06ef28f8c06ca4a
          institutionConsentId: aac-0a743a0f-0b7d-4e7b-87eb-0bc65e1d2f97
          authorisationUrl: https://ob19-auth1-ui.o3bank.co.uk/auth?client_id=e7f6b95b-5f35-419b-b301-8b08bcd946de&response_type=code+id_token&state=7948ba4d6a064001b06ef28f8c06ca4a&nonce=7948ba4d6a064001b06ef28f8c06ca4a&scope=openid+accounts&redirect_uri=https%3A%2F%2Fauth.yapily.com%2F&request=eyJraWQiOiJnRTRvU3VaZDl4TVpUNXZDdTNWYy1mdktNak0iLCJhbGciOiJQUzI1NiJ9.eyJhdWQiOiJodHRwczovL29iMTktYXV0aDEtdWkubzNiYW5rLmNvLnVrIiwic2NvcGUiOiJvcGVuaWQgYWNjb3VudHMiLCJpc3MiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJjbGllbnRfaWQiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJyZXNwb25zZV90eXBlIjoiY29kZSBpZF90b2tlbiIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vYXV0aC55YXBpbHkuY29tLyIsInN0YXRlIjoiNzk0OGJhNGQ2YTA2NDAwMWIwNmVmMjhmOGMwNmNhNGEiLCJjbGFpbXMiOnsiaWRfdG9rZW4iOnsiYWNyIjp7InZhbHVlIjoidXJuOm9wZW5iYW5raW5nOnBzZDI6c2NhIiwiZXNzZW50aWFsIjp0cnVlfSwib3BlbmJhbmtpbmdfaW50ZW50X2lkIjp7InZhbHVlIjoiYWFjLTBhNzQzYTBmLTBiN2QtNGU3Yi04N2ViLTBiYzY1ZTFkMmY5NyIsImVzc2VudGlhbCI6dHJ1ZX19LCJ1c2VyaW5mbyI6eyJvcGVuYmFua2luZ19pbnRlbnRfaWQiOnsidmFsdWUiOiJhYWMtMGE3NDNhMGYtMGI3ZC00ZTdiLTg3ZWItMGJjNjVlMWQyZjk3IiwiZXNzZW50aWFsIjp0cnVlfX19LCJub25jZSI6Ijc5NDhiYTRkNmEwNjQwMDFiMDZlZjI4ZjhjMDZjYTRhIiwianRpIjoiNTIxNGFjNTQtNTEzYi00N2Y1LTgyYjUtZWExY2NhYzg0YzNiIiwiaWF0IjoxNjIzMjI1ODAxLCJleHAiOjE2MjMyMjc2MDF9.wmNfzJD1ekN_f028qWOyVvICkFm2uJ5Umok4hmxk4HZnDY2AOWDg4VX_MJjPHDydhfW8ZciBfCbEgmnButmASBbil-tHzwDIholS4RmnOZ4DXD-AttYx_VA2_X36J53kmlCHstPZpoawSIzdcnyW0JIhmVEvs5ZsaJvsDKhWk0hgYNS2GI0PORcn85W98EaE8APVrsz-tR-EfC9NmSZu7tH1zLyyD43AuD2BqdlMiYVTlzZsJ3FGPZ-ddT0rRloJvxPV6GLibjNAEowpSLjmDLv2v7gWszmYgcrzp5UM2jllfVL2KPA6Be5Eg6LVkL60Q3FKQyOMc8SCAWhALq_7Ew
          qrCodeUrl: https://images.yapily.com/image/3b634d3c-a2ce-49b8-9014-330661800604/1623225801?size=0
    obie-example-acc-auth-response-put:
      description: OBIE Example Response
      value:
        meta:
          tracingId: ee8e5bcfedf348b18ae45a34135790cc
        data:
          id: 68e14e00-38b0-467d-a999-f70340e467b3
          userUuid: e2578545-27a4-4edf-983f-5d33c2d7b559
          applicationUserId: john.doe@company.com
          institutionId: n26
          institutionConsentId: 87ec9ded-d5ea-4fb6-80c5-ad4c88246c9f
          state: 4f4f9766f7264afc96a5269d6e65e066
          status: AWAITING_DECOUPLED_AUTHORIZATION
          authorizedAt: 2021-05-13T09:00:06.867Z
          createdAt: 2021-05-13T08:59:23.864Z
          featureScope:
          - ACCOUNT_TRANSACTIONS
          - INITIATE_PRE_AUTHORISATION
          - ACCOUNTS
          - ACCOUNT_TRANSACTIONS_WITH_MERCHANT
    obie-example-acc-auth-response-patch:
      description: OBIE Example Response
      value:
        meta:
          tracingId: 8719f9c97272463d9c2d1ee6108c8e24
        data:
          id: 2812b61c-9d0b-4730-8c94-22c18918e66a
          userUuid: 3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d
          applicationUserId: john.doe@company.com
          institutionId: modelo-sandbox
          status: AWAITING_RE_AUTHORIZATION
          createdAt: 2021-06-09T08:22:50.135Z
          featureScope:
          - ACCOUNT_STATEMENT_FILE
          - ACCOUNT_TRANSACTIONS
          - ACCOUNT_STATEMENTS
          - ACCOUNTS
          - ACCOUNT
          state: 0623e536c5044b4aa3f6c66e7537bee0
          authorizedAt: 2021-06-09T08:23:03.944Z
          institutionConsentId: aac-f7847e99-7c66-4bb8-8641-61a24057f2e8
          authorisationUrl: https://ob19-auth1-ui.o3bank.co.uk/auth?client_id=e7f6b95b-5f35-419b-b301-8b08bcd946de&response_type=code+id_token&state=0623e536c5044b4aa3f6c66e7537bee0&nonce=0623e536c5044b4aa3f6c66e7537bee0&scope=openid+accounts&redirect_uri=https%3A%2F%2Fauth.yapily.com%2F&request=eyJraWQiOiJnRTRvU3VaZDl4TVpUNXZDdTNWYy1mdktNak0iLCJhbGciOiJQUzI1NiJ9.eyJhdWQiOiJodHRwczovL29iMTktYXV0aDEtdWkubzNiYW5rLmNvLnVrIiwic2NvcGUiOiJvcGVuaWQgYWNjb3VudHMiLCJpc3MiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJjbGllbnRfaWQiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJyZXNwb25zZV90eXBlIjoiY29kZSBpZF90b2tlbiIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vYXV0aC55YXBpbHkuY29tLyIsInN0YXRlIjoiMDYyM2U1MzZjNTA0NGI0YWEzZjZjNjZlNzUzN2JlZTAiLCJjbGFpbXMiOnsiaWRfdG9rZW4iOnsiYWNyIjp7InZhbHVlIjoidXJuOm9wZW5iYW5raW5nOnBzZDI6c2NhIiwiZXNzZW50aWFsIjp0cnVlfSwib3BlbmJhbmtpbmdfaW50ZW50X2lkIjp7InZhbHVlIjoiYWFjLWY3ODQ3ZTk5LTdjNjYtNGJiOC04NjQxLTYxYTI0MDU3ZjJlOCIsImVzc2VudGlhbCI6dHJ1ZX19LCJ1c2VyaW5mbyI6eyJvcGVuYmFua2luZ19pbnRlbnRfaWQiOnsidmFsdWUiOiJhYWMtZjc4NDdlOTktN2M2Ni00YmI4LTg2NDEtNjFhMjQwNTdmMmU4IiwiZXNzZW50aWFsIjp0cnVlfX19LCJub25jZSI6IjA2MjNlNTM2YzUwNDRiNGFhM2Y2YzY2ZTc1MzdiZWUwIiwianRpIjoiMjEyM2E1OGMtMTExYi00OGY2LTg2ODAtZTViYTNiMzI3MjM5IiwiaWF0IjoxNjIzMjI3MDAxLCJleHAiOjE2MjMyMjg4MDF9.JG5lc5TWjCucWZPfcyd34trk0QcGNzhYXfhHTlVrcfu1zjrAtSUI8i0o4yKqS19cOGKHq1HtuQac2hhO8gCr_vd5n7eIuIrWfjEM1MuIwsJ85jOpMBkEiSOurLRIgW77VmqHpVUVj5-0-1Tk-N-vaC_4nIdtSi576sOb4rjLQvs2EX_sFODGjyMxHXiZlnr2p71gA3nRy8M2Vv_At4-NPW8OLULS8zXclWoK797HFAGtsNLCy8tz0YCsnEaFhcLhZSliy3a7DRfxvBmIzhY23M4uQ6bpM1zCyqTPsOhqR-qdgnZorBrax_2CQ37yIeV4becUJWvZSdnjYX7gDtNltA
          qrCodeUrl: https://images.yapily.com/image/4ef6e16c-dbe2-4d90-9e1b-868d946082ef/1623227001?size=0
    obie-example-accounts-response:
      description: OBIE Example Response
      value:
        meta:
          tracingId: 1139346006be4345a94fd8b3728844e3
          count: 1
        data:
        - id: "700004000000000000000002"
          type: Personal - Current
          balance: -12.57
          currency: GBP
          usageType: PERSONAL
          accountType: CURRENT
          nickname: xxxx0006
          accountNames:
          - name: Mr. Roberto Rastapopoulos & Ivan Sakharine
          accountIdentifications:
          - type: SORT_CODE
            identification: "700001"
          - type: ACCOUNT_NUMBER
            identification: "70000002"
          accountBalances:
          - type: EXPECTED
            dateTime: 2021-06-09T08:51:02.463Z
            balanceAmount:
              amount: -12.57
              currency: GBP
            creditLineIncluded: false
            creditLines: []
    obie-example-account-response:
      description: OBIE Example Response
      value:
        meta:
          tracingId: 01191f59dcd54be2854a7e686702dbd6
        data:
          id: "700004000000000000000002"
          type: Personal - Current
          balance: -12.57
          currency: GBP
          usageType: PERSONAL
          accountType: CURRENT
          nickname: xxxx0006
          accountNames:
          - name: Mr. Roberto Rastapopoulos & Ivan Sakharine
          accountIdentifications:
          - type: SORT_CODE
            identification: "700001"
          - type: ACCOUNT_NUMBER
            identification: "70000002"
          accountBalances:
          - type: EXPECTED
            dateTime: 2021-06-09T08:51:02.463Z
            balanceAmount:
              amount: -12.57
              currency: GBP
            creditLineIncluded: false
            creditLines: []
    obie-example-acc-beneficiaries-response:
      description: OBIE Example Response
      value:
        data:
        - id: "112"
          trusted: true
          reference: Rent
          payee:
            name: John Doe
            accountIdentifications:
            - type: SORT_CODE
              identification: "123456"
            - type: ACCOUNT_NUMBER
              identification: "12345678"
    obie-example-acc-direct-debits-response:
      description: OBIE Example Response
      value:
        meta:
          tracingId: c2dec674a3fb402e8543129565491244
          count: 2
          pagination:
            totalCount: 2
            self:
              limit: 1000
        data:
        - id: "700009000000000000000076"
          statusDetails:
            status: INACTIVE
          payeeDetails:
            name: EDF ENERGY
          reference: "671018097704"
          previousPaymentAmount:
            amount: 145.0
            currency: GBP
          previousPaymentDateTime: 2016-10-05T00:00:00Z
        - id: "700009000000000000000038"
          statusDetails:
            status: ACTIVE
          payeeDetails:
            name: SANTANDER MORTGAGE
          reference: "40118272"
          previousPaymentAmount:
            amount: 1000.0
            currency: GBP
          previousPaymentDateTime: 2017-12-01T00:00:00Z
        links:
          self: https://api.yapily.com/accounts/700004000000000000000002/direct-debits?limit=1000
    obie-example-acc-periodic-payments-response:
      description: OBIE Example Response
      value:
        meta:
          tracingId: 51d039be096f492ca5184d4ea72b4caf
          count: 1
          pagination:
            totalCount: 1
            self:
              limit: 1000
        data:
        - id: 95d29cb3-5ef4-4c92-885f-8ba971adc5d1
          statusDetails:
            status: UNKNOWN
          payeeDetails:
            name: xxxxx129
            accountIdentifications:
            - type: IBAN
              identification: DE16700222000072880129
          reference: 544878_60c0809a
          firstPaymentAmount:
            amount: 1259.0
            currency: GBP
          firstPaymentDateTime: 2021-07-10T23:00:00Z
          nextPaymentAmount:
            amount: 1259.0
            currency: GBP
          nextPaymentDateTime: 2021-07-10T23:00:00Z
          finalPaymentAmount:
            amount: 1259.0
            currency: GBP
          finalPaymentDateTime: 2022-04-11T23:00:00Z
          frequency:
            frequencyType: MONTHLY
            intervalMonth: 1
            executionDay: 11
        links:
          self: https://api.yapily.com/accounts/700004000000000000000002/periodic-payments?limit=1000
    obie-example-acc-scheduled-payments-response:
      description: OBIE Example Response
      value:
        meta:
          tracingId: 0de4ed83caf542f6bcaa30c62275191c
          count: 1
          pagination:
            totalCount: 1
            self:
              limit: 1000
        data:
        - id: 6f62b428-c3a0-42eb-a838-ae41e52916e9
          payeeDetails:
            name: Mr. Roberto Rastapopoulos & Ivan Sakharine & mits
            accountIdentifications:
            - type: ACCOUNT_NUMBER
              identification: "70000002"
            - type: SORT_CODE
              identification: "700001"
          reference: f62ee3bad94d432d9786ba038131b5d7
          amountDetails:
            amount: 1.0
            currency: GBP
          scheduledPaymentType: EXECUTION
          scheduledPaymentDateTime: 2021-12-01T00:00:00+01:00
        links:
          self: https://api.yapily.com/accounts/700004000000000000000002/scheduled-payments?limit=1000
    account-statements-example-esponse:
      description: Example Response
      value:
        meta:
          tracingId: fd5c215acd034401a8eaa8aeec1eafc7
          count: 1
          pagination:
            totalCount: 1
            self:
              limit: 1000
              sort: -date
              offset: 0
        data:
        - id: "700014000000000000000002"
          startDateTime: 2017-08-01T00:00:00Z
          endDateTime: 2017-08-31T23:59:59Z
          creationDateTime: 2017-09-01T00:00:00Z
        links:
          self: https://api.yapily.com/accounts/700004000000000000000002/statements?from&before&limit=1000&sort=-date&offset=0
    account-transactions-example-response:
      description: Example Response
      value:
        meta:
          tracingId: 488ce8243ee74a378be722ffffec8f7f
          count: 1
          pagination:
            totalCount: 1
            self:
              limit: 1000
              sort: -date
              offset: 0
        data:
        - id: 49d6e5c6-0130-46e3-884b-1b185432d9e0
          date: 2021-05-06T17:44:34.589Z
          bookingDateTime: 2021-05-06T17:44:34.589Z
          valueDateTime: 2021-05-06T17:44:34.589Z
          status: BOOKED
          amount: -100.23
          currency: GBP
          transactionAmount:
            amount: -100.23
            currency: GBP
          reference: "0"
          description: 'Debit for Payment Id: sdp-1-57379a43-c4b8-49f5-bd7c-699189ee7a60'
          transactionInformation:
          - 'Debit for Payment Id: sdp-1-57379a43-c4b8-49f5-bd7c-699189ee7a60'
          isoBankTransactionCode:
            domainCode:
              code: PMNT
              name: Payments
            familyCode:
              code: ICDT
              name: Issued Credit Transfers
            subFamilyCode:
              code: DMCT
              name: Domestic Credit Transfer
          proprietaryBankTransactionCode:
            code: PMT
            issuer: modelo-sandbox
          balance:
            type: CLOSING_AVAILABLE
            balanceAmount:
              amount: 426.53
              currency: GBP
          enrichment:
            transactionHash:
              hash: adad72d7b3069ab9e4a6cb2844e2e3e9.1
        links:
          self: https://api.yapily.com/accounts/700004000000000000000002/transactions?from&before&limit=1000&sort=-date&offset=0&cursor
    uk-bulk-payment-auth-example-response:
      description: UK Bulk Payment Example Response
      value:
        meta:
          tracingId: 96169af01d394ad39658f17d53b49a5d
        data:
          id: a2a9ec77-a479-4996-9896-4568e1968e7a
          userUuid: 5350782b-60f3-489e-aae5-a24d8d679a07
          applicationUserId: john.doe@company.com
          institutionId: modelo-sandbox
          status: AWAITING_AUTHORIZATION
          createdAt: 2021-06-09T13:48:25.138Z
          featureScope:
          - EXISTING_PAYMENTS_DETAILS
          - EXISTING_PAYMENT_INITIATION_DETAILS
          - CREATE_BULK_PAYMENT
          state: 80052c03007f41d589f64377eef4d620
          institutionConsentId: sdp-6-25ff5bd8-d01c-422d-aa9e-8e68808bc899
          authorisationUrl: https://ob19-auth1-ui.o3bank.co.uk/auth?client_id=e7f6b95b-5f35-419b-b301-8b08bcd946de&response_type=code+id_token&state=80052c03007f41d589f64377eef4d620&nonce=80052c03007f41d589f64377eef4d620&scope=openid+payments&redirect_uri=https%3A%2F%2Fauth.yapily.com%2F&request=eyJraWQiOiJnRTRvU3VaZDl4TVpUNXZDdTNWYy1mdktNak0iLCJhbGciOiJQUzI1NiJ9.eyJhdWQiOiJodHRwczovL29iMTktYXV0aDEtdWkubzNiYW5rLmNvLnVrIiwic2NvcGUiOiJvcGVuaWQgcGF5bWVudHMiLCJpc3MiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJjbGllbnRfaWQiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJyZXNwb25zZV90eXBlIjoiY29kZSBpZF90b2tlbiIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vYXV0aC55YXBpbHkuY29tLyIsInN0YXRlIjoiODAwNTJjMDMwMDdmNDFkNTg5ZjY0Mzc3ZWVmNGQ2MjAiLCJjbGFpbXMiOnsiaWRfdG9rZW4iOnsiYWNyIjp7InZhbHVlIjoidXJuOm9wZW5iYW5raW5nOnBzZDI6c2NhIiwiZXNzZW50aWFsIjp0cnVlfSwib3BlbmJhbmtpbmdfaW50ZW50X2lkIjp7InZhbHVlIjoic2RwLTYtMjVmZjViZDgtZDAxYy00MjJkLWFhOWUtOGU2ODgwOGJjODk5IiwiZXNzZW50aWFsIjp0cnVlfX0sInVzZXJpbmZvIjp7Im9wZW5iYW5raW5nX2ludGVudF9pZCI6eyJ2YWx1ZSI6InNkcC02LTI1ZmY1YmQ4LWQwMWMtNDIyZC1hYTllLThlNjg4MDhiYzg5OSIsImVzc2VudGlhbCI6dHJ1ZX19fSwibm9uY2UiOiI4MDA1MmMwMzAwN2Y0MWQ1ODlmNjQzNzdlZWY0ZDYyMCIsImp0aSI6ImUxYjZmMWM4LTQ1ZTktNGM0NS05NGE0LWExMTY1Nzk2NjZiNiIsImlhdCI6MTYyMzI0NjUwNSwiZXhwIjoxNjIzMjQ4MzA1fQ.C5YkClHiDOWl1CKnmEY0gM_JizUuELp2-k7sDjsWV5T-mgTWviO-jM7iVfCf4MsU6batLSBmeUFLco1b3S8PTQkAzwM3laHIgbfDAb_6bYkSBTbPriyzKcC8xAwhX3VdvWtb9qqdrn9zXSmIIITBhJdMzk1cgIjyETD7WNPln839eGP1-w8iB8yDOJOkYGRHJ850mQY-lk61GegmKs5kaxtYPIhrG2gygIi3JsN-uQJ6YOl2-5pylTEcJbuwhFiyeePdqHZdabqW2BSA6lDKQbMV_Zow_zhSWoFFv6RZdXCQpt4TBRj1W7tzZQKin-MC-TpzaF1q07RpSy0NtlN85w
          qrCodeUrl: https://images.yapily.com/image/2bbb79b8-2c4a-4c8e-9132-0636879437da/1623246505?size=0
    uk-bulk-payment-example-response:
      description: UK Bulk Payment Example Response
      value:
        meta:
          tracingId: 0cda48c70f3941148bbee775a65fa3d0
        data:
          id: pv3-a1e2ecb0-270c-42e2-8ba5-005261b629d2
          institutionConsentId: sdp-6-b06f9a82-c641-4aba-b76d-43e6bc052f75
          status: COMPLETED
          statusDetails:
            status: COMPLETED
            statusUpdateDate: 2021-06-09T13:53:28.67Z
          createdAt: 2021-06-09T13:53:28.67Z
          bulkAmountSum: 7
    eur-single-domestic-payment-auth-example-response:
      description: EUR Single Domestic Example Response
      value:
        meta:
          tracingId: a3d09f97bea244e2bb8be0bffbe53f81
        data:
          id: cae22f3d-1033-4ba6-95ae-0d8ca193b090
          userUuid: 5350782b-60f3-489e-aae5-a24d8d679a07
          applicationUserId: john.doe@company.com
          institutionId: bpm-sandbox
          status: AWAITING_AUTHORIZATION
          createdAt: 2021-06-10T11:47:12.887Z
          featureScope:
          - EXISTING_PAYMENTS_DETAILS
          - CREATE_DOMESTIC_SINGLE_PAYMENT
          - EXISTING_PAYMENT_INITIATION_DETAILS
          state: 6a5f69be6a084b5c8c1becac88d45c95
          institutionConsentId: 79cee256-077f-4e11-a307-43892646a4a6
          authorisationUrl: https://scasandbox.bancobpm.it/sca/login.html?paymentId=79cee256-077f-4e11-a307-43892646a4a6&tppAuthenticationRedirectUri=https%3A%2F%2Fauth.yapily.com%2F%3Ftwofold_redirect%3Dtrue%26state%3D6a5f69be6a084b5c8c1becac88d45c95&tppName=YAPILY+LTD&aspspCode=05034&aspspProductCode=IBP01&tppRegistrationNumber=PSDGB-FCA-927459&hash=GY5CmKG3MVeoxrboUQkjCoIb1X0nGR9ZTfoIG3T%2FLx1At1UJ92w0sjDeRXbNP9NhO203Y03UeI6Xn9ThebOjtQ%3D%3D
          qrCodeUrl: https://images.yapily.com/image/5955c0db-a5b7-4b12-a682-0f83317ba46d/1623325632?size=0
    gbp-single-domestic-payment-auth-example-response:
      description: GBP Single Domestic Example Response
      value:
        meta:
          tracingId: 2dbfd85b4f2940c6a206e96dd90e52d0
        data:
          id: eb39f8ae-aeff-4ffa-a23d-d4a5b3eff406
          userUuid: 3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d
          applicationUserId: john.doe@company.com
          institutionId: modelo-sandbox
          status: AWAITING_AUTHORIZATION
          createdAt: 2021-06-08T09:45:42.145Z
          featureScope:
          - EXISTING_PAYMENTS_DETAILS
          - EXISTING_PAYMENT_INITIATION_DETAILS
          - CREATE_DOMESTIC_SINGLE_PAYMENT
          state: 430b2756e9724c8eaad3862524817260
          institutionConsentId: sdp-1-6d8d035e-868e-4355-be41-bddc25b7aac8
          authorisationUrl: https://ob19-auth1-ui.o3bank.co.uk/auth?client_id=e7f6b95b-5f35-419b-b301-8b08bcd946de&response_type=code+id_token&state=430b2756e9724c8eaad3862524817260&nonce=430b2756e9724c8eaad3862524817260&scope=openid+payments&redirect_uri=https%3A%2F%2Fauth.yapily.com%2F&request=eyJraWQiOiJnRTRvU3VaZDl4TVpUNXZDdTNWYy1mdktNak0iLCJhbGciOiJQUzI1NiJ9.eyJhdWQiOiJodHRwczovL29iMTktYXV0aDEtdWkubzNiYW5rLmNvLnVrIiwic2NvcGUiOiJvcGVuaWQgcGF5bWVudHMiLCJpc3MiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJjbGllbnRfaWQiOiJlN2Y2Yjk1Yi01ZjM1LTQxOWItYjMwMS04YjA4YmNkOTQ2ZGUiLCJyZXNwb25zZV90eXBlIjoiY29kZSBpZF90b2tlbiIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOi8vYXV0aC55YXBpbHkuY29tLyIsInN0YXRlIjoiNDMwYjI3NTZlOTcyNGM4ZWFhZDM4NjI1MjQ4MTcyNjAiLCJjbGFpbXMiOnsiaWRfdG9rZW4iOnsiYWNyIjp7InZhbHVlIjoidXJuOm9wZW5iYW5raW5nOnBzZDI6c2NhIiwiZXNzZW50aWFsIjp0cnVlfSwib3BlbmJhbmtpbmdfaW50ZW50X2lkIjp7InZhbHVlIjoic2RwLTEtNmQ4ZDAzNWUtODY4ZS00MzU1LWJlNDEtYmRkYzI1YjdhYWM4IiwiZXNzZW50aWFsIjp0cnVlfX0sInVzZXJpbmZvIjp7Im9wZW5iYW5raW5nX2ludGVudF9pZCI6eyJ2YWx1ZSI6InNkcC0xLTZkOGQwMzVlLTg2OGUtNDM1NS1iZTQxLWJkZGMyNWI3YWFjOCIsImVzc2VudGlhbCI6dHJ1ZX19fSwibm9uY2UiOiI0MzBiMjc1NmU5NzI0YzhlYWFkMzg2MjUyNDgxNzI2MCIsImp0aSI6IjJjYzczMzRhLTJmMDYtNDNjNi04MDkzLTNiYWZjNjQzMWE0YyIsImlhdCI6MTYyMzE0NTU0MiwiZXhwIjoxNjIzMTQ3MzQyfQ.bh0sCVmwkwbx_rxxIwE6p7SjswaH007bdMJfWYo_njIHwoPOkcGjygi2yU7bpNd7bqeqxY1adtkMg_acg6A7awq1jX7nxv6mZC44Q2zGKNMc_nOQPSNO6LkktRcozBxyJ2sEfLheVmmVsyyCQw4FV0w_7Cgc4tFO11FjZ0LNxbp5kpMCK7SABa4RgvZ4IpG-Zl6jFKHfNK1zUP79yBaQcBvNseIirAmG3iJjdpwVc3tD8bl-0SPcPwStk1A3T8OvOgW8DKM4OSEPgKL73I9CExQiJzYykKYLr8tp9bQmI0OgajVM9BT2nbKszRnRe92gPq31goRHHWhfzgQHKFBCNg
          qrCodeUrl: https://images.yapily.com/image/5121fd6a-5010-4f36-9c25-df691cf465c1/1623145542?size=0
    eur-domestic-single-payment-example-response:
      description: EUR Domestic Single Payment Example Response
      value:
        meta:
          tracingId: 0f14e900011b445fa6b6c2c4272d7321
        data:
          id: a9582f8e-08be-4cca-9f01-1ad3be96532d
          status: COMPLETED
          statusDetails:
            status: COMPLETED
            isoStatus:
              code: ACCP
              name: AcceptedCustomerProfile
          payer:
            name: John Doe
            accountIdentifications:
            - type: IBAN
              identification: DE12345678901234567890
          payeeDetails:
            name: Jane Doe
            accountIdentifications:
            - type: IBAN
              identification: BE12345678901234
          reference: Bill Payment
          amount: 1.0
          currency: EUR
          amountDetails:
            amount: 1.0
            currency: EUR
    gbp-domestic-single-payment-example-response:
      description: GBP Domestic Single Payment Example Response
      value:
        meta:
          tracingId: 2b93dc6029634a5095b3415cc5cc0e84
        data:
          id: pv3-a6ac6528-e8c8-44eb-b6f9-8521963518dc
          institutionConsentId: sdp-1-27a192bb-482f-4731-989b-e7271661248c
          paymentIdempotencyId: 4289457hd38djoa783jw9qag3
          paymentLifecycleId: 3gaq9wj387aojd83dh7549824
          status: COMPLETED
          statusDetails:
            status: COMPLETED
            statusUpdateDate: 2021-06-10T11:26:54.887Z
            isoStatus:
              code: ACSC
              name: AcceptedSettlementCompleted
          payeeDetails:
            name: Jane Doe
            accountIdentifications:
            - type: ACCOUNT_NUMBER
              identification: "12345678"
            - type: SORT_CODE
              identification: "123456"
          reference: Bill Payment
          amount: 1.0
          currency: GBP
          amountDetails:
            amount: 1.0
            currency: GBP
          createdAt: 2021-06-10T11:26:54.887Z
    eur-single-domestic-payment-details-example-response:
      description: EUR Single Domestic Payment Example Response
      value:
        meta:
          tracingId: 590c99aecd2844c7a5c3ea00c55ce0ef
        data:
          payments:
          - paymentIdempotencyId: 234g87t58tgeuo848wudjew489
            payer:
              name: John Doe
              accountIdentifications:
              - type: IBAN
                identification: DE12345678901234567890
            amount: 1.0
            amountDetails:
              amount: 1.0
              currency: EUR
            reference: Bill Payment
            scheduledPaymentType: DOMESTIC_PAYMENT
            payeeDetails:
              name: Jane Doe
              address:
                country: BE
              accountIdentifications:
              - type: IBAN
                identification: BE12345678901234
    gbp-single-domestic-payment-details-example-response:
      description: GBP Single Domestic Payment Example Response
      value:
        meta:
          tracingId: 547ffd74b2ea46968cef64e0ddac59e1
        data:
          payments:
          - id: pv3-a6ac6528-e8c8-44eb-b6f9-8521963518dc
            institutionConsentId: sdp-1-27a192bb-482f-4731-989b-e7271661248c
            paymentIdempotencyId: 4289457hd38djoa783jw9qag3
            paymentLifecycleId: 3gaq9wj387aojd83dh7549824
            status: COMPLETED
            statusDetails:
              status: COMPLETED
              statusUpdateDate: 2021-06-10T11:26:54.887Z
              isoStatus:
                code: ACSC
                name: AcceptedSettlementCompleted
            payeeDetails:
              name: Jane Doe
              accountIdentifications:
              - type: ACCOUNT_NUMBER
                identification: "12345678"
              - type: SORT_CODE
                identification: "123456"
            reference: Bill Payment
            amount: 1.0
            currency: GBP
            amountDetails:
              amount: 1.0
              currency: GBP
            createdAt: 2021-06-10T11:26:54.887Z
    uk-bulk-payment-details-example-response:
      description: UK Bulk Payment Example Response
      value:
        meta:
          tracingId: a63d57d771d64875a8230a1fcabd87f2
        data:
          payments:
          - id: pv3-a1e2ecb0-270c-42e2-8ba5-005261b629d2
            institutionConsentId: sdp-6-b06f9a82-c641-4aba-b76d-43e6bc052f75
            status: COMPLETED
            statusDetails:
              status: COMPLETED
              statusUpdateDate: 2021-06-09T13:53:28.67Z
            createdAt: 2021-06-09T13:53:28.67Z
            bulkAmountSum: 7
    categories-example-response:
      description: Example Response
      value:
        meta:
          tracingId: a5b0fc4b8b8a4b7085f4412b2b64e969
          count: 21
        data:
        - id: 06d10bcd-dbcc-4a61-b5a1-c119adc16adf
          label: INCOME
          country: GB
          subcategories: []
        - id: 1051a1ff-5552-4b53-ba43-eeeac96d710f
          label: INCOME_OTHER
          country: GB
          subcategories: []
        - id: 2f527678-a698-4c00-9880-3063b39f71df
          label: INCOME_REFUNDS
          country: GB
          subcategories: []
        - id: 3954ed5c-1663-4356-869e-241f305c8b4b
          label: BILLS
          country: GB
          subcategories:
          - id: 03e037d4-c950-4540-a298-36cce7eb9ce9
            label: INTERNET / TV
          - id: 05ed46b2-dfa4-4cde-8900-692a899e1290
            label: MOBILE PHONE
          - id: 06df5c74-3783-48d4-9825-f508a237d60f
            label: SUBSCRIPTION
          - id: 11e189ab-3794-478b-8a30-1c1c7aae7af1
            label: TV LICENCE
          - id: 1238e562-2a7b-4ef1-8e41-037491cefd53
            label: UTILITY BILL
          - id: 129c7a08-2125-4b0f-87bb-253fca906eb7
            label: OTHER
        - id: 5de14494-fec8-44c2-af9c-91656d2e8d1b
          label: CHARITY AND GIFTS
          country: GB
          subcategories:
          - id: 1655bc45-de79-4fd2-9b45-8bd9271a2520
            label: DONATIONS
          - id: 1b9e1a46-5229-4488-a68c-19d7cb450c79
            label: GIFTS
          - id: 1d09a62b-1f9c-418d-9f37-9ee5003d5abc
            label: OTHER
        - id: 6edef913-2c1e-4935-9f23-4a71fe92124c
          label: EATING OUT
          country: GB
          subcategories:
          - id: 1e13a0f5-6892-4436-ba71-f11cd1a0b8fe
            label: COFFEE
          - id: 1eb03b3e-e9ab-4d54-ae9a-e63778390794
            label: DRINKS
          - id: 253e0e15-f260-44ee-a1cf-ac42afbc8a48
            label: FAST FOOD
          - id: 25a39d3e-d2c5-47e5-9874-57d9d4edfaaa
            label: RESTAURANT
          - id: 26594166-4e32-4a9b-8cbf-ea7ab86c19e6
            label: TAKEAWAY / DELIVERY
          - id: 36949186-bb90-427a-840b-8d9c9ff5ca35
            label: OTHER
        - id: 705dddcc-03f8-4a27-ac8b-a2256f950239
          label: ENTERTAINMENT
          country: GB
          subcategories:
          - id: 380694b8-efc4-4443-9c49-df81229f3d69
            label: ART / MUSEUM
          - id: 380c0b10-1afd-4f4f-8fd5-7cac3392fb9a
            label: CINEMA
          - id: 397b698d-4f46-4356-a283-2af934bf51a3
            label: LIVE MUSIC
          - id: 39aed540-1702-4e50-9109-5808e5636146
            label: LIVE SPORT
          - id: 44a99d0c-2718-4c95-8c2c-13c9802e2d20
            label: THEATRE
          - id: 4a419ef8-f953-4866-881e-0ad61adf110c
            label: NIGHTCLUB
          - id: 4c483465-980d-4274-81d5-32e2d61e8aed
            label: ONLINE GAMBLING
          - id: 50bbec77-b23d-4ce2-bedb-a0e1ca2e34f4
            label: LOTTERY
          - id: 5a3d65f9-a8ae-4eb8-bae0-973c7c4de372
            label: BETTING SHOP
          - id: 5b8493cb-09f6-457a-a642-9a309ee1d424
            label: OTHER
        - id: 75cdc4b8-dc29-409f-8f9b-a99341ea2e39
          label: INVESTMENT AND SAVINGS
          country: GB
          subcategories:
          - id: 5c8c11a1-ad38-4101-898e-9ceb1ee90d48
            label: CREDIT CARD PAYMENT
          - id: 5f93b21e-7e63-4652-91a9-610026252b29
            label: INVESTMENTS
          - id: 5fb0ba5d-71eb-42db-bd51-63637ef356df
            label: SAVINGS
          - id: 5fe79b4e-8ab3-4cb4-b51e-bc5eb3263a0c
            label: PENSION
          - id: 61eaee8c-eea4-4d9f-93f1-74f22f38b6ea
            label: OTHER
        - id: 7bc5d291-8af1-4ad0-bf29-302f4e1c6995
          label: GENERAL
          country: GB
          subcategories:
          - id: 656abd3b-8a71-455f-ab28-6f4e3262da2c
            label: OTHER
        - id: 84c9be40-4114-43ce-9e06-5f93c2719693
          label: GROCERIES
          country: GB
          subcategories:
          - id: 69f5d7b7-f1e6-498a-9318-23ba5916c7ef
            label: SUPERMARKET
          - id: 6d4395bb-466c-419a-80b5-7428cec4f88f
            label: ONLINE GROCERIES
          - id: 74a0185b-632d-4edd-832f-d32582b15e8d
            label: OTHER
        - id: 8abdddb5-92c4-42e1-b380-12537f84b40e
          label: PERSONAL CARE
          country: GB
          subcategories:
          - id: 7702e7ec-32b9-4ce6-879e-20ac84e52293
            label: BEAUTY PRODUCTS
          - id: 7affed3f-f9d0-4946-b2c0-70c79b0334ac
            label: DOCTOR
          - id: 7f84092a-c67d-4cb3-99af-c7a4be5109db
            label: GYM / EXERCISE
          - id: 7fcaceb6-9c4e-4395-b216-5ae41b3991d2
            label: HAIRDRESSER
          - id: 83f7fb77-8b56-4f47-b531-6d06e245597d
            label: PHARMACY
          - id: 8546fdde-8b73-4a58-9aa0-4781e4ca6340
            label: SPA / BEAUTY TREATMENT
          - id: 85936cb0-aa0c-4c93-b0bc-cbf1672bd675
            label: OTHER
        - id: 8b37bbd3-76e9-4937-a7fc-e9cf7d8232a3
          label: HOME
          country: GB
          subcategories:
          - id: 899cbae5-c556-4e2d-8cdd-9fef7fd4d820
            label: RENT
          - id: 8af1b65f-62f2-4b56-a348-97e7390d2f62
            label: MORTGAGE
          - id: 8cf40b23-e7a4-4ae3-88f0-4ab3b35a679b
            label: SERVICE CHARGE
          - id: 8dfb3077-3e29-4a3b-b41c-964bf368071b
            label: GARDEN
          - id: 922cd0ca-bd5f-44ab-aa40-6536f9d2abe5
            label: COUNCIL TAX
          - id: 9d3ca620-4ae3-4296-8864-c0962b2f4539
            label: HOME IMPROVEMENT
          - id: a1bfe200-c1d7-4c0c-9d60-d0b83cd71f74
            label: OTHER
        - id: 92aef8f2-18f8-464f-8915-e44dc5b97731
          label: INSURANCE
          country: GB
          subcategories:
          - id: a72f6cbf-d894-4bfa-ac87-39f85012a7f8
            label: HOME INSURANCE
          - id: a7bc0f36-ee80-496c-a1c1-ac49c51c6d07
            label: MOTOR INSURANCE
          - id: a8a505af-7e73-4d6f-a146-51d2eb5d4db8
            label: TRAVEL INSURANCE
          - id: a9e1b431-6d75-41ac-9a23-44fb25e64b1a
            label: HEALTH INSURANCE
          - id: aa420049-2d7a-4f11-94d5-c76e45329a47
            label: LIFE INSURANCE
          - id: ab441944-859a-44db-93fc-0800266dd4f6
            label: PET INSURANCE
          - id: ab95ea13-8d0c-497d-8d8b-e06cde0eaf97
            label: PHONE / GADGET INSURANCE
          - id: aba53905-b630-4cf3-b1f8-698d124197a6
            label: OTHER
        - id: b0b56616-8cf6-4653-8512-d5eefe8400fe
          label: OTHER
          country: GB
          subcategories:
          - id: ad5e46b2-f9ad-4ef2-96d7-a2817073beec
            label: EDUCATION
          - id: b18ec1a3-171c-405a-bd4f-c9fddcd6c594
            label: ATM WITHDRAWAL
          - id: b1d4abd8-1c2f-412a-9916-4167cc7d58d8
            label: CREDIT CARD PAYMENT
          - id: b4cd0587-1d2f-4378-a31c-8ddc0ce0dc03
            label: TRANSFER
          - id: b667ea18-8679-4608-91b6-cbd4488d3802
            label: CARD TOPUP
          - id: b6c611d7-d8cc-4d16-8e42-16cfa6dfd56e
            label: OTHER
        - id: b1f468dd-8f0c-4bbb-a720-f6c117187b15
          label: SHOPPING
          country: GB
          subcategories:
          - id: b7181636-097c-4362-9f71-9da1559685f2
            label: BOOKS
          - id: becc8b91-f594-490b-aecf-50e12fb6ca84
            label: CLOTHING
          - id: bf41624e-5790-43d9-966d-25878cd79881
            label: ELECTRONICS
          - id: c8bab464-ade8-4ec2-9d83-d42a2aa7d088
            label: GAMES
          - id: c99e826c-302c-4abf-85b5-557d65184f63
            label: HOBBIES
          - id: cb09c4e8-00d2-41d7-a581-f73d0e3b0cb2
            label: MUSIC
          - id: cbe0734a-c10b-4901-bf7c-be4df9b1ed42
            label: PETS
          - id: d13b7872-0418-426c-9054-315a41ddcd21
            label: SOFTWARE
          - id: d17705fc-1a34-42a2-bc77-0511635f0d21
            label: SPORTING ITEMS
          - id: d2668855-296d-450f-b309-3f28c4f3fa5f
            label: HOUSE ITEMS
          - id: d4cf6c32-d94f-4488-9e74-46734cb34cc2
            label: FILM / DVD
          - id: d837fb3f-f614-410b-b9d9-3e89e92e683a
            label: STATIONARY
          - id: d8d74d91-7810-4995-8337-72c39dff05a2
            label: OTHER
        - id: b831661f-c8af-4eec-91d8-b09b53616394
          label: TRANSPORT
          country: GB
          subcategories:
          - id: d9da6e16-7a9f-41ee-b727-a7d39f0e4c2c
            label: PUBLIC TRANSPORT
          - id: d9e7f133-d0d7-471a-be28-da3f61d453c2
            label: PETROL / FUEL
          - id: dbb9104d-e0e4-4e25-838a-083dc751c665
            label: PARKING
          - id: dcab2001-efc7-42be-a381-c7169ff806e6
            label: TAXI
          - id: dee109d5-0347-404e-81f2-cc736949e62d
            label: OTHER
        - id: baf7ee41-0a29-49f7-b5fd-af602935c2fe
          label: TRAVEL AND HOLIDAY
          country: GB
          subcategories:
          - id: e1cc65b3-30ba-47fc-90aa-c7a1fb93ebdf
            label: AIR TRAVEL
          - id: e44e3d55-a843-4660-940b-b2756198992e
            label: CAR RENTAL
          - id: e76ee6e8-1cef-4986-b229-ef96af9f473d
            label: HOTELS
          - id: ed57cd0b-2abc-4af9-b478-75bbee149a5a
            label: OTHER
        - id: bc4de368-67f2-4bd6-ae09-ebfa1164e259
          label: FEES AND CHARGES
          country: GB
          subcategories:
          - id: ed8d73e4-79ea-42a0-aab3-0c2d40594ba8
            label: LATE FEE
          - id: ee16362b-f67c-4f1a-8e6a-f2ed6f325df3
            label: ATM FEE
          - id: ef9652f1-67cf-40eb-8ef5-ecb96419c60c
            label: SERVICE FEE
          - id: f0d996d4-be7e-48f3-bb3b-48d10c287b75
            label: OVERDRAFT CHARGE
          - id: f16c80bb-4e77-43de-bb8e-3391d8c8d2f0
            label: FOREIGN CURRENCY CHARGE
          - id: f2a19ee6-d181-4454-98e4-1f8c5d83be82
            label: OTHER
        - id: c17a6985-a47c-463c-bbd0-934a156224e3
          label: FINANCES
          country: GB
          subcategories: []
        - id: cdc636d5-2dc7-444a-a53c-edd81f449cdc
          label: TRANSFERS
          country: GB
          subcategories: []
        - id: 2a497caa-eea6-4e99-b460-57a26fffd0d7
          label: UNKNOWN
          country: GB
          subcategories: []
    consent-auth-code-example-response:
      description: Example Response
      value:
        id: 56a42244-414a-4b52-8c4f-4ad2a50e82fe
        userUuid: ca412fdf-5a30-43a2-88b7-5964a24a8e55
        applicationUserId: john.doe@company.com
        institutionId: modelo-sandbox
        status: AUTHORIZED
        createdAt: 2021-06-08T10:59:35.138Z
        featureScope:
        - ACCOUNT_BENEFICIARIES
        - ACCOUNT_STATEMENT_FILE
        - ACCOUNTS
        - ACCOUNT_PERIODIC_PAYMENTS
        - ACCOUNT_TRANSACTIONS
        - ACCOUNT
        - ACCOUNT_STATEMENTS
        - ACCOUNT_SCHEDULED_PAYMENTS
        - IDENTITY
        - ACCOUNT_DIRECT_DEBITS
        - ACCOUNT_STATEMENT
        - ACCOUNT_BALANCES
        - ACCOUNT_TRANSACTIONS_WITH_MERCHANT
        consentToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJJTlNUSVRVVElPTiI6Im1vZGVsby1zYW5kYm94IiwiQ09OU0VOVCI6IjU2YTQyMjQ0LTQxNGEtNGI1Mi04YzRmLTRhZDJhNTBlODJmZSIsIkFQUExJQ0FUSU9OX1VTRVJfSUQiOiJtb2ZlLTIiLCJVU0VSIjoiY2E0MTJmZGYtNWEzMC00M2EyLTg4YjctNTk2NGEyNGE4ZTU1In0.gorwpnUjSr5dzQJLR32M2geWOj7yK9xMsZmq27ssY9xP_xGmWfUL_aqVHYyQ4r5KWw6Xb6RjvO839st8chJLtg
        state: a09f8ff9c1284444aa635267e05f76e1
        authorizedAt: 2021-06-08T10:59:53.288Z
        institutionConsentId: aac-605d48f2-2a0e-4594-81a9-996524fa3b2a
    consent-one-time-token-example-response:
      description: Example Response
      value:
        id: 56a42244-414a-4b52-8c4f-4ad2a50e82fe
        userUuid: ca412fdf-5a30-43a2-88b7-5964a24a8e55
        applicationUserId: john.doe@company.com
        institutionId: modelo-sandbox
        status: AUTHORIZED
        createdAt: 2021-06-08T10:59:35.138Z
        featureScope:
        - ACCOUNT_BENEFICIARIES
        - ACCOUNT_STATEMENT_FILE
        - ACCOUNTS
        - ACCOUNT_PERIODIC_PAYMENTS
        - ACCOUNT_TRANSACTIONS
        - ACCOUNT
        - ACCOUNT_STATEMENTS
        - ACCOUNT_SCHEDULED_PAYMENTS
        - IDENTITY
        - ACCOUNT_DIRECT_DEBITS
        - ACCOUNT_STATEMENT
        - ACCOUNT_BALANCES
        - ACCOUNT_TRANSACTIONS_WITH_MERCHANT
        consentToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJJTlNUSVRVVElPTiI6Im1vZGVsby1zYW5kYm94IiwiQ09OU0VOVCI6IjU2YTQyMjQ0LTQxNGEtNGI1Mi04YzRmLTRhZDJhNTBlODJmZSIsIkFQUExJQ0FUSU9OX1VTRVJfSUQiOiJtb2ZlLTIiLCJVU0VSIjoiY2E0MTJmZGYtNWEzMC00M2EyLTg4YjctNTk2NGEyNGE4ZTU1In0.gorwpnUjSr5dzQJLR32M2geWOj7yK9xMsZmq27ssY9xP_xGmWfUL_aqVHYyQ4r5KWw6Xb6RjvO839st8chJLtg
        state: a09f8ff9c1284444aa635267e05f76e1
        authorizedAt: 2021-06-08T10:59:53.288Z
        institutionConsentId: aac-605d48f2-2a0e-4594-81a9-996524fa3b2a
    consents-example-response:
      description: Example Response
      value:
        meta:
          tracingId: d7b537b108934105a522dc7b4522380b
          count: 1
          pagination:
            totalCount: 1
            self:
              sort: -date
              offset: 0
        data:
        - id: 56a42244-414a-4b52-8c4f-4ad2a50e82fe
          userUuid: ca412fdf-5a30-43a2-88b7-5964a24a8e55
          applicationUserId: john.doe@company.com
          institutionId: modelo-sandbox
          status: AUTHORIZED
          createdAt: 2021-06-08T10:59:35.138Z
          featureScope:
          - ACCOUNT_BENEFICIARIES
          - ACCOUNT_STATEMENT_FILE
          - ACCOUNTS
          - ACCOUNT_PERIODIC_PAYMENTS
          - ACCOUNT_TRANSACTIONS
          - ACCOUNT
          - ACCOUNT_STATEMENTS
          - ACCOUNT_SCHEDULED_PAYMENTS
          - IDENTITY
          - ACCOUNT_DIRECT_DEBITS
          - ACCOUNT_STATEMENT
          - ACCOUNT_BALANCES
          - ACCOUNT_TRANSACTIONS_WITH_MERCHANT
          consentToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJJTlNUSVRVVElPTiI6Im1vZGVsby1zYW5kYm94IiwiQ09OU0VOVCI6IjU2YTQyMjQ0LTQxNGEtNGI1Mi04YzRmLTRhZDJhNTBlODJmZSIsIkFQUExJQ0FUSU9OX1VTRVJfSUQiOiJtb2ZlLTIiLCJVU0VSIjoiY2E0MTJmZGYtNWEzMC00M2EyLTg4YjctNTk2NGEyNGE4ZTU1In0.gorwpnUjSr5dzQJLR32M2geWOj7yK9xMsZmq27ssY9xP_xGmWfUL_aqVHYyQ4r5KWw6Xb6RjvO839st8chJLtg
          state: a09f8ff9c1284444aa635267e05f76e1
          authorizedAt: 2021-06-08T10:59:53.288Z
          institutionConsentId: aac-605d48f2-2a0e-4594-81a9-996524fa3b2a
    consent-delete-example-response:
      description: Example Response
      value:
        meta:
          tracingId: 9aacaccc6dbf4a86960c9541969087a0
        data:
          id: 56a42244-414a-4b52-8c4f-4ad2a50e82fe
          deleteStatus: SUCCESS
          institutionId: modelo-sandbox
          institutionConsentId: aac-605d48f2-2a0e-4594-81a9-996524fa3b2a
          creationDate: 2021-06-08T10:59:35.138Z
    consent-get-example-response:
      description: Example Response
      value:
        meta:
          tracingId: 679e7bb6cd45416a9a9a8d004c5315da
        data:
          id: 56a42244-414a-4b52-8c4f-4ad2a50e82fe
          userUuid: ca412fdf-5a30-43a2-88b7-5964a24a8e55
          applicationUserId: john.doe@company.com
          institutionId: modelo-sandbox
          status: AUTHORIZED
          createdAt: 2021-06-08T10:59:35.138Z
          featureScope:
          - ACCOUNT_BENEFICIARIES
          - ACCOUNT_STATEMENT_FILE
          - ACCOUNTS
          - ACCOUNT_PERIODIC_PAYMENTS
          - ACCOUNT_TRANSACTIONS
          - ACCOUNT
          - ACCOUNT_STATEMENTS
          - ACCOUNT_SCHEDULED_PAYMENTS
          - IDENTITY
          - ACCOUNT_DIRECT_DEBITS
          - ACCOUNT_STATEMENT
          - ACCOUNT_BALANCES
          - ACCOUNT_TRANSACTIONS_WITH_MERCHANT
          consentToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJJTlNUSVRVVElPTiI6Im1vZGVsby1zYW5kYm94IiwiQ09OU0VOVCI6IjU2YTQyMjQ0LTQxNGEtNGI1Mi04YzRmLTRhZDJhNTBlODJmZSIsIkFQUExJQ0FUSU9OX1VTRVJfSUQiOiJtb2ZlLTIiLCJVU0VSIjoiY2E0MTJmZGYtNWEzMC00M2EyLTg4YjctNTk2NGEyNGE4ZTU1In0.gorwpnUjSr5dzQJLR32M2geWOj7yK9xMsZmq27ssY9xP_xGmWfUL_aqVHYyQ4r5KWw6Xb6RjvO839st8chJLtg
          state: a09f8ff9c1284444aa635267e05f76e1
          authorizedAt: 2021-06-08T10:59:53.288Z
          institutionConsentId: aac-605d48f2-2a0e-4594-81a9-996524fa3b2a
    features-example-response:
      description: Example Response
      value:
        meta:
          tracingId: b39dc53cf01847098b13f22c559228dd
          count: 52
        data:
        - feature: ACCOUNT
          endpoint: https://api.yapily.com/account/{account-id}
          documentationUrl: https://docs.yapily.com/#757fde49-a294-bbff-d5f9-2c21c5f57be0
        - feature: ACCOUNTS
          endpoint: https://api.yapily.com/accounts
          documentationUrl: https://docs.yapily.com/#23faf44e-1093-c676-63ea-369e41ea902d
        - feature: ACCOUNTS_WITHOUT_BALANCE
          endpoint: https://api.yapily.com/account-auth-requests
          documentationUrl: https://docs.yapily.com
        - feature: ACCOUNT_BALANCES
          endpoint: https://api.yapily.com/account/{account-id}/balances
          documentationUrl: https://docs.yapily.com
        - feature: ACCOUNT_BENEFICIARIES
          endpoint: https://api.yapily.com/accounts/{accountId}/beneficiaries
          documentationUrl: https://docs.yapily.com
        - feature: ACCOUNT_DIRECT_DEBITS
          endpoint: https://api.yapily.com/account/{accountId}/direct-debits
          documentationUrl: https://docs.yapily.com/#a5affc0a-c9cf-4203-b126-4a1bdcb7700a
        - feature: ACCOUNT_PERIODIC_PAYMENTS
          endpoint: https://api.yapily.com/account/{accountId}/periodic-payments
          documentationUrl: https://docs.yapily.com/#98e43700-e9c7-4598-b337-42e86b099216
        - feature: ACCOUNT_REQUEST_DETAILS
          endpoint: https://api.yapily.com/account-request/{authRequestId}
          documentationUrl: https://docs.yapily.com/#c8da0a20-6cb9-4282-aba5-4c66113eb70b
        - feature: ACCOUNT_SCHEDULED_PAYMENTS
          endpoint: https://api.yapily.com/account/{accountId}/scheduled-payments
          documentationUrl: https://docs.yapily.com/#7eadb71e-d715-4c3f-927d-626c9e3a1303
        - feature: ACCOUNT_STATEMENT
          endpoint: https://api.yapily.com/account/{accountId}/statements/{statementId}
          documentationUrl: https://docs.yapily.com/?version=latest#29101d1e-2c52-4d36-900a-18435dca75e0
        - feature: ACCOUNT_STATEMENTS
          endpoint: https://api.yapily.com/account/{accountId}/statements
          documentationUrl: https://docs.yapily.com/#7358d865-3cf3-17da-cf0f-84a1af3b545f
        - feature: ACCOUNT_STATEMENT_FILE
          endpoint: https://api.yapily.com/account/{accountId}/statements/{statementId}/file
          documentationUrl: https://docs.yapily.com/#3987b1e1-6b9c-4770-96de-fa85e2025d48
        - feature: ACCOUNT_TRANSACTIONS
          endpoint: https://api.yapily.com/account/{account-id}/transactions
          documentationUrl: https://docs.yapily.com/#7358d865-3cf3-17da-cf0f-84a1af3b545f
        - feature: ACCOUNT_TRANSACTIONS_WITH_MERCHANT
          endpoint: https://api.yapily.com/accounts/{accountId}/transactions
          documentationUrl: https://docs.yapily.com/#7358d865-3cf3-17da-cf0f-84a1af3b545f
        - feature: ACCOUNT_WITHOUT_BALANCE
          endpoint: https://api.yapily.com/account/{account-id}
          documentationUrl: https://docs.yapily.com
        - feature: CREATE_BULK_PAYMENT
          endpoint: https://api.yapily.com/bulk-payments
          documentationUrl: https://docs.yapily.com
        - feature: CREATE_DOMESTIC_PERIODIC_PAYMENT
          endpoint: https://api.yapily.com/payments
          documentationUrl: https://docs.yapily.com
        - feature: CREATE_DOMESTIC_SCHEDULED_PAYMENT
          endpoint: https://api.yapily.com/payments
          documentationUrl: https://docs.yapily.com/#1fd6bf92-7333-4b46-be2c-1a92a3c72b1c
        - feature: CREATE_DOMESTIC_SINGLE_INSTANT_PAYMENT
          endpoint: https://api.yapily.com/payments
          documentationUrl: https://docs.yapily.com
        - feature: CREATE_DOMESTIC_SINGLE_PAYMENT
          endpoint: https://api.yapily.com/payments
          documentationUrl: https://docs.yapily.com/#4521aa4d-75c2-4c22-9629-acb96c14e4e6
        - feature: CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT
          endpoint: https://api.yapily.com/payments
          documentationUrl: https://docs.yapily.com/#1fd6bf92-7333-4b46-be2c-1a92a3c72b1c
        - feature: CREATE_INTERNATIONAL_PERIODIC_PAYMENT
          endpoint: https://api.yapily.com/payments
          documentationUrl: https://docs.yapily.com
        - feature: CREATE_INTERNATIONAL_SCHEDULED_PAYMENT
          endpoint: https://api.yapily.com/payments
          documentationUrl: https://docs.yapily.com
        - feature: CREATE_INTERNATIONAL_SINGLE_PAYMENT
          endpoint: https://api.yapily.com/payments
          documentationUrl: https://docs.yapily.com
        - feature: CREATE_SINGLE_PAYMENT_SORTCODE
          endpoint: https://api.yapily.com/payment-sortcode
          documentationUrl: https://docs.yapily.com/#4521aa4d-75c2-4c22-9629-acb96c14e4e6
        - feature: EXISTING_PAYMENTS_DETAILS
          endpoint: https://api.yapily.com/payments/{payment-id}
          documentationUrl: https://docs.yapily.com/#2e1a151e-59a7-4fa1-bd5b-5f6a0c4bf4cd
        - feature: EXISTING_PAYMENT_INITIATION_DETAILS
          endpoint: https://api.yapily.com/payment-initiations/{paymentId}
          documentationUrl: https://docs.yapily.com/#c8da0a20-6cb9-4282-aba5-4c66113eb70b
        - feature: IDENTITY
          endpoint: https://api.yapily.com/identity
          documentationUrl: https://docs.yapily.com/#8c62ef0f-0cfa-98e6-6b0b-cb2441eb2d51
        - feature: INITIATE_ACCOUNT_REQUEST
          endpoint: https://api.yapily.com/account-auth-requests
          documentationUrl: https://docs.yapily.com/#c8da0a20-6cb9-4282-aba5-4c66113eb70b
        - feature: INITIATE_BULK_PAYMENT
          endpoint: https://api.yapily.com/bulk-payment-auth-requests
          documentationUrl: https://docs.yapily.com
        - feature: INITIATE_DOMESTIC_PERIODIC_PAYMENT
          endpoint: https://api.yapily.com/payment-auth-requests
          documentationUrl: https://docs.yapily.com
        - feature: INITIATE_DOMESTIC_SCHEDULED_PAYMENT
          endpoint: https://api.yapily.com/payment-auth-requests
          documentationUrl: https://docs.yapily.com#8e67c40c-4b0e-4f72-947c-065f1c84f46b
        - feature: INITIATE_DOMESTIC_SINGLE_INSTANT_PAYMENT
          endpoint: https://api.yapily.com/payment-auth-requests
          documentationUrl: https://docs.yapily.com
        - feature: INITIATE_DOMESTIC_SINGLE_PAYMENT
          endpoint: https://api.yapily.com/payment-auth-requests
          documentationUrl: https://docs.yapily.com/#c8da0a20-6cb9-4282-aba5-4c66113eb70b
        - feature: INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT
          endpoint: https://api.yapily.com/payment-auth-requests
          documentationUrl: https://docs.yapily.com/#8e67c40c-4b0e-4f72-947c-065f1c84f46b
        - feature: INITIATE_EMBEDDED_ACCOUNT_REQUEST
          endpoint: https://api.yapily.com/embedded-account-auth-requests
          documentationUrl: https://docs.yapily.com
        - feature: INITIATE_EMBEDDED_DOMESTIC_SINGLE_PAYMENT
          endpoint: https://api.yapily.com/embedded-payment-auth-requests
          documentationUrl: https://docs.yapily.com
        - feature: INITIATE_EMBEDDED_BULK_PAYMENT
          endpoint: https://api.yapily.com/embedded-payment-auth-requests
          documentationUrl: https://docs.yapily.com/
        - feature: INITIATE_INTERNATIONAL_PERIODIC_PAYMENT
          endpoint: https://api.yapily.com/payment-auth-requests
          documentationUrl: https://docs.yapily.com
        - feature: INITIATE_INTERNATIONAL_SCHEDULED_PAYMENT
          endpoint: https://api.yapily.com/payment-auth-requests
          documentationUrl: https://docs.yapily.com
        - feature: INITIATE_INTERNATIONAL_SINGLE_PAYMENT
          endpoint: https://api.yapily.com/payment-auth-requests
          documentationUrl: https://docs.yapily.com
        - feature: INITIATE_PRE_AUTHORISATION
          endpoint: https://api.yapily.com/pre-auth-requests
          documentationUrl: https://docs.yapily.com
        - feature: INITIATE_SINGLE_PAYMENT_SORTCODE
          endpoint: https://api.yapily.com/payment-sortcode-auth-requests
          documentationUrl: https://docs.yapily.com/#c8da0a20-6cb9-4282-aba5-4c66113eb70b
        - feature: OPEN_DATA_ATMS
          endpoint: https://api.yapily.com/institutions/{institution-id}/atms
          documentationUrl: https://docs.yapily.com/#f5d271e1-8375-4a4a-a446-6ab9fd823f79
        - feature: OPEN_DATA_PERSONAL_CURRENT_ACCOUNTS
          endpoint: https://api.yapily.com/institutions/{institution-id}/personal-current-accounts
          documentationUrl: https://docs.yapily.com/#6af35149-9db9-4eb4-862f-93187c64cbcd
        - feature: PERIODIC_PAYMENT_FREQUENCY_EXTENDED
          endpoint: https://api.yapily.com/payments
          documentationUrl: https://docs.yapily.com
        - feature: READ_DOMESTIC_PERIODIC_PAYMENT_REFUND
          endpoint: https://api.yapily.com/payment-auth-requests
          documentationUrl: https://docs.yapily.com
        - feature: READ_DOMESTIC_SCHEDULED_REFUND
          endpoint: https://api.yapily.com/payment-auth-requests
          documentationUrl: https://docs.yapily.com
        - feature: READ_DOMESTIC_SINGLE_REFUND
          endpoint: https://api.yapily.com/payment-auth-requests
          documentationUrl: https://docs.yapily.com
        - feature: READ_INTERNATIONAL_SCHEDULED_REFUND
          endpoint: https://api.yapily.com/payment-auth-requests
          documentationUrl: https://docs.yapily.com
        - feature: READ_INTERNATIONAL_SINGLE_REFUND
          endpoint: https://api.yapily.com/payment-auth-requests
          documentationUrl: https://docs.yapily.com
        - feature: TRANSFER
          endpoint: https://api.yapily.com/accounts/{accountId}/transfer
          documentationUrl: https://docs.yapily.com/#c8da0a20-6cb9-4282-aba5-4c66113eb70b
    identity-example-response:
      description: Example Response
      value:
        meta:
          tracingId: e4de605bd760459aa7f82aa81856ec1e
        data:
          id: "700001000000000000000002"
          fullName: Mitsuhirato
          email: mits@suntori.com
          phone: +22-8937484901
          addresses:
          - addressLines: []
            city: Hichikanzo
            postalCode: JP102
            country: TA
          - addressLines: []
            city: St Albans
            postalCode: AL1 3SF
            country: GB
    institutions-example-response:
      description: Example Response
      value:
        meta:
          tracingId: 1304b771e4e34f67b39977bde6b1a8e2
          count: 1
        data:
        - id: modelo-sandbox
          name: Modelo Sandbox
          fullName: Modelo Sandbox
          countries:
          - displayName: United Kingdom
            countryCode2: GB
          environmentType: SANDBOX
          credentialsType: OPEN_BANKING_UK_AUTO
          media:
          - source: https://images.yapily.com/image/ce2bfdbf-1ae2-4919-ab7b-e8b3d5e93b36?size=0
            type: icon
          - source: https://images.yapily.com/image/ca502f24-d6df-4785-b4b8-1034b100af77?size=0
            type: logo
          features:
          - ACCOUNT_BALANCES
          - INITIATE_BULK_PAYMENT
          - ACCOUNT_BENEFICIARIES
          - ACCOUNT_SCHEDULED_PAYMENTS
          - EXISTING_PAYMENTS_DETAILS
          - ACCOUNT_TRANSACTIONS
          - ACCOUNT_STATEMENTS
          - INITIATE_DOMESTIC_PERIODIC_PAYMENT
          - INITIATE_ACCOUNT_REQUEST
          - IDENTITY
          - ACCOUNT_PERIODIC_PAYMENTS
          - ACCOUNT_REQUEST_DETAILS
          - ACCOUNT_TRANSACTIONS_WITH_MERCHANT
          - INITIATE_SINGLE_PAYMENT_SORTCODE
          - INITIATE_DOMESTIC_SINGLE_PAYMENT
          - INITIATE_DOMESTIC_SCHEDULED_PAYMENT
          - ACCOUNT_STATEMENT
          - CREATE_DOMESTIC_SINGLE_PAYMENT
          - ACCOUNT_STATEMENT_FILE
          - CREATE_DOMESTIC_PERIODIC_PAYMENT
          - CREATE_DOMESTIC_SCHEDULED_PAYMENT
          - EXISTING_PAYMENT_INITIATION_DETAILS
          - INITIATE_INTERNATIONAL_SINGLE_PAYMENT
          - CREATE_SINGLE_PAYMENT_SORTCODE
          - CREATE_BULK_PAYMENT
          - CREATE_INTERNATIONAL_SINGLE_PAYMENT
          - ACCOUNT
          - PERIODIC_PAYMENT_FREQUENCY_EXTENDED
          - ACCOUNT_DIRECT_DEBITS
          - ACCOUNTS
    institution-example-response:
      description: Example Response
      value:
        id: modelo-sandbox
        name: Modelo Sandbox
        fullName: Modelo Sandbox
        countries:
        - displayName: United Kingdom
          countryCode2: GB
        environmentType: SANDBOX
        credentialsType: OPEN_BANKING_UK_AUTO
        media:
        - source: https://images.yapily.com/image/ce2bfdbf-1ae2-4919-ab7b-e8b3d5e93b36?size=0
          type: icon
        - source: https://images.yapily.com/image/ca502f24-d6df-4785-b4b8-1034b100af77?size=0
          type: logo
        features:
        - ACCOUNT_BALANCES
        - INITIATE_BULK_PAYMENT
        - ACCOUNT_BENEFICIARIES
        - ACCOUNT_SCHEDULED_PAYMENTS
        - EXISTING_PAYMENTS_DETAILS
        - ACCOUNT_TRANSACTIONS
        - ACCOUNT_STATEMENTS
        - INITIATE_DOMESTIC_PERIODIC_PAYMENT
        - INITIATE_ACCOUNT_REQUEST
        - IDENTITY
        - ACCOUNT_PERIODIC_PAYMENTS
        - ACCOUNT_REQUEST_DETAILS
        - ACCOUNT_TRANSACTIONS_WITH_MERCHANT
        - INITIATE_SINGLE_PAYMENT_SORTCODE
        - INITIATE_DOMESTIC_SINGLE_PAYMENT
        - INITIATE_DOMESTIC_SCHEDULED_PAYMENT
        - ACCOUNT_STATEMENT
        - CREATE_DOMESTIC_SINGLE_PAYMENT
        - ACCOUNT_STATEMENT_FILE
        - CREATE_DOMESTIC_PERIODIC_PAYMENT
        - CREATE_DOMESTIC_SCHEDULED_PAYMENT
        - EXISTING_PAYMENT_INITIATION_DETAILS
        - INITIATE_INTERNATIONAL_SINGLE_PAYMENT
        - CREATE_SINGLE_PAYMENT_SORTCODE
        - CREATE_BULK_PAYMENT
        - CREATE_INTERNATIONAL_SINGLE_PAYMENT
        - ACCOUNT
        - PERIODIC_PAYMENT_FREQUENCY_EXTENDED
        - ACCOUNT_DIRECT_DEBITS
        - ACCOUNTS
    me-example-response:
      description: Example Response
      value:
        uuid: 64949de6-6510-4d70-9500-d4aa094c506c
        name: APPLICATION NAME
        active: true
        authCallbacks:
        - https://display-parameters.com/
        institutions:
        - id: modelo-sandbox
          name: Modelo Sandbox
          fullName: Modelo Sandbox
          countries:
          - displayName: United Kingdom
            countryCode2: GB
          environmentType: SANDBOX
          credentialsType: OPEN_BANKING_UK_AUTO
          media:
          - source: https://images.yapily.com/image/ce2bfdbf-1ae2-4919-ab7b-e8b3d5e93b36?size=0
            type: icon
          - source: https://images.yapily.com/image/ca502f24-d6df-4785-b4b8-1034b100af77?size=0
            type: logo
          features:
          - INITIATE_SINGLE_PAYMENT_SORTCODE
          - CREATE_DOMESTIC_PERIODIC_PAYMENT
          - ACCOUNT_REQUEST_DETAILS
          - ACCOUNT_STATEMENT_FILE
          - CREATE_SINGLE_PAYMENT_SORTCODE
          - ACCOUNTS
          - CREATE_DOMESTIC_SCHEDULED_PAYMENT
          - ACCOUNT_PERIODIC_PAYMENTS
          - CREATE_DOMESTIC_SINGLE_PAYMENT
          - INITIATE_DOMESTIC_PERIODIC_PAYMENT
          - EXISTING_PAYMENTS_DETAILS
          - INITIATE_BULK_PAYMENT
          - EXISTING_PAYMENT_INITIATION_DETAILS
          - ACCOUNT_DIRECT_DEBITS
          - ACCOUNT_TRANSACTIONS
          - INITIATE_DOMESTIC_SINGLE_PAYMENT
          - PERIODIC_PAYMENT_FREQUENCY_EXTENDED
          - CREATE_INTERNATIONAL_SINGLE_PAYMENT
          - ACCOUNT_SCHEDULED_PAYMENTS
          - ACCOUNT
          - ACCOUNT_STATEMENTS
          - ACCOUNT_TRANSACTIONS_WITH_MERCHANT
          - CREATE_BULK_PAYMENT
          - ACCOUNT_BALANCES
          - INITIATE_INTERNATIONAL_SINGLE_PAYMENT
          - INITIATE_DOMESTIC_SCHEDULED_PAYMENT
          - ACCOUNT_BENEFICIARIES
          - IDENTITY
          - ACCOUNT_STATEMENT
          - INITIATE_ACCOUNT_REQUEST
        media: []
        created: 2020-11-09T10:05:29.897+0000
        updated: 2021-04-14T12:51:07.419+0000
    create-user-example-request:
      description: Create User Example Request
      value:
        applicationUserId: john.doe@company.com
    users_example-response:
      description: Example Response
      value:
      - uuid: 3b908179-6faa-42e1-8129-8fd0ff1fc68f
        applicationUuid: 3020bf54-e254-40ba-ba7b-fc959774486a
        applicationUserId: bojack@9tees.com
        institutionConsents:
        - institutionId: modelo-sandbox
      - uuid: be7dd6fa-1236-41b6-a7a1-5d7863ab9553
        applicationUuid: 3020bf54-e254-40ba-ba7b-fc959774486a
        referenceId: hollyhock@9tees.com
        institutionConsents:
        - institutionId: mock-sandbox
      - uuid: deb9aac1-b0bc-4f40-9c0b-6a675cf6646f
        applicationUuid: 3020bf54-e254-40ba-ba7b-fc959774486a
        referenceId: beatrice@9tees.com
        institutionConsents:
        - institutionId: yapily-mock
    create-user_example-response:
      description: Example Response
      value:
        uuid: 1ec8e814-085e-46ad-a303-3fe11808f67e
        applicationUuid: 50935110-c7df-4003-a06a-1cc5fd4643c9
        applicationUserId: john.doe@company.com
        institutionConsents: []
    delete-user_example-response:
      description: Example Response
      value:
        meta:
          tracingId: e6625041a9fb46e2a450b3f9f1528cb8
        data:
          id: b8ebe390-f6fb-45b5-bf20-1b4436644390
          deleteStatus: SUCCESS
          creationDate: 2021-06-07T16:44:52.221Z
          userConsents:
          - institutionId: modelo-sandbox
    user_example-response:
      description: Example Response
      value:
        uuid: 3b908179-6faa-42e1-8129-8fd0ff1fc68f
        applicationUuid: 3020bf54-e254-40ba-ba7b-fc959774486a
        applicationUserId: bojack@9tees.com
        institutionConsents:
        - institutionId: modelo-sandbox
    error-response-code-401:
      description: Error Response
      value:
        error:
          code: 401
          status: UNAUTHORIZED
          message: Full authentication is required to access this resource
  parameters:
    EventTypeId:
      description: Unique identifier of the event type (for which notifications will
        be sent)
      explode: false
      in: path
      name: eventTypeId
      required: true
      schema:
        description: Valid event type Id
        type: string
      style: simple
  schemas:
    Account:
      example:
        description: description
        type: type
        consolidatedAccountInformation:
          accountBalances:
          - dateTime: 2000-01-23T04:56:07.000+00:00
            creditLineIncluded: true
            balanceAmount:
              amount: 10
              currency: GBP
            creditLines:
            - creditLineAmount:
                amount: 10
                currency: GBP
            - creditLineAmount:
                amount: 10
                currency: GBP
          - dateTime: 2000-01-23T04:56:07.000+00:00
            creditLineIncluded: true
            balanceAmount:
              amount: 10
              currency: GBP
            creditLines:
            - creditLineAmount:
                amount: 10
                currency: GBP
            - creditLineAmount:
                amount: 10
                currency: GBP
          id: id
        accountNames:
        - name: name
        - name: name
        accountIdentifications:
        - identification: "401016"
          type: SORT_CODE
        - identification: "401016"
          type: SORT_CODE
        balance: 2.3021358869347655
        accountBalances:
        - dateTime: 2000-01-23T04:56:07.000+00:00
          creditLineIncluded: true
          balanceAmount:
            amount: 10
            currency: GBP
          creditLines:
          - creditLineAmount:
              amount: 10
              currency: GBP
          - creditLineAmount:
              amount: 10
              currency: GBP
        - dateTime: 2000-01-23T04:56:07.000+00:00
          creditLineIncluded: true
          balanceAmount:
            amount: 10
            currency: GBP
          creditLines:
          - creditLineAmount:
              amount: 10
              currency: GBP
          - creditLineAmount:
              amount: 10
              currency: GBP
        nickname: nickname
        currency: currency
        details: details
        id: id
      properties:
        id:
          description: Unique identifier of the account.
          type: string
        type:
          description: Specifies the type of account e.g. (BUSINESS_CURRENT).
          type: string
        description:
          description: Product name as defined by the financial institution for this
            account
          type: string
        balance:
          description: Main / headline balance for the account. <br><br> Use of this
            field is recommended as fallback only. Instead, use of the typed balances
            (accountBalances) is recommended.
          type: number
        currency:
          description: Currency the bank account balance is denoted in. <br><br> Specified
            as a 3-letter ISO 4217 currency code
          type: string
        usageType:
          $ref: '#/components/schemas/UsageType'
        accountType:
          $ref: '#/components/schemas/AccountType'
        nickname:
          description: Nickname of the account that was provided by the account owner.
            <br><br> May be used to aid identification of the account.
          type: string
        details:
          description: Supplementary specifications that might be provided by the
            Bank. These provide further characteristics about the account.
          type: string
        accountNames:
          items:
            $ref: '#/components/schemas/AccountName'
          type: array
        accountIdentifications:
          items:
            $ref: '#/components/schemas/AccountIdentification'
          type: array
          uniqueItems: true
        accountBalances:
          items:
            $ref: '#/components/schemas/AccountBalance'
          type: array
        consolidatedAccountInformation:
          $ref: '#/components/schemas/ConsolidatedAccountInformation'
      type: object
    AccountApiListResponse:
      example:
        tracingId: tracingId
        data:
        - description: description
          type: type
          consolidatedAccountInformation:
            accountBalances:
            - dateTime: 2000-01-23T04:56:07.000+00:00
              creditLineIncluded: true
              balanceAmount:
                amount: 10
                currency: GBP
              creditLines:
              - creditLineAmount:
                  amount: 10
                  currency: GBP
              - creditLineAmount:
                  amount: 10
                  currency: GBP
            - dateTime: 2000-01-23T04:56:07.000+00:00
              creditLineIncluded: true
              balanceAmount:
                amount: 10
                currency: GBP
              creditLines:
              - creditLineAmount:
                  amount: 10
                  currency: GBP
              - creditLineAmount:
                  amount: 10
                  currency: GBP
            id: id
          accountNames:
          - name: name
          - name: name
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "401016"
            type: SORT_CODE
          balance: 2.3021358869347655
          accountBalances:
          - dateTime: 2000-01-23T04:56:07.000+00:00
            creditLineIncluded: true
            balanceAmount:
              amount: 10
              currency: GBP
            creditLines:
            - creditLineAmount:
                amount: 10
                currency: GBP
            - creditLineAmount:
                amount: 10
                currency: GBP
          - dateTime: 2000-01-23T04:56:07.000+00:00
            creditLineIncluded: true
            balanceAmount:
              amount: 10
              currency: GBP
            creditLines:
            - creditLineAmount:
                amount: 10
                currency: GBP
            - creditLineAmount:
                amount: 10
                currency: GBP
          nickname: nickname
          currency: currency
          details: details
          id: id
        - description: description
          type: type
          consolidatedAccountInformation:
            accountBalances:
            - dateTime: 2000-01-23T04:56:07.000+00:00
              creditLineIncluded: true
              balanceAmount:
                amount: 10
                currency: GBP
              creditLines:
              - creditLineAmount:
                  amount: 10
                  currency: GBP
              - creditLineAmount:
                  amount: 10
                  currency: GBP
            - dateTime: 2000-01-23T04:56:07.000+00:00
              creditLineIncluded: true
              balanceAmount:
                amount: 10
                currency: GBP
              creditLines:
              - creditLineAmount:
                  amount: 10
                  currency: GBP
              - creditLineAmount:
                  amount: 10
                  currency: GBP
            id: id
          accountNames:
          - name: name
          - name: name
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "401016"
            type: SORT_CODE
          balance: 2.3021358869347655
          accountBalances:
          - dateTime: 2000-01-23T04:56:07.000+00:00
            creditLineIncluded: true
            balanceAmount:
              amount: 10
              currency: GBP
            creditLines:
            - creditLineAmount:
                amount: 10
                currency: GBP
            - creditLineAmount:
                amount: 10
                currency: GBP
          - dateTime: 2000-01-23T04:56:07.000+00:00
            creditLineIncluded: true
            balanceAmount:
              amount: 10
              currency: GBP
            creditLines:
            - creditLineAmount:
                amount: 10
                currency: GBP
            - creditLineAmount:
                amount: 10
                currency: GBP
          nickname: nickname
          currency: currency
          details: details
          id: id
        meta:
          tracingId: tracingId
          pagination:
            next:
              cursor: cursor
              before: 2000-01-23T04:56:07.000+00:00
              limit: 5
              from: 2000-01-23T04:56:07.000+00:00
            self:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
            totalCount: 6
          count: 0
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
        paging:
          data:
          - description: description
            type: type
            consolidatedAccountInformation:
              accountBalances:
              - dateTime: 2000-01-23T04:56:07.000+00:00
                creditLineIncluded: true
                balanceAmount:
                  amount: 10
                  currency: GBP
                creditLines:
                - creditLineAmount:
                    amount: 10
                    currency: GBP
                - creditLineAmount:
                    amount: 10
                    currency: GBP
              - dateTime: 2000-01-23T04:56:07.000+00:00
                creditLineIncluded: true
                balanceAmount:
                  amount: 10
                  currency: GBP
                creditLines:
                - creditLineAmount:
                    amount: 10
                    currency: GBP
                - creditLineAmount:
                    amount: 10
                    currency: GBP
              id: id
            accountNames:
            - name: name
            - name: name
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            balance: 2.3021358869347655
            accountBalances:
            - dateTime: 2000-01-23T04:56:07.000+00:00
              creditLineIncluded: true
              balanceAmount:
                amount: 10
                currency: GBP
              creditLines:
              - creditLineAmount:
                  amount: 10
                  currency: GBP
              - creditLineAmount:
                  amount: 10
                  currency: GBP
            - dateTime: 2000-01-23T04:56:07.000+00:00
              creditLineIncluded: true
              balanceAmount:
                amount: 10
                currency: GBP
              creditLines:
              - creditLineAmount:
                  amount: 10
                  currency: GBP
              - creditLineAmount:
                  amount: 10
                  currency: GBP
            nickname: nickname
            currency: currency
            details: details
            id: id
          - description: description
            type: type
            consolidatedAccountInformation:
              accountBalances:
              - dateTime: 2000-01-23T04:56:07.000+00:00
                creditLineIncluded: true
                balanceAmount:
                  amount: 10
                  currency: GBP
                creditLines:
                - creditLineAmount:
                    amount: 10
                    currency: GBP
                - creditLineAmount:
                    amount: 10
                    currency: GBP
              - dateTime: 2000-01-23T04:56:07.000+00:00
                creditLineIncluded: true
                balanceAmount:
                  amount: 10
                  currency: GBP
                creditLines:
                - creditLineAmount:
                    amount: 10
                    currency: GBP
                - creditLineAmount:
                    amount: 10
                    currency: GBP
              id: id
            accountNames:
            - name: name
            - name: name
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            balance: 2.3021358869347655
            accountBalances:
            - dateTime: 2000-01-23T04:56:07.000+00:00
              creditLineIncluded: true
              balanceAmount:
                amount: 10
                currency: GBP
              creditLines:
              - creditLineAmount:
                  amount: 10
                  currency: GBP
              - creditLineAmount:
                  amount: 10
                  currency: GBP
            - dateTime: 2000-01-23T04:56:07.000+00:00
              creditLineIncluded: true
              balanceAmount:
                amount: 10
                currency: GBP
              creditLines:
              - creditLineAmount:
                  amount: 10
                  currency: GBP
              - creditLineAmount:
                  amount: 10
                  currency: GBP
            nickname: nickname
            currency: currency
            details: details
            id: id
          apiCall: '{}'
          totalCount: 7
          nextCursorHash: nextCursorHash
          nextLink: nextLink
          pagingMap:
            key:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
      properties:
        meta:
          $ref: '#/components/schemas/ResponseListMeta'
        data:
          items:
            $ref: '#/components/schemas/Account'
          type: array
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        paging:
          $ref: '#/components/schemas/FilteredClientPayloadListAccount'
        tracingId:
          type: string
          writeOnly: true
      type: object
    ApiResponseOfAccount:
      example:
        tracingId: tracingId
        data:
          description: description
          type: type
          consolidatedAccountInformation:
            accountBalances:
            - dateTime: 2000-01-23T04:56:07.000+00:00
              creditLineIncluded: true
              balanceAmount:
                amount: 10
                currency: GBP
              creditLines:
              - creditLineAmount:
                  amount: 10
                  currency: GBP
              - creditLineAmount:
                  amount: 10
                  currency: GBP
            - dateTime: 2000-01-23T04:56:07.000+00:00
              creditLineIncluded: true
              balanceAmount:
                amount: 10
                currency: GBP
              creditLines:
              - creditLineAmount:
                  amount: 10
                  currency: GBP
              - creditLineAmount:
                  amount: 10
                  currency: GBP
            id: id
          accountNames:
          - name: name
          - name: name
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "401016"
            type: SORT_CODE
          balance: 2.3021358869347655
          accountBalances:
          - dateTime: 2000-01-23T04:56:07.000+00:00
            creditLineIncluded: true
            balanceAmount:
              amount: 10
              currency: GBP
            creditLines:
            - creditLineAmount:
                amount: 10
                currency: GBP
            - creditLineAmount:
                amount: 10
                currency: GBP
          - dateTime: 2000-01-23T04:56:07.000+00:00
            creditLineIncluded: true
            balanceAmount:
              amount: 10
              currency: GBP
            creditLines:
            - creditLineAmount:
                amount: 10
                currency: GBP
            - creditLineAmount:
                amount: 10
                currency: GBP
          nickname: nickname
          currency: currency
          details: details
          id: id
        meta:
          tracingId: tracingId
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/Account'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    AccountAuthorisationRequest:
      example:
        redirect:
          url: url
        forwardParameters:
        - forwardParameters
        - forwardParameters
        institutionId: yapily-mock
        userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        applicationUserId: user-234562290
        callback: https://display-parameters.com
        accountRequest:
          accountIdentifiersForTransaction:
          - accountId: "500000000000000000000001"
            accountIdentification:
              identification: "401016"
              type: SORT_CODE
          - accountId: "500000000000000000000001"
            accountIdentification:
              identification: "401016"
              type: SORT_CODE
          accountIdentifiersForBalance:
          - accountId: "500000000000000000000001"
            accountIdentification:
              identification: "401016"
              type: SORT_CODE
          - accountId: "500000000000000000000001"
            accountIdentification:
              identification: "401016"
              type: SORT_CODE
          transactionFrom: 2020-01-01T00:00:00Z
          featureScope:
          - null
          - null
          transactionTo: 2021-01-01T00:00:00Z
          expiresAt: 2025-01-01T00:00:00Z
          accountIdentifiers:
            accountId: "500000000000000000000001"
            accountIdentification:
              identification: "401016"
              type: SORT_CODE
        oneTimeToken: false
      properties:
        userUuid:
          description: '`User` for which the authorisation request was created.'
          format: uuid
          type: string
        applicationUserId:
          description: __Conditional__. User-friendly identifier of the `User` that
            provides authorisation. If a `User` with the specified `applicationUserId`
            exists, it will be used otherwise, a new `User` with the specified `applicationUserId`
            will be created and used. Either the `userUuid` or `applicationUserId`
            must be provided.
          example: user-234562290
          type: string
        forwardParameters:
          description: Extra parameters the TPP may want to get forwarded in the callback
            request after the PSU redirect.
          items:
            type: string
          type: array
        institutionId:
          description: __Mandatory__. The reference to the `Institution` which identifies
            which institution the authorisation request is sent to.
          example: yapily-mock
          type: string
        callback:
          description: __Optional__. The server to redirect the user to after the
            user completes the authorisation at the `Institution`. <br><br>See [Using
            a callback (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-optional)
            for more information.
          example: https://display-parameters.com
          type: string
        redirect:
          $ref: '#/components/schemas/RedirectRequest'
        oneTimeToken:
          description: __Conditional__. Used to receive a `oneTimeToken` rather than
            a `consentToken` at the `callback` for additional security. This can only
            be used when the `callback` is set. <br><br>See [Using a callback with
            an OTT (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-with-an-ott-optional)
            for more information.
          example: false
          type: boolean
        accountRequest:
          $ref: '#/components/schemas/AccountRequest'
      required:
      - institutionId
      type: object
    AccountBalance:
      example:
        dateTime: 2000-01-23T04:56:07.000+00:00
        creditLineIncluded: true
        balanceAmount:
          amount: 10
          currency: GBP
        creditLines:
        - creditLineAmount:
            amount: 10
            currency: GBP
        - creditLineAmount:
            amount: 10
            currency: GBP
      properties:
        type:
          $ref: '#/components/schemas/AccountBalanceType'
        dateTime:
          description: Date and time of the reported balance.
          format: date-time
          type: string
        balanceAmount:
          $ref: '#/components/schemas/Amount'
        creditLineIncluded:
          description: _Optional_. Indicates whether any credit lines are included
            in the balance.
          type: boolean
        creditLines:
          description: _Optional_. Specifies the type of balance.
          items:
            $ref: '#/components/schemas/CreditLine'
          type: array
      type: object
    EmbeddedAccountAuthorisationRequest:
      example:
        redirect:
          url: url
        forwardParameters:
        - forwardParameters
        - forwardParameters
        institutionId: yapily-mock
        userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        applicationUserId: user-234562290
        userCredentials:
          password: PISPWD12
          id: "6154057725"
          corporateId: "6345898763"
        callback: https://display-parameters.com
        selectedScaMethod:
          id: "944"
          type: PUSH_OTP
          description: SecureSIGN
        accountRequest:
          accountIdentifiersForTransaction:
          - accountId: "500000000000000000000001"
            accountIdentification:
              identification: "401016"
              type: SORT_CODE
          - accountId: "500000000000000000000001"
            accountIdentification:
              identification: "401016"
              type: SORT_CODE
          accountIdentifiersForBalance:
          - accountId: "500000000000000000000001"
            accountIdentification:
              identification: "401016"
              type: SORT_CODE
          - accountId: "500000000000000000000001"
            accountIdentification:
              identification: "401016"
              type: SORT_CODE
          transactionFrom: 2020-01-01T00:00:00Z
          featureScope:
          - null
          - null
          transactionTo: 2021-01-01T00:00:00Z
          expiresAt: 2025-01-01T00:00:00Z
          accountIdentifiers:
            accountId: "500000000000000000000001"
            accountIdentification:
              identification: "401016"
              type: SORT_CODE
        scaCode: "325614"
        oneTimeToken: false
      properties:
        userUuid:
          description: '`User` for which the authorisation request was created.'
          format: uuid
          type: string
        applicationUserId:
          description: __Conditional__. The user-friendly reference to the `User`
            that will authorise the authorisation request. If a `User` with the specified
            `applicationUserId` exists, it will be used otherwise, a new `User` with
            the specified `applicationUserId` will be created and used. Either the
            `userUuid` or `applicationUserId` must be provided.
          example: user-234562290
          type: string
        forwardParameters:
          description: Extra parameters the TPP may want to get forwarded in the callback
            request after the PSU redirect.
          items:
            type: string
          type: array
        institutionId:
          description: __Mandatory__. The reference to the `Institution` which identifies
            which institution the authorisation request is sent to.
          example: yapily-mock
          type: string
        callback:
          description: __Optional__. The server to redirect the user to after the
            user complete the authorisation at the `Institution`. <br><br>See [Using
            a callback (Optional)](https://docs.yapily.com/) for more information.
          example: https://display-parameters.com
          type: string
        redirect:
          $ref: '#/components/schemas/RedirectRequest'
        oneTimeToken:
          description: __Conditional__. Used to receive a `oneTimeToken` rather than
            a `consentToken` at the `callback` for additional security. This can only
            be used when the `callback` is set. <br><br>See [Using a callback with
            an OTT (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-with-an-ott-optional)
            for more information.
          example: false
          type: boolean
        userCredentials:
          $ref: '#/components/schemas/UserCredentials'
        selectedScaMethod:
          $ref: '#/components/schemas/ScaMethod'
        scaCode:
          description: __Conditional__. Used to update the authorisation with the
            sca code received by the user from the `Institution` using the embedded
            account authorisation flow.<br><br>This is the penultimate step required
            in the embedded account authorisation flow to authorise the `Consent`.
            After sending the sca code, to obtain an authorised consent, the last
            step is to poll [Get Consent](https://docs.yapily.com/api/reference/#operation/getConsentById)
            until the `Institution` authorises the request and the `Consent` `status`
            transitions to `AUTHORIZED`.
          example: "325614"
          type: string
        accountRequest:
          $ref: '#/components/schemas/AccountRequest'
      required:
      - institutionId
      type: object
    AccountIdentification:
      example:
        identification: "401016"
        type: SORT_CODE
      properties:
        type:
          $ref: '#/components/schemas/AccountIdentificationType'
        identification:
          description: __Mandatory__. The value associated with the account identification
            type.<br><br> See [Account Identification Combinations](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/intro-to-payment-execution/#account-identifications-combinations)
            for more information on the format of the values.
          example: "401016"
          type: string
      required:
      - identification
      - type
      type: object
    AccountInfo:
      description: __Conditional__. Used to create a request for the balance of the
        account specified. Once the user authorises the request, only the balance
        can be obtained by executing [GET Account Balances](./#get-account-balances).<br><br>
        This can be specified in conjunction with `accountIdentifiersForTransaction`
        to generate a `Consent` that can both access the accounts balance and transactions.
      example:
        accountId: "500000000000000000000001"
        accountIdentification:
          identification: "401016"
          type: SORT_CODE
      properties:
        accountId:
          description: __Mandatory__. Unique identifier of the account.
          example: "500000000000000000000001"
          type: string
        accountIdentification:
          $ref: '#/components/schemas/AccountIdentification'
      required:
      - accountId
      - accountIdentification
      type: object
    AccountName:
      example:
        name: name
      properties:
        name:
          description: The bank account holder's name given by the account owner.
          type: string
      type: object
    AccountRequest:
      description: __Conditional__. Used to further specify details of the `Consent`
        to request <br><br>Conditions:<ol><li>Mandatory to access balance/transaction
        data for an `Institution` within the [CBI Globe](https://docs.yapily.com/pages/knowledge/open-banking/cbi_globe/)</li><li>Mandatory
        to specify the individual scopes to request from the user at the `Institution`
        for an account authorisation</li><li>Mandatory to specify an expiry time on
        the created `Consent` at which time will render it unusable</li><li>Mandatory
        to specify the date range that the created `Consent` will be able to access
        transactions for (given the range is support for the `Institution`)</li></ol>
      example:
        accountIdentifiersForTransaction:
        - accountId: "500000000000000000000001"
          accountIdentification:
            identification: "401016"
            type: SORT_CODE
        - accountId: "500000000000000000000001"
          accountIdentification:
            identification: "401016"
            type: SORT_CODE
        accountIdentifiersForBalance:
        - accountId: "500000000000000000000001"
          accountIdentification:
            identification: "401016"
            type: SORT_CODE
        - accountId: "500000000000000000000001"
          accountIdentification:
            identification: "401016"
            type: SORT_CODE
        transactionFrom: 2020-01-01T00:00:00Z
        featureScope:
        - null
        - null
        transactionTo: 2021-01-01T00:00:00Z
        expiresAt: 2025-01-01T00:00:00Z
        accountIdentifiers:
          accountId: "500000000000000000000001"
          accountIdentification:
            identification: "401016"
            type: SORT_CODE
      properties:
        transactionFrom:
          description: __Optional__. Used to specify the lower bound on when to pull
            transaction. This should be declared when accessing transaction older
            than 90 days for banks in the [CBI Globe](https://docs.yapily.com/pages/knowledge/open-banking/cbi_globe/).
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
        transactionTo:
          description: __Optional__. When performing a request using the consent,
            this is the latest date of transaction records that can be retrieved.
          example: 2021-01-01T00:00:00Z
          format: date-time
          type: string
        expiresAt:
          description: '__Optional__. Used to set a hard date for when the user''s
            associated `Consent` will expire.<br><br>**Note**: If this supported by
            the bank, specifying this is property is opting out of having a long-lived
            consent that can be perpetually re-authorised by the user. This will add
            an `expiresAt` field on the `Consent` object which will render it unusable
            after this date.<br><br>**Note**: This is not supported by every `Institution`.
            In such case, the request will not fail but the property will be ignored
            and the created `Consent` will not have an expiry date.'
          example: 2025-01-01T00:00:00Z
          format: date-time
          type: string
        accountIdentifiers:
          $ref: '#/components/schemas/AccountInfo'
        accountIdentifiersForTransaction:
          description: __Conditional__. Used to create a request for the transactions
            of the account specified. Once the user authorises the request, only the
            transactions can be obtained by executing [GET Account Transactions](./#get-account-transactions).
            <br><br>This can be specified in conjunction with `accountIdentifiersForBalance`
            to generate a `Consent` that can both access the accounts balance and
            transactions.
          items:
            $ref: '#/components/schemas/AccountInfo'
          type: array
        accountIdentifiersForBalance:
          description: __Conditional__. Used to create a request for the balance of
            the account specified. Once the user authorises the request, only the
            balance can be obtained by executing [GET Account Balances](./#get-account-balances).<br><br>
            This can be specified in conjunction with `accountIdentifiersForTransaction`
            to generate a `Consent` that can both access the accounts balance and
            transactions.
          items:
            $ref: '#/components/schemas/AccountInfo'
          type: array
        featureScope:
          description: __Optional__. Used to granularly specify the set of features
            that the user will give their consent for when requesting access to their
            account information. Depending on the `Institution`, this may also populate
            a consent screen which list these scopes before the user authorises.<br><br>This
            endpoint accepts allow all [Financial Data Features](/guides/financial-data/features/#feature-list)
            that the `Institution` supports.To find out which scopes an `Institution`
            supports, check [GET Institution](./#get-institution).
          items:
            $ref: '#/components/schemas/FeatureEnum'
          type: array
          uniqueItems: true
      type: object
    AccountStatement:
      description: Statement information belonging to the account.
      example:
        startDateTime: 2000-01-23T04:56:07.000+00:00
        id: id
        endDateTime: 2000-01-23T04:56:07.000+00:00
        creationDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Unique identifier for the statement.
          type: string
        startDateTime:
          description: Date and time of when the statement period starts.
          format: date-time
          type: string
        endDateTime:
          description: Date and time of when the statement period ends.
          format: date-time
          type: string
        creationDateTime:
          description: Date and time of when the statement was created.
          format: date-time
          type: string
      type: object
    AccountBalanceType:
      description: Specifies the type of the stated account balance.
      enum:
      - CLOSING_AVAILABLE
      - CLOSING_BOOKED
      - CLOSING_CLEARED
      - EXPECTED
      - FORWARD_AVAILABLE
      - INFORMATION
      - INTERIM_AVAILABLE
      - INTERIM_BOOKED
      - INTERIM_CLEARED
      - OPENING_AVAILABLE
      - OPENING_BOOKED
      - OPENING_CLEARED
      - PREVIOUSLY_CLOSED_BOOKED
      - AUTHORISED
      - OTHER
      - UNKNOWN
      type: string
    AccountIdentificationType:
      description: __Mandatory__. Used to describe the format of the account.<br><br>
        See [Account Identification Combinations](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/intro-to-payment-execution/#account-identifications-combinations)
        for more information on when to specify each type.
      enum:
      - SORT_CODE
      - ACCOUNT_NUMBER
      - IBAN
      - BBAN
      - BIC
      - PAN
      - MASKED_PAN
      - MSISDN
      - BSB
      - NCC
      - ABA
      - ABA_WIRE
      - ABA_ACH
      - EMAIL
      - ROLL_NUMBER
      - BLZ
      - IFS
      - CLABE
      - CTN
      - BRANCH_CODE
      example: SORT_CODE
      type: string
    ApiResponseOfAccountStatement:
      example:
        tracingId: tracingId
        data:
          startDateTime: 2000-01-23T04:56:07.000+00:00
          id: id
          endDateTime: 2000-01-23T04:56:07.000+00:00
          creationDateTime: 2000-01-23T04:56:07.000+00:00
        meta:
          tracingId: tracingId
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/AccountStatement'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    ApiListResponseOfAccountStatement:
      example:
        tracingId: tracingId
        data:
        - startDateTime: 2000-01-23T04:56:07.000+00:00
          id: id
          endDateTime: 2000-01-23T04:56:07.000+00:00
          creationDateTime: 2000-01-23T04:56:07.000+00:00
        - startDateTime: 2000-01-23T04:56:07.000+00:00
          id: id
          endDateTime: 2000-01-23T04:56:07.000+00:00
          creationDateTime: 2000-01-23T04:56:07.000+00:00
        meta:
          tracingId: tracingId
          pagination:
            next:
              cursor: cursor
              before: 2000-01-23T04:56:07.000+00:00
              limit: 5
              from: 2000-01-23T04:56:07.000+00:00
            self:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
            totalCount: 6
          count: 0
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
        paging:
          data:
          - startDateTime: 2000-01-23T04:56:07.000+00:00
            id: id
            endDateTime: 2000-01-23T04:56:07.000+00:00
            creationDateTime: 2000-01-23T04:56:07.000+00:00
          - startDateTime: 2000-01-23T04:56:07.000+00:00
            id: id
            endDateTime: 2000-01-23T04:56:07.000+00:00
            creationDateTime: 2000-01-23T04:56:07.000+00:00
          apiCall: '{}'
          totalCount: 0
          nextCursorHash: nextCursorHash
          nextLink: nextLink
          pagingMap:
            key:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
      properties:
        meta:
          $ref: '#/components/schemas/ResponseListMeta'
        data:
          items:
            $ref: '#/components/schemas/AccountStatement'
          type: array
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        paging:
          $ref: '#/components/schemas/FilteredClientPayloadListAccountStatement'
        tracingId:
          type: string
          writeOnly: true
      type: object
    AccountType:
      description: The type of account e.g. (Credit Card, Savings).
      enum:
      - CASH_TRADING
      - CASH_INCOME
      - CASH_PAYMENT
      - CHARGE_CARD
      - CHARGES
      - COMMISSION
      - CREDIT_CARD
      - CURRENT
      - E_MONEY
      - LIMITED_LIQUIDITY_SAVINGS_ACCOUNT
      - LOAN
      - MARGINAL_LENDING
      - MONEY_MARKET
      - MORTGAGE
      - NON_RESIDENT_EXTERNAL
      - OTHER
      - OVERDRAFT
      - OVERNIGHT_DEPOSIT
      - PREPAID_CARD
      - SALARY
      - SAVINGS
      - SETTLEMENT
      - TAX
      - UNKNOWN
      type: string
    Address:
      description: __Conditional__. The address of the `Payee` or `Payer`.<ul><li>`payee.address`
        is mandatory when the `paymentType` is an `INTERNATIONAL` payment</li><li>An
        `Institution` may require you to specify the `country` when used in the context
        ofthe `Payee` to be able to make a payment.</li></ul>
      example:
        country: GB
      properties:
        addressLines:
          description: __Optional__. The address line of the address
          example:
          - Ardenham Court
          items:
            type: string
          type: array
        streetName:
          description: __Optional__. The street name of the address
          example: Oxford Road
          type: string
        buildingNumber:
          description: __Optional__. The building number of the address
          example: "45"
          type: string
        postCode:
          description: __Optional__. The post code of the address
          example: HP19 3EQ
          type: string
        townName:
          description: __Optional__. The town name of the address
          example: Aylesbury
          type: string
        county:
          description: __Optional__. The list of counties for the address
          example:
          - Buckinghamshire
          items:
            type: string
          type: array
        country:
          description: __Conditional__. The 2-letter country code for the address.
            <br><br>An `Institution` may require you to specify the `country` when
            used in the context of the `Payee` to be able to make a payment
          example: GB
          type: string
        department:
          description: __Optional__. The department for the address
          example: Unit 2
          type: string
        subDepartment:
          description: __Optional__. The sub-department for the address
          example: Floor 3
          type: string
        addressType:
          $ref: '#/components/schemas/AddressTypeEnum'
      type: object
    AddressDetails:
      example:
        addressLine: addressLine
      properties:
        addressLine:
          description: Information, in free format text, that identifies a specific
            address.
          type: string
      type: object
    AddressTypeEnum:
      description: __Optional__. The type of address
      enum:
      - BUSINESS
      - CORRESPONDENCE
      - DELIVERY_TO
      - MAIL_TO
      - PO_BOX
      - POSTAL
      - RESIDENTIAL
      - STATEMENT
      - UNKNOWN
      type: string
    Amount:
      description: __Mandatory__. Monetary Amount.
      example:
        amount: 10
        currency: GBP
      properties:
        amount:
          description: __Mandatory__. The monetary value
          example: 10
          type: number
        currency:
          description: __Mandatory__. The [ISO 4217](https://www.xe.com/iso4217.php)
            currency code
          example: GBP
          type: string
      required:
      - amount
      - currency
      type: object
    ApiCall:
      type: object
    ApiError:
      description: Provides details of the error that has occured.
      properties:
        code:
          description: _Mandatory_. Numeric `HTTP` status code associated with the
            error.
          format: int32
          type: integer
        institutionError:
          $ref: '#/components/schemas/InstitutionError'
        message:
          description: __Mandatory__. Description of the exact error that has been
            experienced.
          type: string
        source:
          type: string
        status:
          description: __Mandatory__. Textual description of the `HTTP` error status
            type.
          type: string
        tracingId:
          description: _Optional_.  A unique identifier assigned by Yapily for the
            request that can be used for support purposes.
          type: string
      type: object
    ApiResponseError:
      description: Used to return errors from the bank from each request<ul><li>`400`
        - Returned by any `POST` endpoint when the body does not conform to the contract</li><li>`401`
        - Returned by any endpoint when an invalid `authToken` is used for authentication</li><li>`403`
        - Returned by any [Financial Data](https://docs.yapily.com/api/reference/#tag/Financial-Data)
        and any [Payments](https://docs.yapily.com/api/reference/#tag/Payments) endpoint
        when the `Consent` is no longer authorised to access financial data or to
        make a payment</li><li>`404` - Returned by any endpoint where there are path
        parameters and the path parameters supplied are unable to find the desired
        resource</li><li>`409` - Returned by any `POST` endpoint when creating a resource
        that conflicts with any other existing resource e.g. [Create User](https://docs.yapily.com/api/reference/#operation/addUser)</li><li>`424`
        - Returned by any [Financial Data](https://docs.yapily.com/api/reference/#tag/Financial-Data)
        and any [Payments](https://docs.yapily.com/api/reference/#tag/Payments) endpoint
        when the feature to be accessed is not supported by the `Institution`.</li><li>`500`
        - Returned by any endpoint when Yapily is down. If you encounter any false
        positives, please <a href="mailto:support@yapily.com">notify us</a></li></ul>
      example:
        error:
          tracingId: 74b13ce8ed51419f92c5d609e04532de
          code: 424
          institutionError:
            errorMessage: '{"Code":"500 Internal Server Error","Id":"5ff8d331-4282-41e0-b5ef-1ac9ac39f009","Message":"Technical
              Error. Please try again later","Errors":[{"ErrorCode":"UK.OBIE.UnexpectedError","Message":"There
              was a problem processing your request. Please try again later"}]}'
            httpStatusCode: 500
          source: INSTITUTION
          status: FAILED_DEPENDENCY
        monitoring: []
      properties:
        error:
          $ref: '#/components/schemas/ApiError'
        monitoring:
          items:
            $ref: '#/components/schemas/MonitoringEndpointStatus'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
      type: object
    Application:
      description: Information about the application.
      example:
        institutions:
        - features:
          - null
          - null
          name: name
          fullName: fullName
          id: id
          countries:
          - displayName: displayName
            countryCode2: countryCode2
          - displayName: displayName
            countryCode2: countryCode2
          media:
          - source: source
            type: type
          - source: source
            type: type
          monitoring:
            key:
              lastTested: 2000-01-23T04:56:07.000+00:00
              span: span
        - features:
          - null
          - null
          name: name
          fullName: fullName
          id: id
          countries:
          - displayName: displayName
            countryCode2: countryCode2
          - displayName: displayName
            countryCode2: countryCode2
          media:
          - source: source
            type: type
          - source: source
            type: type
          monitoring:
            key:
              lastTested: 2000-01-23T04:56:07.000+00:00
              span: span
        authCallbacks:
        - authCallbacks
        - authCallbacks
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        active: true
        media:
        - source: source
          type: type
        - source: source
          type: type
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        uuid:
          description: Unique identification for the `Application` as assigned by
            Yapily.
          format: uuid
          type: string
        name:
          description: The individual name of the `Application`.
          type: string
        active:
          description: States whether an `Application` is active.
          type: boolean
        authCallbacks:
          items:
            description: URL'S used for redirecting the `User's` application after
              authentication has been completed.
            type: string
          type: array
        institutions:
          items:
            $ref: '#/components/schemas/Institution'
          type: array
          uniqueItems: true
        media:
          items:
            $ref: '#/components/schemas/Media'
          type: array
          uniqueItems: true
        created:
          description: Date and time of when the application was created.
          format: date-time
          type: string
        updated:
          description: Date and time of when the application was last updated.
          format: date-time
          type: string
      type: object
    ApplicationUser:
      description: Information about a user of an application.
      example:
        institutionConsents:
        - institutionId: institutionId
        - institutionId: institutionId
        applicationUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        applicationUserId: applicationUserId
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        referenceId: referenceId
      properties:
        uuid:
          description: A unique identifier for the 'User' assigned by Yapily.
          format: uuid
          type: string
        applicationUuid:
          description: Unique identifier of the application the user is associated
            with.
          format: uuid
          type: string
        applicationUserId:
          description: __Conditional__. The user-friendly reference to the `User`.
          type: string
        referenceId:
          type: string
        institutionConsents:
          items:
            $ref: '#/components/schemas/InstitutionConsent'
          type: array
      type: object
    EmbeddedAccountAuthorisationResponse:
      example:
        institutionId: institutionId
        authorizedAt: 2000-01-23T04:56:07.000+00:00
        transactionFrom: 2000-01-23T04:56:07.000+00:00
        consentToken: consentToken
        authorisationUrl: authorisationUrl
        referenceId: referenceId
        transactionTo: 2000-01-23T04:56:07.000+00:00
        expiresAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        timeToExpire: timeToExpire
        scaMethods:
        - id: "944"
          type: PUSH_OTP
          description: SecureSIGN
        - id: "944"
          type: PUSH_OTP
          description: SecureSIGN
        timeToExpireInMillis: 0
        qrCodeUrl: qrCodeUrl
        userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        applicationUserId: applicationUserId
        selectedScaMethod:
          id: "944"
          type: PUSH_OTP
          description: SecureSIGN
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: state
        featureScope:
        - null
        - null
        institutionConsentId: institutionConsentId
      properties:
        id:
          description: '`User` for which the authorisation request was created.'
          format: uuid
          type: string
        userUuid:
          description: __Conditional__. User-friendly identifier of the `User` that
            provides authorisation. If a `User` with the specified `applicationUserId`
            exists, it will be used otherwise, a new `User` with the specified `applicationUserId`
            will be created and used. Either the `userUuid` or `applicationUserId`
            must be provided.
          format: uuid
          type: string
        applicationUserId:
          description: __Conditional__. The user-friendly reference to the `User`
            that will authorise the authorisation request. If a `User` with the specified
            `applicationUserId` exists, it will be used otherwise, a new `User` with
            the specified `applicationUserId` will be created and used. Either the
            `userUuid` or `applicationUserId` must be provided.
          type: string
        referenceId:
          type: string
        institutionId:
          description: __Mandatory__. The `Institution` the authorisation request
            is sent to.
          type: string
        status:
          $ref: '#/components/schemas/AuthorisationStatus'
        createdAt:
          description: Date and time of when the embedded authorisation was created
            by the application user.
          format: date-time
          type: string
        transactionFrom:
          description: When performing a transaction query using the consent, this
            is the earliest date of transaction records that can be retrieved.
          format: date-time
          type: string
        transactionTo:
          description: When performing a transaction query using the consent, this
            is the latest date of transaction records that can be retrieved.
          format: date-time
          type: string
        expiresAt:
          description: Date and time of when the embedded authorisation will expire
            by. Reauthorisation will be needed to retain access.
          format: date-time
          type: string
        timeToExpireInMillis:
          deprecated: true
          format: int64
          type: integer
        timeToExpire:
          format: iso8601
          type: string
        featureScope:
          description: The set of features that the consent will provide access to.
          items:
            $ref: '#/components/schemas/FeatureEnum'
          type: array
          uniqueItems: true
        consentToken:
          description: Represents the authorisation to gain access to the requested
            features. Required to access account information or make a payment request.
          type: string
        state:
          description: Corellation ID used when handshaking with a new insitution
            via OAuth2 registration.
          type: string
        authorizedAt:
          description: Date and time of when the request was authorised by the Institution.
          format: date-time
          type: string
        institutionConsentId:
          description: Identification of the consent at the Institution.
          type: string
        authorisationUrl:
          type: string
        qrCodeUrl:
          description: The URL link for the QR code that may be scanned via a mobile
            device to make a authorisation redirect to the bank (authURL encoded).
          type: string
        scaMethods:
          description: List of `SCA methods` the `Institution` supports and that are
            available for selection.
          items:
            $ref: '#/components/schemas/ScaMethod'
          type: array
        selectedScaMethod:
          $ref: '#/components/schemas/ScaMethod'
      type: object
    ApiResponseOfEmbeddedAccountAuthorisationResponse:
      example:
        tracingId: tracingId
        data:
          institutionId: institutionId
          authorizedAt: 2000-01-23T04:56:07.000+00:00
          transactionFrom: 2000-01-23T04:56:07.000+00:00
          consentToken: consentToken
          authorisationUrl: authorisationUrl
          referenceId: referenceId
          transactionTo: 2000-01-23T04:56:07.000+00:00
          expiresAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          timeToExpire: timeToExpire
          scaMethods:
          - id: "944"
            type: PUSH_OTP
            description: SecureSIGN
          - id: "944"
            type: PUSH_OTP
            description: SecureSIGN
          timeToExpireInMillis: 0
          qrCodeUrl: qrCodeUrl
          userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          applicationUserId: applicationUserId
          selectedScaMethod:
            id: "944"
            type: PUSH_OTP
            description: SecureSIGN
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          featureScope:
          - null
          - null
          institutionConsentId: institutionConsentId
        meta:
          tracingId: tracingId
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/EmbeddedAccountAuthorisationResponse'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    AccountAuthorisationResponse:
      example:
        institutionId: institutionId
        authorizedAt: 2000-01-23T04:56:07.000+00:00
        transactionFrom: 2000-01-23T04:56:07.000+00:00
        consentToken: consentToken
        authorisationUrl: authorisationUrl
        referenceId: referenceId
        transactionTo: 2000-01-23T04:56:07.000+00:00
        expiresAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        timeToExpire: timeToExpire
        timeToExpireInMillis: 0
        qrCodeUrl: qrCodeUrl
        userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        applicationUserId: applicationUserId
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: state
        featureScope:
        - null
        - null
        institutionConsentId: institutionConsentId
      properties:
        id:
          format: uuid
          type: string
        userUuid:
          format: uuid
          type: string
        applicationUserId:
          type: string
        referenceId:
          type: string
        institutionId:
          type: string
        status:
          $ref: '#/components/schemas/AuthorisationStatus'
        createdAt:
          format: date-time
          type: string
        transactionFrom:
          format: date-time
          type: string
        transactionTo:
          format: date-time
          type: string
        expiresAt:
          format: date-time
          type: string
        timeToExpireInMillis:
          deprecated: true
          format: int64
          type: integer
        timeToExpire:
          format: iso8601
          type: string
        featureScope:
          items:
            $ref: '#/components/schemas/FeatureEnum'
          type: array
          uniqueItems: true
        consentToken:
          type: string
        state:
          type: string
        authorizedAt:
          format: date-time
          type: string
        institutionConsentId:
          type: string
        authorisationUrl:
          type: string
        qrCodeUrl:
          type: string
      type: object
    AuthorisationStatus:
      description: Current status of the embedded authorisation request in code form.
      enum:
      - AWAITING_AUTHORIZATION
      - AWAITING_FURTHER_AUTHORIZATION
      - AWAITING_RE_AUTHORIZATION
      - AUTHORIZED
      - CONSUMED
      - REJECTED
      - REVOKED
      - FAILED
      - EXPIRED
      - UNKNOWN
      - INVALID
      - AWAITING_DECOUPLED_PRE_AUTHORIZATION
      - AWAITING_PRE_AUTHORIZATION
      - PRE_AUTHORIZED
      - AWAITING_DECOUPLED_AUTHORIZATION
      - AWAITING_SCA_METHOD
      - AWAITING_SCA_CODE
      type: string
    ApiResponseOfAccountAuthorisationResponse:
      example:
        tracingId: tracingId
        data:
          institutionId: institutionId
          authorizedAt: 2000-01-23T04:56:07.000+00:00
          transactionFrom: 2000-01-23T04:56:07.000+00:00
          consentToken: consentToken
          authorisationUrl: authorisationUrl
          referenceId: referenceId
          transactionTo: 2000-01-23T04:56:07.000+00:00
          expiresAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          timeToExpire: timeToExpire
          timeToExpireInMillis: 0
          qrCodeUrl: qrCodeUrl
          userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          applicationUserId: applicationUserId
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          featureScope:
          - null
          - null
          institutionConsentId: institutionConsentId
        meta:
          tracingId: tracingId
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/AccountAuthorisationResponse'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    TransactionBalance:
      example:
        balanceAmount:
          amount: 10
          currency: GBP
      properties:
        type:
          $ref: '#/components/schemas/AccountBalanceType'
        balanceAmount:
          $ref: '#/components/schemas/Amount'
      type: object
    Balances:
      example:
        mainBalanceAmount:
          amount: 10
          currency: GBP
        balances:
        - dateTime: 2000-01-23T04:56:07.000+00:00
          creditLineIncluded: true
          balanceAmount:
            amount: 10
            currency: GBP
          creditLines:
          - creditLineAmount:
              amount: 10
              currency: GBP
          - creditLineAmount:
              amount: 10
              currency: GBP
        - dateTime: 2000-01-23T04:56:07.000+00:00
          creditLineIncluded: true
          balanceAmount:
            amount: 10
            currency: GBP
          creditLines:
          - creditLineAmount:
              amount: 10
              currency: GBP
          - creditLineAmount:
              amount: 10
              currency: GBP
      properties:
        mainBalanceAmount:
          $ref: '#/components/schemas/Amount'
        balances:
          items:
            $ref: '#/components/schemas/AccountBalance'
          type: array
      type: object
    ApiResponseOfBalances:
      example:
        tracingId: tracingId
        data:
          mainBalanceAmount:
            amount: 10
            currency: GBP
          balances:
          - dateTime: 2000-01-23T04:56:07.000+00:00
            creditLineIncluded: true
            balanceAmount:
              amount: 10
              currency: GBP
            creditLines:
            - creditLineAmount:
                amount: 10
                currency: GBP
            - creditLineAmount:
                amount: 10
                currency: GBP
          - dateTime: 2000-01-23T04:56:07.000+00:00
            creditLineIncluded: true
            balanceAmount:
              amount: 10
              currency: GBP
            creditLines:
            - creditLineAmount:
                amount: 10
                currency: GBP
            - creditLineAmount:
                amount: 10
                currency: GBP
        meta:
          tracingId: tracingId
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/Balances'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    Beneficiary:
      example:
        reference: reference
        payee:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "71518920"
            type: ACCOUNT_NUMBER
          address:
            country: GB
          name: Jane Doe
        trusted: true
        id: id
      properties:
        id:
          type: string
        reference:
          type: string
        payee:
          $ref: '#/components/schemas/BeneficiaryPayee'
        trusted:
          type: boolean
      type: object
    BeneficiaryPayee:
      description: __Mandatory__. The `BeneficiaryPayee` object contains details of
        the beneficiary [person or business]. You must define this in your payment
        request along with all of the nested mandatory properties.
      example:
        accountIdentifications:
        - identification: "401016"
          type: SORT_CODE
        - identification: "71518920"
          type: ACCOUNT_NUMBER
        address:
          country: GB
        name: Jane Doe
      properties:
        name:
          description: The account holder name of the beneficiary.
          example: Jane Doe
          type: string
        accountIdentifications:
          description: __Mandatory__. The account identifications that identify the
            `BeneficiaryPayee` bank account.
          example:
          - identification: "401016"
            type: SORT_CODE
          - identification: "71518920"
            type: ACCOUNT_NUMBER
          items:
            $ref: '#/components/schemas/AccountIdentification'
          type: array
          uniqueItems: true
        address:
          $ref: '#/components/schemas/Address'
      required:
      - accountIdentifications
      type: object
    ApiListResponseOfBeneficiary:
      example:
        tracingId: tracingId
        data:
        - reference: reference
          payee:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            name: Jane Doe
          trusted: true
          id: id
        - reference: reference
          payee:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            name: Jane Doe
          trusted: true
          id: id
        meta:
          tracingId: tracingId
          pagination:
            next:
              cursor: cursor
              before: 2000-01-23T04:56:07.000+00:00
              limit: 5
              from: 2000-01-23T04:56:07.000+00:00
            self:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
            totalCount: 6
          count: 0
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseListMeta'
        data:
          items:
            $ref: '#/components/schemas/Beneficiary'
          type: array
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    BulkPaymentAuthorisationRequest:
      example:
        redirect:
          url: url
        forwardParameters:
        - forwardParameters
        - forwardParameters
        institutionId: yapily-mock
        userUuid: e006a012-c306-4355-a6a1-99bf69ae5171
        applicationUserId: user-234562290
        callback: https://display-parameters.com
        oneTimeToken: false
        paymentRequest:
          payments:
          - reference: Bill payment
            payee:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "71518920"
                type: ACCOUNT_NUMBER
              address:
                country: GB
              merchantId: "24589303"
              merchantCategoryCode: "5551"
              name: Jane Doe
            readRefundAccount: false
            periodicPayment:
              numberOfPayments: 5
              nextPaymentDateTime: 2018-01-10T00:00:00Z
              finalPaymentAmount:
                amount: 10
                currency: GBP
              finalPaymentDateTime: 2030-01-10T00:00:00Z
              nextPaymentAmount:
                amount: 10
                currency: GBP
              frequency:
                intervalMonth: 1
                intervalWeek: 1
                executionDay: 1
            amount:
              amount: 10
              currency: GBP
            paymentIdempotencyId: 04ab4536gaerfc0e1f93c4f4
            internationalPayment:
              currencyOfTransfer: currencyOfTransfer
              purpose: purpose
              exchangeRateInformation:
                foreignExchangeContractReference: foreignExchangeContractReference
                rate: 0.8008281904610115
                unitCurrency: unitCurrency
            paymentDateTime: 2021-07-21T17:32:28Z
            payer:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              address:
                country: GB
              name: John Doe
          - reference: Bill payment
            payee:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "71518920"
                type: ACCOUNT_NUMBER
              address:
                country: GB
              merchantId: "24589303"
              merchantCategoryCode: "5551"
              name: Jane Doe
            readRefundAccount: false
            periodicPayment:
              numberOfPayments: 5
              nextPaymentDateTime: 2018-01-10T00:00:00Z
              finalPaymentAmount:
                amount: 10
                currency: GBP
              finalPaymentDateTime: 2030-01-10T00:00:00Z
              nextPaymentAmount:
                amount: 10
                currency: GBP
              frequency:
                intervalMonth: 1
                intervalWeek: 1
                executionDay: 1
            amount:
              amount: 10
              currency: GBP
            paymentIdempotencyId: 04ab4536gaerfc0e1f93c4f4
            internationalPayment:
              currencyOfTransfer: currencyOfTransfer
              purpose: purpose
              exchangeRateInformation:
                foreignExchangeContractReference: foreignExchangeContractReference
                rate: 0.8008281904610115
                unitCurrency: unitCurrency
            paymentDateTime: 2021-07-21T17:32:28Z
            payer:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              address:
                country: GB
              name: John Doe
          originatorIdentificationNumber: originatorIdentificationNumber
          executionDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        userUuid:
          description: __Conditional__. The reference to the `User` that will authorise
            the authorisation request using the Yapily generated UUID. Either the
            `userUuid` or `applicationUserId` must be provided.
          example: e006a012-c306-4355-a6a1-99bf69ae5171
          format: uuid
          type: string
        applicationUserId:
          description: __Conditional__. The user-friendly reference to the `User`
            that will authorise the authorisation request. If a `User` with the specified
            `applicationUserId` exists, it will be used otherwise, a new `User` with
            the specified `applicationUserId` will be created and used. Either the
            `userUuid` or `applicationUserId` must be provided.
          example: user-234562290
          type: string
        forwardParameters:
          description: Extra parameters the TPP may want to get forwarded in the callback
            request after the PSU redirect.
          items:
            type: string
          type: array
        institutionId:
          description: __Mandatory__. The reference to the `Institution` which identifies
            which institution the authorisation request is sent to.
          example: yapily-mock
          type: string
        callback:
          description: __Optional__. The server to redirect the user to after the
            user complete the authorisation at the `Institution`. <br><br>See [Using
            a callback (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-optional)
            for more information.
          example: https://display-parameters.com
          type: string
        redirect:
          $ref: '#/components/schemas/RedirectRequest'
        oneTimeToken:
          description: __Conditional__. Used to receive a `oneTimeToken` rather than
            a `consentToken` at the `callback` for additional security. This can only
            be used when the `callback` is set. <br><br>See [Using a callback with
            an OTT (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-with-an-ott-optional)
            for more information.
          example: false
          type: boolean
        paymentRequest:
          $ref: '#/components/schemas/BulkPaymentRequest'
      required:
      - institutionId
      type: object
    BulkPaymentEmbeddedAuthorisationRequest:
      description: The request body containing a `BulkPaymentEmbeddedAuthorisationRequest`
        json payload
      example:
        redirect:
          url: url
        institutionId: yapily-mock
        userUuid: e006a012-c306-4355-a6a1-99bf69ae5171
        applicationUserId: user-234562290
        userCredentials:
          password: PISPWD12
          id: "6154057725"
          corporateId: "6345898763"
        callback: https://display-parameters.com
        selectedScaMethod:
          id: "944"
          type: PUSH_OTP
          description: SecureSIGN
        scaCode: "325614"
        oneTimeToken: false
        paymentRequest:
          payments:
          - reference: Bill payment
            payee:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "71518920"
                type: ACCOUNT_NUMBER
              address:
                country: GB
              merchantId: "24589303"
              merchantCategoryCode: "5551"
              name: Jane Doe
            readRefundAccount: false
            periodicPayment:
              numberOfPayments: 5
              nextPaymentDateTime: 2018-01-10T00:00:00Z
              finalPaymentAmount:
                amount: 10
                currency: GBP
              finalPaymentDateTime: 2030-01-10T00:00:00Z
              nextPaymentAmount:
                amount: 10
                currency: GBP
              frequency:
                intervalMonth: 1
                intervalWeek: 1
                executionDay: 1
            amount:
              amount: 10
              currency: GBP
            paymentIdempotencyId: 04ab4536gaerfc0e1f93c4f4
            internationalPayment:
              currencyOfTransfer: currencyOfTransfer
              purpose: purpose
              exchangeRateInformation:
                foreignExchangeContractReference: foreignExchangeContractReference
                rate: 0.8008281904610115
                unitCurrency: unitCurrency
            paymentDateTime: 2021-07-21T17:32:28Z
            payer:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              address:
                country: GB
              name: John Doe
          - reference: Bill payment
            payee:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "71518920"
                type: ACCOUNT_NUMBER
              address:
                country: GB
              merchantId: "24589303"
              merchantCategoryCode: "5551"
              name: Jane Doe
            readRefundAccount: false
            periodicPayment:
              numberOfPayments: 5
              nextPaymentDateTime: 2018-01-10T00:00:00Z
              finalPaymentAmount:
                amount: 10
                currency: GBP
              finalPaymentDateTime: 2030-01-10T00:00:00Z
              nextPaymentAmount:
                amount: 10
                currency: GBP
              frequency:
                intervalMonth: 1
                intervalWeek: 1
                executionDay: 1
            amount:
              amount: 10
              currency: GBP
            paymentIdempotencyId: 04ab4536gaerfc0e1f93c4f4
            internationalPayment:
              currencyOfTransfer: currencyOfTransfer
              purpose: purpose
              exchangeRateInformation:
                foreignExchangeContractReference: foreignExchangeContractReference
                rate: 0.8008281904610115
                unitCurrency: unitCurrency
            paymentDateTime: 2021-07-21T17:32:28Z
            payer:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              address:
                country: GB
              name: John Doe
          originatorIdentificationNumber: originatorIdentificationNumber
          executionDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        userUuid:
          description: __Conditional__. The reference to the `User` that will authorise
            the authorisation request using the Yapily generated UUID. Either the
            `userUuid` or `applicationUserId` must be provided.
          example: e006a012-c306-4355-a6a1-99bf69ae5171
          format: uuid
          type: string
        applicationUserId:
          description: __Conditional__. The user-friendly reference to the `User`
            that will authorise the authorisation request. If a `User` with the specified
            `applicationUserId` exists, it will be used otherwise, a new `User` with
            the specified `applicationUserId` will be created and used. Either the
            `userUuid` or `applicationUserId` must be provided.
          example: user-234562290
          type: string
        institutionId:
          description: __Mandatory__. The reference to the `Institution` which identifies
            which institution the authorisation request is sent to.
          example: yapily-mock
          type: string
        callback:
          description: __Optional__. The server to redirect the user to after the
            user complete the authorisation at the `Institution`. <br><br>See [Using
            a callback (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-optional)
            for more information.
          example: https://display-parameters.com
          type: string
        redirect:
          $ref: '#/components/schemas/RedirectRequest'
        oneTimeToken:
          description: __Conditional__. Used to receive a `oneTimeToken` rather than
            a `consentToken` at the `callback` for additional security. This can only
            be used when the `callback` is set. <br><br>See [Using a callback with
            an OTT (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-with-an-ott-optional)
            for more information.
          example: false
          type: boolean
        paymentRequest:
          $ref: '#/components/schemas/BulkPaymentRequest'
        userCredentials:
          $ref: '#/components/schemas/UserCredentials'
        selectedScaMethod:
          $ref: '#/components/schemas/ScaMethod'
        scaCode:
          description: __Conditional__. Used to update the authorisation with the
            sca code received by the user from the `Institution` using the embedded
            payment authorisation flow.<br><br>This is the penultimate step required
            in the embedded payment authorisation flow to authorise the `Consent`.
            After sending the sca code, to obtain an authorised consent, the last
            step is to poll [Get Consent](https://docs.yapily.com/api/reference/#operation/getConsentById)
            until the `Institution` authorises the request and the `Consent` `status`
            transitions to `AUTHORIZED`.
          example: "325614"
          type: string
      required:
      - institutionId
      type: object
    BulkPaymentRequest:
      description: The payment request object defining the details of the bulk payment
      example:
        payments:
        - reference: Bill payment
          payee:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          readRefundAccount: false
          periodicPayment:
            numberOfPayments: 5
            nextPaymentDateTime: 2018-01-10T00:00:00Z
            finalPaymentAmount:
              amount: 10
              currency: GBP
            finalPaymentDateTime: 2030-01-10T00:00:00Z
            nextPaymentAmount:
              amount: 10
              currency: GBP
            frequency:
              intervalMonth: 1
              intervalWeek: 1
              executionDay: 1
          amount:
            amount: 10
            currency: GBP
          paymentIdempotencyId: 04ab4536gaerfc0e1f93c4f4
          internationalPayment:
            currencyOfTransfer: currencyOfTransfer
            purpose: purpose
            exchangeRateInformation:
              foreignExchangeContractReference: foreignExchangeContractReference
              rate: 0.8008281904610115
              unitCurrency: unitCurrency
          paymentDateTime: 2021-07-21T17:32:28Z
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
        - reference: Bill payment
          payee:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          readRefundAccount: false
          periodicPayment:
            numberOfPayments: 5
            nextPaymentDateTime: 2018-01-10T00:00:00Z
            finalPaymentAmount:
              amount: 10
              currency: GBP
            finalPaymentDateTime: 2030-01-10T00:00:00Z
            nextPaymentAmount:
              amount: 10
              currency: GBP
            frequency:
              intervalMonth: 1
              intervalWeek: 1
              executionDay: 1
          amount:
            amount: 10
            currency: GBP
          paymentIdempotencyId: 04ab4536gaerfc0e1f93c4f4
          internationalPayment:
            currencyOfTransfer: currencyOfTransfer
            purpose: purpose
            exchangeRateInformation:
              foreignExchangeContractReference: foreignExchangeContractReference
              rate: 0.8008281904610115
              unitCurrency: unitCurrency
          paymentDateTime: 2021-07-21T17:32:28Z
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
        originatorIdentificationNumber: originatorIdentificationNumber
        executionDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        payments:
          description: __Mandatory__. The array of `PaymentRequest` objects to initiate
            in the bulk payment.
          items:
            $ref: '#/components/schemas/PaymentRequest'
          type: array
        originatorIdentificationNumber:
          description: __Conditional__. The identification number of the originator.<ul><li>Mandatory
            for AIB bulk payments</li></ul>
          type: string
        executionDateTime:
          description: __Optional__. Used to schedule the bulk payment to be executed
            at a future date if supported by the `Institution`.
          format: date-time
          type: string
      required:
      - payments
      type: object
    Categorisation:
      example:
        categories:
        - categories
        - categories
        source: source
      properties:
        categories:
          items:
            type: string
          type: array
        source:
          type: string
      type: object
    Category:
      example:
        country: country
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        label: label
        subcategories:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          label: label
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          label: label
      properties:
        id:
          format: uuid
          type: string
        label:
          type: string
        country:
          type: string
        subcategories:
          items:
            $ref: '#/components/schemas/Subcategory'
          type: array
      type: object
    ApiListResponseOfCategory:
      example:
        tracingId: tracingId
        data:
        - country: country
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          label: label
          subcategories:
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            label: label
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            label: label
        - country: country
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          label: label
          subcategories:
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            label: label
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            label: label
        meta:
          tracingId: tracingId
          pagination:
            next:
              cursor: cursor
              before: 2000-01-23T04:56:07.000+00:00
              limit: 5
              from: 2000-01-23T04:56:07.000+00:00
            self:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
            totalCount: 6
          count: 0
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
        paging:
          data:
          - country: country
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            label: label
            subcategories:
            - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              label: label
            - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              label: label
          - country: country
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            label: label
            subcategories:
            - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              label: label
            - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              label: label
          apiCall: '{}'
          totalCount: 0
          nextCursorHash: nextCursorHash
          nextLink: nextLink
          pagingMap:
            key:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
      properties:
        meta:
          $ref: '#/components/schemas/ResponseListMeta'
        data:
          items:
            $ref: '#/components/schemas/Category'
          type: array
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        paging:
          $ref: '#/components/schemas/FilteredClientPayloadListCategory'
        tracingId:
          type: string
          writeOnly: true
      type: object
    ChargeBearerType:
      description: __Optional__. Specifies which party/parties will bear the charges
        associated with the processing of the payment transaction. Valid values are:<ul><li>`DEBT`
        - All transaction charges are to be borne by the debtor.</li><li>`CRED` -
        All transaction charges are to be borne by the creditor.</li><li>`SHAR` -
        In a credit transfer context, means that transaction charges on the sender
        side are to be borne by the debtor, transaction charges on the receiver side
        are to be borne by the creditor</li><li>`SLEV` - Charges are to be applied
        following the rules agreed in the service level and/or scheme.</li></ul>
      enum:
      - DEBT
      - CRED
      - SHAR
      - SLEV
      type: string
    PaymentChargeDetails:
      example:
        chargeTo: chargeTo
        chargeType: chargeType
        chargeAmount:
          amount: 10
          currency: GBP
      properties:
        chargeAmount:
          $ref: '#/components/schemas/Amount'
        chargeType:
          description: Type of charge
          type: string
        chargeTo:
          description: Charge bearer
          type: string
      type: object
    Consent:
      example:
        institutionId: institutionId
        authorizedAt: 2000-01-23T04:56:07.000+00:00
        transactionFrom: 2000-01-23T04:56:07.000+00:00
        consentToken: consentToken
        referenceId: referenceId
        transactionTo: 2000-01-23T04:56:07.000+00:00
        expiresAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        timeToExpire: timeToExpire
        timeToExpireInMillis: 0
        userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        applicationUserId: applicationUserId
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: state
        featureScope:
        - null
        - null
        institutionConsentId: institutionConsentId
      properties:
        id:
          format: uuid
          type: string
        userUuid:
          format: uuid
          type: string
        applicationUserId:
          type: string
        referenceId:
          type: string
        institutionId:
          type: string
        status:
          $ref: '#/components/schemas/AuthorisationStatus'
        createdAt:
          format: date-time
          type: string
        transactionFrom:
          format: date-time
          type: string
        transactionTo:
          format: date-time
          type: string
        expiresAt:
          format: date-time
          type: string
        timeToExpireInMillis:
          deprecated: true
          format: int64
          type: integer
        timeToExpire:
          format: iso8601
          type: string
        featureScope:
          items:
            $ref: '#/components/schemas/FeatureEnum'
          type: array
          uniqueItems: true
        consentToken:
          type: string
        state:
          type: string
        authorizedAt:
          format: date-time
          type: string
        institutionConsentId:
          type: string
      type: object
    ApiListResponseOfConsent:
      example:
        tracingId: tracingId
        data:
        - institutionId: institutionId
          authorizedAt: 2000-01-23T04:56:07.000+00:00
          transactionFrom: 2000-01-23T04:56:07.000+00:00
          consentToken: consentToken
          referenceId: referenceId
          transactionTo: 2000-01-23T04:56:07.000+00:00
          expiresAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          timeToExpire: timeToExpire
          timeToExpireInMillis: 0
          userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          applicationUserId: applicationUserId
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          featureScope:
          - null
          - null
          institutionConsentId: institutionConsentId
        - institutionId: institutionId
          authorizedAt: 2000-01-23T04:56:07.000+00:00
          transactionFrom: 2000-01-23T04:56:07.000+00:00
          consentToken: consentToken
          referenceId: referenceId
          transactionTo: 2000-01-23T04:56:07.000+00:00
          expiresAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          timeToExpire: timeToExpire
          timeToExpireInMillis: 0
          userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          applicationUserId: applicationUserId
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          featureScope:
          - null
          - null
          institutionConsentId: institutionConsentId
        meta:
          tracingId: tracingId
          pagination:
            next:
              cursor: cursor
              before: 2000-01-23T04:56:07.000+00:00
              limit: 5
              from: 2000-01-23T04:56:07.000+00:00
            self:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
            totalCount: 6
          count: 0
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
        paging:
          data:
          - institutionId: institutionId
            authorizedAt: 2000-01-23T04:56:07.000+00:00
            transactionFrom: 2000-01-23T04:56:07.000+00:00
            consentToken: consentToken
            referenceId: referenceId
            transactionTo: 2000-01-23T04:56:07.000+00:00
            expiresAt: 2000-01-23T04:56:07.000+00:00
            createdAt: 2000-01-23T04:56:07.000+00:00
            timeToExpire: timeToExpire
            timeToExpireInMillis: 0
            userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            applicationUserId: applicationUserId
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            featureScope:
            - null
            - null
            institutionConsentId: institutionConsentId
          - institutionId: institutionId
            authorizedAt: 2000-01-23T04:56:07.000+00:00
            transactionFrom: 2000-01-23T04:56:07.000+00:00
            consentToken: consentToken
            referenceId: referenceId
            transactionTo: 2000-01-23T04:56:07.000+00:00
            expiresAt: 2000-01-23T04:56:07.000+00:00
            createdAt: 2000-01-23T04:56:07.000+00:00
            timeToExpire: timeToExpire
            timeToExpireInMillis: 0
            userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            applicationUserId: applicationUserId
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            featureScope:
            - null
            - null
            institutionConsentId: institutionConsentId
          apiCall: '{}'
          totalCount: 0
          nextCursorHash: nextCursorHash
          nextLink: nextLink
          pagingMap:
            key:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
      properties:
        meta:
          $ref: '#/components/schemas/ResponseListMeta'
        data:
          items:
            $ref: '#/components/schemas/Consent'
          type: array
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        paging:
          $ref: '#/components/schemas/FilteredClientPayloadListConsent'
        tracingId:
          type: string
          writeOnly: true
      type: object
    ApiResponseOfConsent:
      example:
        tracingId: tracingId
        data:
          institutionId: institutionId
          authorizedAt: 2000-01-23T04:56:07.000+00:00
          transactionFrom: 2000-01-23T04:56:07.000+00:00
          consentToken: consentToken
          referenceId: referenceId
          transactionTo: 2000-01-23T04:56:07.000+00:00
          expiresAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          timeToExpire: timeToExpire
          timeToExpireInMillis: 0
          userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          applicationUserId: applicationUserId
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          featureScope:
          - null
          - null
          institutionConsentId: institutionConsentId
        meta:
          tracingId: tracingId
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/Consent'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    ConsentAuthCodeRequest:
      description: The request body containing the `ConsentAuthCodeRequest` json payload
      example:
        authCode: 6b965fbb-ff09-4afa-b897-90c34797cb8f&id_token=eyJhbGciOiJQUzI1NiIsImtpZCI6InprYm9LRmpRUndCZDlVRW5QQzV3bHY1N2lnNCJ9.eyJzdWIiOiJzZHAtNi0xZjA1MjBiNC1mZmNkLTQ4OTgtYWVkMC0wYjU0Y2I2ZDkwM2QiLCJvcGVuYmFua2luZ19pbnRlbnRfaWQiOiJzZHAtNi0xZjA1MjBiNC1mZmNkLTQ4OTgtYWVkMC0wYjU0Y2I2ZDkwM2QiLCJwc3VfaWRlbnRpZmllcnMiOnsidXNlcklkIjoiNzAwMDAxMDAwMDAwMDAwMDAwMDAwMDAyIiwiY29tcGFueUlkIjoiMTIzNDUifSwiaXNzIjoiaHR0cHM6Ly9vYjE5LWF1dGgxLXVpLm8zYmFuay5jby51ayIsImF1ZCI6IjA0ZmJjMGQ5LTlmMDgtNGIyOC1iNjY2LWFkNmEwYmMzM2NjZSIsImlhdCI6MTYxMTIyMjgzNywiZXhwIjoxNjExMjI2NDM3LCJub25jZSI6IjEyNzBjYjJmZmM0ODQyYjc4OTUzYWZhMjIyOGUwYTg5IiwiYXV0aF90aW1lIjoxNjExMjIyODM3LCJhenAiOiIwNGZiYzBkOS05ZjA4LTRiMjgtYjY2Ni1hZDZhMGJjMzNjY2UiLCJyZWZyZXNoX3Rva2VuX2V4cGlyZXNfYXQiOjE2MTE2MTE2MzcsImNfaGFzaCI6Inc5NG9pTkg1RWlBdVNKdWJfUHAxSlEiLCJzX2hhc2giOiJhRmxHY3dJY1EtdTVHYnBmcXRCR293IiwiYWNyIjoidXJuOm9wZW5iYW5raW5nOnBzZDI6c2NhIn0.nfaJ-llxVVa4HS7oii2oGgAV6k3MPwtQLFaOAZ2RY8VcxoWBkXKnrPkwf2jRHvE4aJnnfD3BcDAfJNeDBFEt5YQcujl0NxQm3XpOVkhjUVvINjmi9zbDMz2WFDpz8hSZZxvzxQ29h5nFSFcvXxE-0d2i10nX87OVlophc5GabHt3mnP3UbFIy-k0i9a9JGodheF9Qu3J-q2bgNJpLww8jj-gNH1LekG3qu8fxaB1c5-MuERfSWvrgwrJKKUe_yIxXVpL4zMMXw3B6JGIeUgPHKtAZxiAA9YA6dTlA1yPQwOfh4B-qvAZDmuGBnoB3iUXKLIUqBUA8j3rzLkQj51ORg
        authState: 1270cb2ffc4842b78953afa2228e0a87
      properties:
        authCode:
          description: __Mandatory__. The authorisation code
          example: 6b965fbb-ff09-4afa-b897-90c34797cb8f&id_token=eyJhbGciOiJQUzI1NiIsImtpZCI6InprYm9LRmpRUndCZDlVRW5QQzV3bHY1N2lnNCJ9.eyJzdWIiOiJzZHAtNi0xZjA1MjBiNC1mZmNkLTQ4OTgtYWVkMC0wYjU0Y2I2ZDkwM2QiLCJvcGVuYmFua2luZ19pbnRlbnRfaWQiOiJzZHAtNi0xZjA1MjBiNC1mZmNkLTQ4OTgtYWVkMC0wYjU0Y2I2ZDkwM2QiLCJwc3VfaWRlbnRpZmllcnMiOnsidXNlcklkIjoiNzAwMDAxMDAwMDAwMDAwMDAwMDAwMDAyIiwiY29tcGFueUlkIjoiMTIzNDUifSwiaXNzIjoiaHR0cHM6Ly9vYjE5LWF1dGgxLXVpLm8zYmFuay5jby51ayIsImF1ZCI6IjA0ZmJjMGQ5LTlmMDgtNGIyOC1iNjY2LWFkNmEwYmMzM2NjZSIsImlhdCI6MTYxMTIyMjgzNywiZXhwIjoxNjExMjI2NDM3LCJub25jZSI6IjEyNzBjYjJmZmM0ODQyYjc4OTUzYWZhMjIyOGUwYTg5IiwiYXV0aF90aW1lIjoxNjExMjIyODM3LCJhenAiOiIwNGZiYzBkOS05ZjA4LTRiMjgtYjY2Ni1hZDZhMGJjMzNjY2UiLCJyZWZyZXNoX3Rva2VuX2V4cGlyZXNfYXQiOjE2MTE2MTE2MzcsImNfaGFzaCI6Inc5NG9pTkg1RWlBdVNKdWJfUHAxSlEiLCJzX2hhc2giOiJhRmxHY3dJY1EtdTVHYnBmcXRCR293IiwiYWNyIjoidXJuOm9wZW5iYW5raW5nOnBzZDI6c2NhIn0.nfaJ-llxVVa4HS7oii2oGgAV6k3MPwtQLFaOAZ2RY8VcxoWBkXKnrPkwf2jRHvE4aJnnfD3BcDAfJNeDBFEt5YQcujl0NxQm3XpOVkhjUVvINjmi9zbDMz2WFDpz8hSZZxvzxQ29h5nFSFcvXxE-0d2i10nX87OVlophc5GabHt3mnP3UbFIy-k0i9a9JGodheF9Qu3J-q2bgNJpLww8jj-gNH1LekG3qu8fxaB1c5-MuERfSWvrgwrJKKUe_yIxXVpL4zMMXw3B6JGIeUgPHKtAZxiAA9YA6dTlA1yPQwOfh4B-qvAZDmuGBnoB3iUXKLIUqBUA8j3rzLkQj51ORg
          type: string
        authState:
          description: __Mandatory__. The authorisation state
          example: 1270cb2ffc4842b78953afa2228e0a87
          type: string
      required:
      - authCode
      - authState
      type: object
    ConsentDeleteResponse:
      example:
        institutionId: institutionId
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        creationDate: 2000-01-23T04:56:07.000+00:00
        institutionConsentId: institutionConsentId
      properties:
        id:
          format: uuid
          type: string
        deleteStatus:
          $ref: '#/components/schemas/DeleteStatusEnum'
        institutionId:
          type: string
        institutionConsentId:
          type: string
        creationDate:
          format: date-time
          type: string
      type: object
    ConsolidatedAccountInformation:
      description: Summary information regarding account balances of the overall account
        provided by the bank
      example:
        accountBalances:
        - dateTime: 2000-01-23T04:56:07.000+00:00
          creditLineIncluded: true
          balanceAmount:
            amount: 10
            currency: GBP
          creditLines:
          - creditLineAmount:
              amount: 10
              currency: GBP
          - creditLineAmount:
              amount: 10
              currency: GBP
        - dateTime: 2000-01-23T04:56:07.000+00:00
          creditLineIncluded: true
          balanceAmount:
            amount: 10
            currency: GBP
          creditLines:
          - creditLineAmount:
              amount: 10
              currency: GBP
          - creditLineAmount:
              amount: 10
              currency: GBP
        id: id
      properties:
        id:
          description: Identifier of the consolidated account. When used in Get Account
            Transactions calls, the transactions between the sub-accounts will not
            be reported
          type: string
        accountBalances:
          items:
            $ref: '#/components/schemas/AccountBalance'
          type: array
      type: object
    ApiResponseOfConsentDeleteResponse:
      example:
        tracingId: tracingId
        data:
          institutionId: institutionId
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          creationDate: 2000-01-23T04:56:07.000+00:00
          institutionConsentId: institutionConsentId
        meta:
          tracingId: tracingId
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/ConsentDeleteResponse'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    Country:
      description: An array of `Country` denoting which regions the `Institution`
        provides coverage for
      example:
        displayName: displayName
        countryCode2: countryCode2
      properties:
        displayName:
          type: string
        countryCode2:
          type: string
      type: object
    CredentialsType:
      description: The type of credentials required to register the `Institution`
      enum:
      - OAUTH1
      - OAUTH2
      - OAUTH2_NOSECRET
      - OAUTH2_SIGNATURE
      - OPEN_BANKING_UK_MANUAL
      - OPEN_BANKING_UK_AUTO
      - OPEN_BANKING_IBM
      - OPEN_BANKING_AUTO
      - OPEN_BANKING_AUTO_EMAIL
      - OPEN_BANKING_MANUAL
      - OPEN_BANKING_WITH_TPP_ID_AND_SECRET
      - API_KEY
      - OPEN_BANKING_NO_KEY
      - OPEN_BANKING_NO_TRANSPORT
      - TOKEN_IO
      type: string
    CreditLine:
      example:
        creditLineAmount:
          amount: 10
          currency: GBP
      properties:
        type:
          $ref: '#/components/schemas/CreditLineType'
        creditLineAmount:
          $ref: '#/components/schemas/Amount'
      type: object
    CreditLineType:
      enum:
      - AVAILABLE
      - CREDIT
      - EMERGENCY
      - PRE_AGREED
      - TEMPORARY
      - OTHER
      - UNKNOWN
      type: string
    CurrencyExchange:
      example:
        targetCurrency: targetCurrency
        exchangeRate: 6.027456183070403
        unitCurrency: unitCurrency
        sourceCurrency: sourceCurrency
      properties:
        sourceCurrency:
          type: string
        targetCurrency:
          type: string
        unitCurrency:
          type: string
        exchangeRate:
          type: number
      type: object
    DeleteStatusEnum:
      enum:
      - SUCCESS
      - FAILED
      type: string
    DirectDebitResponse:
      example:
        reference: reference
        previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
        payeeDetails:
          name: Tempus Risus Company
        statusDetails:
          statusReason: statusReason
          statusReasonDescription: statusReasonDescription
          statusUpdateDate: 2000-01-23T04:56:07.000+00:00
          multiAuthorisationStatus:
            expirationDateTime: 2000-01-23T04:56:07.000+00:00
            numberOfAuthorisationReceived: 6
            numberOfAuthorisationRequired: 0
            lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
            status: status
          isoStatus:
            code: ACCC
            name: AcceptedCreditSettlementCompleted
        id: id
        previousPaymentAmount:
          amount: 10
          currency: GBP
      properties:
        id:
          type: string
        statusDetails:
          $ref: '#/components/schemas/PaymentStatusDetails'
        payeeDetails:
          $ref: '#/components/schemas/DirectDebitPayee'
        reference:
          type: string
        previousPaymentAmount:
          $ref: '#/components/schemas/Amount'
        previousPaymentDateTime:
          format: date-time
          type: string
      type: object
    DirectDebitPayee:
      example:
        name: Tempus Risus Company
      properties:
        name:
          description: __Mandatory__. The account holder name.
          example: Tempus Risus Company
          type: string
      type: object
    EnrichedTransaction:
      description: Part of a financial profile for a User.
      example:
        institution: starling
        amount: 21.99
        bookingDateTime: 2020-04-24T00:30:19.951Z
        transactionInformation: Amazon Marketplace
        transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
      properties:
        transactionId:
          description: The id of the transaction
          example: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
          type: string
        transactionInformation:
          description: Information for the transaction
          example: Amazon Marketplace
          type: string
        amount:
          description: The amount of the transaction
          example: 21.99
          type: number
        institution:
          description: The id of the institution
          example: starling
          type: string
        bookingDateTime:
          description: The datetime of the transaction
          example: 2020-04-24T00:30:19.951Z
          format: date-time
          type: string
    EnrichedWrapper:
      description: A financial profile for a User.
      example:
        recentlyTerminatedIncomeStreams:
        - earliestTransactionDate: 2020-04-24T00:00:00.000+0000
          scheduleConsistencyScore: 0.44
          missedTransactions: 3
          averageAmount: 19.708
          name: Amazon Marketplace
          transactions:
          - institution: starling
            amount: 21.99
            bookingDateTime: 2020-04-24T00:30:19.951Z
            transactionInformation: Amazon Marketplace
            transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
          - institution: starling
            amount: 21.99
            bookingDateTime: 2020-04-24T00:30:19.951Z
            transactionInformation: Amazon Marketplace
            transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
          transactionSchedule:
            detailedFrequency: Daily
            detailedFrequencyParameter: 1
            frequency: Daily
          nextExpectedTransactionDate: 2019-10-04T00:00:00.000+0000
          amountConsistencyScore: 0.74
          mostRecentTransactionDate: 2019-10-03T00:00:00.000+0000
        - earliestTransactionDate: 2020-04-24T00:00:00.000+0000
          scheduleConsistencyScore: 0.44
          missedTransactions: 3
          averageAmount: 19.708
          name: Amazon Marketplace
          transactions:
          - institution: starling
            amount: 21.99
            bookingDateTime: 2020-04-24T00:30:19.951Z
            transactionInformation: Amazon Marketplace
            transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
          - institution: starling
            amount: 21.99
            bookingDateTime: 2020-04-24T00:30:19.951Z
            transactionInformation: Amazon Marketplace
            transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
          transactionSchedule:
            detailedFrequency: Daily
            detailedFrequencyParameter: 1
            frequency: Daily
          nextExpectedTransactionDate: 2019-10-04T00:00:00.000+0000
          amountConsistencyScore: 0.74
          mostRecentTransactionDate: 2019-10-03T00:00:00.000+0000
        recentlyTerminatedExpenditureStreams:
        - earliestTransactionDate: 2020-04-24T00:00:00.000+0000
          scheduleConsistencyScore: 0.44
          missedTransactions: 3
          averageAmount: 19.708
          name: Amazon Marketplace
          transactions:
          - institution: starling
            amount: 21.99
            bookingDateTime: 2020-04-24T00:30:19.951Z
            transactionInformation: Amazon Marketplace
            transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
          - institution: starling
            amount: 21.99
            bookingDateTime: 2020-04-24T00:30:19.951Z
            transactionInformation: Amazon Marketplace
            transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
          transactionSchedule:
            detailedFrequency: Daily
            detailedFrequencyParameter: 1
            frequency: Daily
          nextExpectedTransactionDate: 2019-10-04T00:00:00.000+0000
          amountConsistencyScore: 0.74
          mostRecentTransactionDate: 2019-10-03T00:00:00.000+0000
        - earliestTransactionDate: 2020-04-24T00:00:00.000+0000
          scheduleConsistencyScore: 0.44
          missedTransactions: 3
          averageAmount: 19.708
          name: Amazon Marketplace
          transactions:
          - institution: starling
            amount: 21.99
            bookingDateTime: 2020-04-24T00:30:19.951Z
            transactionInformation: Amazon Marketplace
            transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
          - institution: starling
            amount: 21.99
            bookingDateTime: 2020-04-24T00:30:19.951Z
            transactionInformation: Amazon Marketplace
            transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
          transactionSchedule:
            detailedFrequency: Daily
            detailedFrequencyParameter: 1
            frequency: Daily
          nextExpectedTransactionDate: 2019-10-04T00:00:00.000+0000
          amountConsistencyScore: 0.74
          mostRecentTransactionDate: 2019-10-03T00:00:00.000+0000
        expenditureStreams:
        - earliestTransactionDate: 2020-04-24T00:00:00.000+0000
          scheduleConsistencyScore: 0.44
          averageAmount: 19.708
          name: Amazon Marketplace
          transactions:
          - institution: starling
            amount: 21.99
            bookingDateTime: 2020-04-24T00:30:19.951Z
            transactionInformation: Amazon Marketplace
            transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
          - institution: starling
            amount: 21.99
            bookingDateTime: 2020-04-24T00:30:19.951Z
            transactionInformation: Amazon Marketplace
            transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
          transactionSchedule:
            detailedFrequency: Daily
            detailedFrequencyParameter: 1
            frequency: Daily
          nextExpectedTransactionDate: 2019-10-04T00:00:00.000+0000
          amountConsistencyScore: 0.74
          mostRecentTransactionDate: 2019-10-03T00:00:00.000+0000
        - earliestTransactionDate: 2020-04-24T00:00:00.000+0000
          scheduleConsistencyScore: 0.44
          averageAmount: 19.708
          name: Amazon Marketplace
          transactions:
          - institution: starling
            amount: 21.99
            bookingDateTime: 2020-04-24T00:30:19.951Z
            transactionInformation: Amazon Marketplace
            transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
          - institution: starling
            amount: 21.99
            bookingDateTime: 2020-04-24T00:30:19.951Z
            transactionInformation: Amazon Marketplace
            transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
          transactionSchedule:
            detailedFrequency: Daily
            detailedFrequencyParameter: 1
            frequency: Daily
          nextExpectedTransactionDate: 2019-10-04T00:00:00.000+0000
          amountConsistencyScore: 0.74
          mostRecentTransactionDate: 2019-10-03T00:00:00.000+0000
        incomeStreams:
        - earliestTransactionDate: 2020-04-24T00:00:00.000+0000
          scheduleConsistencyScore: 0.44
          averageAmount: 19.708
          name: Amazon Marketplace
          transactions:
          - institution: starling
            amount: 21.99
            bookingDateTime: 2020-04-24T00:30:19.951Z
            transactionInformation: Amazon Marketplace
            transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
          - institution: starling
            amount: 21.99
            bookingDateTime: 2020-04-24T00:30:19.951Z
            transactionInformation: Amazon Marketplace
            transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
          transactionSchedule:
            detailedFrequency: Daily
            detailedFrequencyParameter: 1
            frequency: Daily
          nextExpectedTransactionDate: 2019-10-04T00:00:00.000+0000
          amountConsistencyScore: 0.74
          mostRecentTransactionDate: 2019-10-03T00:00:00.000+0000
        - earliestTransactionDate: 2020-04-24T00:00:00.000+0000
          scheduleConsistencyScore: 0.44
          averageAmount: 19.708
          name: Amazon Marketplace
          transactions:
          - institution: starling
            amount: 21.99
            bookingDateTime: 2020-04-24T00:30:19.951Z
            transactionInformation: Amazon Marketplace
            transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
          - institution: starling
            amount: 21.99
            bookingDateTime: 2020-04-24T00:30:19.951Z
            transactionInformation: Amazon Marketplace
            transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
          transactionSchedule:
            detailedFrequency: Daily
            detailedFrequencyParameter: 1
            frequency: Daily
          nextExpectedTransactionDate: 2019-10-04T00:00:00.000+0000
          amountConsistencyScore: 0.74
          mostRecentTransactionDate: 2019-10-03T00:00:00.000+0000
      properties:
        incomeStreams:
          description: A list of transaction streams
          items:
            $ref: '#/components/schemas/TransactionStream'
          type: array
        expenditureStreams:
          description: A list of transaction streams
          items:
            $ref: '#/components/schemas/TransactionStream'
          type: array
        recentlyTerminatedIncomeStreams:
          description: A list of terminated transaction income streams
          items:
            $ref: '#/components/schemas/TerminatedTransactionStream'
          type: array
        recentlyTerminatedExpenditureStreams:
          description: A list of terminated transaction expenditure streams
          items:
            $ref: '#/components/schemas/TerminatedTransactionStream'
          type: array
      required:
      - expenditureStreams
      - incomeStreams
      - recentlyTerminatedExpenditureStreams
      - recentlyTerminatedIncomeStreams
      type: object
    Enrichment:
      example:
        cleansedDescription: cleansedDescription
        correctedDate: 2000-01-23T04:56:07.000+00:00
        merchant:
          parentGroup: parentGroup
          merchantName: merchantName
        location: location
        paymentProcessor: paymentProcessor
        categorisation:
          categories:
          - categories
          - categories
          source: source
        transactionHash:
          hash: hash
      properties:
        categorisation:
          $ref: '#/components/schemas/Categorisation'
        transactionHash:
          $ref: '#/components/schemas/TransactionHash'
        cleansedDescription:
          type: string
        merchant:
          $ref: '#/components/schemas/EnrichmentMerchant'
        location:
          type: string
        paymentProcessor:
          type: string
        correctedDate:
          format: date-time
          type: string
      type: object
    EnrichmentMerchant:
      example:
        parentGroup: parentGroup
        merchantName: merchantName
      properties:
        merchantName:
          type: string
        parentGroup:
          type: string
      type: object
    EnvironmentType:
      description: The environment type. <br><br>See [Institution Configuration](https://docs.yapily.com/pages/key-concepts/institutions/#configuration)
        for more information
      enum:
      - SANDBOX
      - MOCK
      - LIVE
      type: string
    ExchangeRateInformation:
      description: __Optional__. Used to provide details on the currency exchange
        rate and contract.
      example:
        foreignExchangeContractReference: foreignExchangeContractReference
        rate: 0.8008281904610115
        unitCurrency: unitCurrency
      properties:
        unitCurrency:
          description: __Mandatory__. The currency in which the rate of exchange is
            expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit
            currency is `GBP`.
          type: string
        rate:
          description: __Optional__. The factor used for conversion of an amount from
            one currency to another. This reflects the price at which one currency
            was bought with another currency.
          type: number
        rateType:
          $ref: '#/components/schemas/RateTypeEnum'
        foreignExchangeContractReference:
          description: __Optional__. The unique and unambiguous reference to the foreign
            exchange contract agreed between the initiating party/creditor and the
            debtor agent.
          type: string
      required:
      - rateType
      - unitCurrency
      type: object
    ExchangeRateInformationResponse:
      example:
        foreignExchangeContractReference: foreignExchangeContractReference
        exchangeRateExpiryDate: 2000-01-23T04:56:07.000+00:00
        rate: 2.3021358869347655
        unitCurrency: unitCurrency
      properties:
        unitCurrency:
          description: __Mandatory__. The currency in which the rate of exchange is
            expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit
            currency is `GBP`.
          type: string
        rate:
          description: __Optional__. The factor used for conversion of an amount from
            one currency to another. This reflects the price at which one currency
            was bought with another currency.
          type: number
        rateType:
          $ref: '#/components/schemas/RateTypeEnum'
        foreignExchangeContractReference:
          description: __Optional__. The unique and unambiguous reference to the foreign
            exchange contract agreed between the initiating party/creditor and the
            debtor agent.
          type: string
        exchangeRateExpiryDate:
          format: date-time
          type: string
      required:
      - rateType
      - unitCurrency
      type: object
    FeatureDetails:
      example:
        documentationUrl: documentationUrl
        endpoint: endpoint
      properties:
        feature:
          $ref: '#/components/schemas/FeatureEnum'
        endpoint:
          type: string
        documentationUrl:
          type: string
      type: object
    ApiListResponseOfDirectDebitResponse:
      example:
        tracingId: tracingId
        data:
        - reference: reference
          previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          payeeDetails:
            name: Tempus Risus Company
          statusDetails:
            statusReason: statusReason
            statusReasonDescription: statusReasonDescription
            statusUpdateDate: 2000-01-23T04:56:07.000+00:00
            multiAuthorisationStatus:
              expirationDateTime: 2000-01-23T04:56:07.000+00:00
              numberOfAuthorisationReceived: 6
              numberOfAuthorisationRequired: 0
              lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            isoStatus:
              code: ACCC
              name: AcceptedCreditSettlementCompleted
          id: id
          previousPaymentAmount:
            amount: 10
            currency: GBP
        - reference: reference
          previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          payeeDetails:
            name: Tempus Risus Company
          statusDetails:
            statusReason: statusReason
            statusReasonDescription: statusReasonDescription
            statusUpdateDate: 2000-01-23T04:56:07.000+00:00
            multiAuthorisationStatus:
              expirationDateTime: 2000-01-23T04:56:07.000+00:00
              numberOfAuthorisationReceived: 6
              numberOfAuthorisationRequired: 0
              lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            isoStatus:
              code: ACCC
              name: AcceptedCreditSettlementCompleted
          id: id
          previousPaymentAmount:
            amount: 10
            currency: GBP
        meta:
          tracingId: tracingId
          pagination:
            next:
              cursor: cursor
              before: 2000-01-23T04:56:07.000+00:00
              limit: 5
              from: 2000-01-23T04:56:07.000+00:00
            self:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
            totalCount: 6
          count: 0
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
        paging:
          data:
          - reference: reference
            previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            payeeDetails:
              name: Tempus Risus Company
            statusDetails:
              statusReason: statusReason
              statusReasonDescription: statusReasonDescription
              statusUpdateDate: 2000-01-23T04:56:07.000+00:00
              multiAuthorisationStatus:
                expirationDateTime: 2000-01-23T04:56:07.000+00:00
                numberOfAuthorisationReceived: 6
                numberOfAuthorisationRequired: 0
                lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
                status: status
              isoStatus:
                code: ACCC
                name: AcceptedCreditSettlementCompleted
            id: id
            previousPaymentAmount:
              amount: 10
              currency: GBP
          - reference: reference
            previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            payeeDetails:
              name: Tempus Risus Company
            statusDetails:
              statusReason: statusReason
              statusReasonDescription: statusReasonDescription
              statusUpdateDate: 2000-01-23T04:56:07.000+00:00
              multiAuthorisationStatus:
                expirationDateTime: 2000-01-23T04:56:07.000+00:00
                numberOfAuthorisationReceived: 6
                numberOfAuthorisationRequired: 0
                lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
                status: status
              isoStatus:
                code: ACCC
                name: AcceptedCreditSettlementCompleted
            id: id
            previousPaymentAmount:
              amount: 10
              currency: GBP
          apiCall: '{}'
          totalCount: 1
          nextCursorHash: nextCursorHash
          nextLink: nextLink
          pagingMap:
            key:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
      properties:
        meta:
          $ref: '#/components/schemas/ResponseListMeta'
        data:
          items:
            $ref: '#/components/schemas/DirectDebitResponse'
          type: array
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        paging:
          $ref: '#/components/schemas/FilteredClientPayloadListDirectDebitResponse'
        tracingId:
          type: string
          writeOnly: true
      type: object
    ApiListResponseOfFeatureDetails:
      example:
        tracingId: tracingId
        data:
        - documentationUrl: documentationUrl
          endpoint: endpoint
        - documentationUrl: documentationUrl
          endpoint: endpoint
        meta:
          tracingId: tracingId
          pagination:
            next:
              cursor: cursor
              before: 2000-01-23T04:56:07.000+00:00
              limit: 5
              from: 2000-01-23T04:56:07.000+00:00
            self:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
            totalCount: 6
          count: 0
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
        paging:
          data:
          - documentationUrl: documentationUrl
            endpoint: endpoint
          - documentationUrl: documentationUrl
            endpoint: endpoint
          apiCall: '{}'
          totalCount: 0
          nextCursorHash: nextCursorHash
          nextLink: nextLink
          pagingMap:
            key:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
      properties:
        meta:
          $ref: '#/components/schemas/ResponseListMeta'
        data:
          items:
            $ref: '#/components/schemas/FeatureDetails'
          type: array
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        paging:
          $ref: '#/components/schemas/FilteredClientPayloadListFeatureDetails'
        tracingId:
          type: string
          writeOnly: true
      type: object
    FeatureEnum:
      description: 'Used to describe what functions are supported by the associated
        `Institution`.        <br><br>For more information on each feature, see the
        following links:        <ul>          <li>[Financial Data Features](https://docs.yapily.com/pages/key-concepts/account-data/account-features/)</li>          <li>[Payments
        Features](https://docs.yapily.com/pages/key-concepts/payments/payment-features/)</li>        </ul>'
      enum:
      - INITIATE_PRE_AUTHORISATION
      - INITIATE_PRE_AUTHORISATION_ACCOUNTS
      - INITIATE_PRE_AUTHORISATION_PAYMENTS
      - INITIATE_ACCOUNT_REQUEST
      - INITIATE_EMBEDDED_ACCOUNT_REQUEST
      - ACCOUNT_REQUEST_DETAILS
      - ACCOUNTS
      - ACCOUNT
      - ACCOUNT_TRANSACTIONS
      - ACCOUNT_STATEMENTS
      - ACCOUNT_STATEMENT
      - ACCOUNT_STATEMENT_FILE
      - ACCOUNT_SCHEDULED_PAYMENTS
      - ACCOUNT_DIRECT_DEBITS
      - ACCOUNT_PERIODIC_PAYMENTS
      - ACCOUNT_TRANSACTIONS_WITH_MERCHANT
      - IDENTITY
      - ACCOUNTS_WITHOUT_BALANCE
      - ACCOUNT_WITHOUT_BALANCE
      - ACCOUNT_BALANCES
      - INITIATE_SINGLE_PAYMENT_SORTCODE
      - EXISTING_PAYMENT_INITIATION_DETAILS
      - CREATE_SINGLE_PAYMENT_SORTCODE
      - EXISTING_PAYMENTS_DETAILS
      - INITIATE_DOMESTIC_SINGLE_PAYMENT
      - INITIATE_EMBEDDED_DOMESTIC_SINGLE_PAYMENT
      - CREATE_DOMESTIC_SINGLE_PAYMENT
      - INITIATE_EMBEDDED_BULK_PAYMENT
      - INITIATE_DOMESTIC_SINGLE_INSTANT_PAYMENT
      - CREATE_DOMESTIC_SINGLE_INSTANT_PAYMENT
      - INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT
      - CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT
      - INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING
      - INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING
      - CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING
      - CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING
      - INITIATE_DOMESTIC_SCHEDULED_PAYMENT
      - CREATE_DOMESTIC_SCHEDULED_PAYMENT
      - INITIATE_DOMESTIC_PERIODIC_PAYMENT
      - CREATE_DOMESTIC_PERIODIC_PAYMENT
      - PERIODIC_PAYMENT_FREQUENCY_EXTENDED
      - INITIATE_INTERNATIONAL_SCHEDULED_PAYMENT
      - CREATE_INTERNATIONAL_SCHEDULED_PAYMENT
      - INITIATE_INTERNATIONAL_PERIODIC_PAYMENT
      - CREATE_INTERNATIONAL_PERIODIC_PAYMENT
      - INITIATE_INTERNATIONAL_SINGLE_PAYMENT
      - CREATE_INTERNATIONAL_SINGLE_PAYMENT
      - INITIATE_BULK_PAYMENT
      - CREATE_BULK_PAYMENT
      - TRANSFER
      - OPEN_DATA_PERSONAL_CURRENT_ACCOUNTS
      - OPEN_DATA_ATMS
      - READ_DOMESTIC_SINGLE_REFUND
      - READ_DOMESTIC_SCHEDULED_REFUND
      - READ_DOMESTIC_PERIODIC_PAYMENT_REFUND
      - READ_INTERNATIONAL_SINGLE_REFUND
      - READ_INTERNATIONAL_SCHEDULED_REFUND
      - ACCOUNT_BENEFICIARIES
      - INITIATE_ONETIME_PRE_AUTHORISATION_PAYMENTS
      - INITIATE_ONETIME_PRE_AUTHORISATION_ACCOUNTS
      - INITIATE_ONETIME_PRE_AUTHORISATION
      - VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION
      type: string
    FilterAndSort:
      example:
        cursor: cursor
        offset: 5
        before: 2000-01-23T04:56:07.000+00:00
        limit: 1
        from: 2000-01-23T04:56:07.000+00:00
      properties:
        from:
          format: date-time
          type: string
        before:
          format: date-time
          type: string
        limit:
          format: int32
          type: integer
        sort:
          $ref: '#/components/schemas/SortEnum'
        offset:
          format: int32
          type: integer
        cursor:
          type: string
      type: object
    FilteredClientPayloadListAccount:
      example:
        data:
        - description: description
          type: type
          consolidatedAccountInformation:
            accountBalances:
            - dateTime: 2000-01-23T04:56:07.000+00:00
              creditLineIncluded: true
              balanceAmount:
                amount: 10
                currency: GBP
              creditLines:
              - creditLineAmount:
                  amount: 10
                  currency: GBP
              - creditLineAmount:
                  amount: 10
                  currency: GBP
            - dateTime: 2000-01-23T04:56:07.000+00:00
              creditLineIncluded: true
              balanceAmount:
                amount: 10
                currency: GBP
              creditLines:
              - creditLineAmount:
                  amount: 10
                  currency: GBP
              - creditLineAmount:
                  amount: 10
                  currency: GBP
            id: id
          accountNames:
          - name: name
          - name: name
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "401016"
            type: SORT_CODE
          balance: 2.3021358869347655
          accountBalances:
          - dateTime: 2000-01-23T04:56:07.000+00:00
            creditLineIncluded: true
            balanceAmount:
              amount: 10
              currency: GBP
            creditLines:
            - creditLineAmount:
                amount: 10
                currency: GBP
            - creditLineAmount:
                amount: 10
                currency: GBP
          - dateTime: 2000-01-23T04:56:07.000+00:00
            creditLineIncluded: true
            balanceAmount:
              amount: 10
              currency: GBP
            creditLines:
            - creditLineAmount:
                amount: 10
                currency: GBP
            - creditLineAmount:
                amount: 10
                currency: GBP
          nickname: nickname
          currency: currency
          details: details
          id: id
        - description: description
          type: type
          consolidatedAccountInformation:
            accountBalances:
            - dateTime: 2000-01-23T04:56:07.000+00:00
              creditLineIncluded: true
              balanceAmount:
                amount: 10
                currency: GBP
              creditLines:
              - creditLineAmount:
                  amount: 10
                  currency: GBP
              - creditLineAmount:
                  amount: 10
                  currency: GBP
            - dateTime: 2000-01-23T04:56:07.000+00:00
              creditLineIncluded: true
              balanceAmount:
                amount: 10
                currency: GBP
              creditLines:
              - creditLineAmount:
                  amount: 10
                  currency: GBP
              - creditLineAmount:
                  amount: 10
                  currency: GBP
            id: id
          accountNames:
          - name: name
          - name: name
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "401016"
            type: SORT_CODE
          balance: 2.3021358869347655
          accountBalances:
          - dateTime: 2000-01-23T04:56:07.000+00:00
            creditLineIncluded: true
            balanceAmount:
              amount: 10
              currency: GBP
            creditLines:
            - creditLineAmount:
                amount: 10
                currency: GBP
            - creditLineAmount:
                amount: 10
                currency: GBP
          - dateTime: 2000-01-23T04:56:07.000+00:00
            creditLineIncluded: true
            balanceAmount:
              amount: 10
              currency: GBP
            creditLines:
            - creditLineAmount:
                amount: 10
                currency: GBP
            - creditLineAmount:
                amount: 10
                currency: GBP
          nickname: nickname
          currency: currency
          details: details
          id: id
        apiCall: '{}'
        totalCount: 7
        nextCursorHash: nextCursorHash
        nextLink: nextLink
        pagingMap:
          key:
            cursor: cursor
            offset: 5
            before: 2000-01-23T04:56:07.000+00:00
            limit: 1
            from: 2000-01-23T04:56:07.000+00:00
      properties:
        apiCall:
          type: object
        data:
          items:
            $ref: '#/components/schemas/Account'
          type: array
        nextCursorHash:
          type: string
        nextLink:
          type: string
        pagingMap:
          additionalProperties:
            $ref: '#/components/schemas/FilterAndSort'
          type: object
        totalCount:
          format: int64
          type: integer
      type: object
    FilteredClientPayloadListAccountStatement:
      example:
        data:
        - startDateTime: 2000-01-23T04:56:07.000+00:00
          id: id
          endDateTime: 2000-01-23T04:56:07.000+00:00
          creationDateTime: 2000-01-23T04:56:07.000+00:00
        - startDateTime: 2000-01-23T04:56:07.000+00:00
          id: id
          endDateTime: 2000-01-23T04:56:07.000+00:00
          creationDateTime: 2000-01-23T04:56:07.000+00:00
        apiCall: '{}'
        totalCount: 0
        nextCursorHash: nextCursorHash
        nextLink: nextLink
        pagingMap:
          key:
            cursor: cursor
            offset: 5
            before: 2000-01-23T04:56:07.000+00:00
            limit: 1
            from: 2000-01-23T04:56:07.000+00:00
      properties:
        apiCall:
          type: object
        data:
          items:
            $ref: '#/components/schemas/AccountStatement'
          type: array
        nextCursorHash:
          type: string
        nextLink:
          type: string
        pagingMap:
          additionalProperties:
            $ref: '#/components/schemas/FilterAndSort'
          type: object
        totalCount:
          format: int64
          type: integer
      type: object
    FilteredClientPayloadListCategory:
      example:
        data:
        - country: country
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          label: label
          subcategories:
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            label: label
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            label: label
        - country: country
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          label: label
          subcategories:
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            label: label
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            label: label
        apiCall: '{}'
        totalCount: 0
        nextCursorHash: nextCursorHash
        nextLink: nextLink
        pagingMap:
          key:
            cursor: cursor
            offset: 5
            before: 2000-01-23T04:56:07.000+00:00
            limit: 1
            from: 2000-01-23T04:56:07.000+00:00
      properties:
        apiCall:
          type: object
        data:
          items:
            $ref: '#/components/schemas/Category'
          type: array
        nextCursorHash:
          type: string
        nextLink:
          type: string
        pagingMap:
          additionalProperties:
            $ref: '#/components/schemas/FilterAndSort'
          type: object
        totalCount:
          format: int64
          type: integer
      type: object
    FilteredClientPayloadListConsent:
      example:
        data:
        - institutionId: institutionId
          authorizedAt: 2000-01-23T04:56:07.000+00:00
          transactionFrom: 2000-01-23T04:56:07.000+00:00
          consentToken: consentToken
          referenceId: referenceId
          transactionTo: 2000-01-23T04:56:07.000+00:00
          expiresAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          timeToExpire: timeToExpire
          timeToExpireInMillis: 0
          userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          applicationUserId: applicationUserId
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          featureScope:
          - null
          - null
          institutionConsentId: institutionConsentId
        - institutionId: institutionId
          authorizedAt: 2000-01-23T04:56:07.000+00:00
          transactionFrom: 2000-01-23T04:56:07.000+00:00
          consentToken: consentToken
          referenceId: referenceId
          transactionTo: 2000-01-23T04:56:07.000+00:00
          expiresAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          timeToExpire: timeToExpire
          timeToExpireInMillis: 0
          userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          applicationUserId: applicationUserId
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          featureScope:
          - null
          - null
          institutionConsentId: institutionConsentId
        apiCall: '{}'
        totalCount: 0
        nextCursorHash: nextCursorHash
        nextLink: nextLink
        pagingMap:
          key:
            cursor: cursor
            offset: 5
            before: 2000-01-23T04:56:07.000+00:00
            limit: 1
            from: 2000-01-23T04:56:07.000+00:00
      properties:
        apiCall:
          type: object
        data:
          items:
            $ref: '#/components/schemas/Consent'
          type: array
        nextCursorHash:
          type: string
        nextLink:
          type: string
        pagingMap:
          additionalProperties:
            $ref: '#/components/schemas/FilterAndSort'
          type: object
        totalCount:
          format: int64
          type: integer
      type: object
    FilteredClientPayloadListDirectDebitResponse:
      example:
        data:
        - reference: reference
          previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          payeeDetails:
            name: Tempus Risus Company
          statusDetails:
            statusReason: statusReason
            statusReasonDescription: statusReasonDescription
            statusUpdateDate: 2000-01-23T04:56:07.000+00:00
            multiAuthorisationStatus:
              expirationDateTime: 2000-01-23T04:56:07.000+00:00
              numberOfAuthorisationReceived: 6
              numberOfAuthorisationRequired: 0
              lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            isoStatus:
              code: ACCC
              name: AcceptedCreditSettlementCompleted
          id: id
          previousPaymentAmount:
            amount: 10
            currency: GBP
        - reference: reference
          previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          payeeDetails:
            name: Tempus Risus Company
          statusDetails:
            statusReason: statusReason
            statusReasonDescription: statusReasonDescription
            statusUpdateDate: 2000-01-23T04:56:07.000+00:00
            multiAuthorisationStatus:
              expirationDateTime: 2000-01-23T04:56:07.000+00:00
              numberOfAuthorisationReceived: 6
              numberOfAuthorisationRequired: 0
              lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            isoStatus:
              code: ACCC
              name: AcceptedCreditSettlementCompleted
          id: id
          previousPaymentAmount:
            amount: 10
            currency: GBP
        apiCall: '{}'
        totalCount: 1
        nextCursorHash: nextCursorHash
        nextLink: nextLink
        pagingMap:
          key:
            cursor: cursor
            offset: 5
            before: 2000-01-23T04:56:07.000+00:00
            limit: 1
            from: 2000-01-23T04:56:07.000+00:00
      properties:
        apiCall:
          type: object
        data:
          items:
            $ref: '#/components/schemas/DirectDebitResponse'
          type: array
        nextCursorHash:
          type: string
        nextLink:
          type: string
        pagingMap:
          additionalProperties:
            $ref: '#/components/schemas/FilterAndSort'
          type: object
        totalCount:
          format: int64
          type: integer
      type: object
    FilteredClientPayloadListFeatureDetails:
      example:
        data:
        - documentationUrl: documentationUrl
          endpoint: endpoint
        - documentationUrl: documentationUrl
          endpoint: endpoint
        apiCall: '{}'
        totalCount: 0
        nextCursorHash: nextCursorHash
        nextLink: nextLink
        pagingMap:
          key:
            cursor: cursor
            offset: 5
            before: 2000-01-23T04:56:07.000+00:00
            limit: 1
            from: 2000-01-23T04:56:07.000+00:00
      properties:
        apiCall:
          type: object
        data:
          items:
            $ref: '#/components/schemas/FeatureDetails'
          type: array
        nextCursorHash:
          type: string
        nextLink:
          type: string
        pagingMap:
          additionalProperties:
            $ref: '#/components/schemas/FilterAndSort'
          type: object
        totalCount:
          format: int64
          type: integer
      type: object
    FilteredClientPayloadListInstitution:
      example:
        data:
        - features:
          - null
          - null
          name: name
          fullName: fullName
          id: id
          countries:
          - displayName: displayName
            countryCode2: countryCode2
          - displayName: displayName
            countryCode2: countryCode2
          media:
          - source: source
            type: type
          - source: source
            type: type
          monitoring:
            key:
              lastTested: 2000-01-23T04:56:07.000+00:00
              span: span
        - features:
          - null
          - null
          name: name
          fullName: fullName
          id: id
          countries:
          - displayName: displayName
            countryCode2: countryCode2
          - displayName: displayName
            countryCode2: countryCode2
          media:
          - source: source
            type: type
          - source: source
            type: type
          monitoring:
            key:
              lastTested: 2000-01-23T04:56:07.000+00:00
              span: span
        apiCall: '{}'
        totalCount: 0
        nextCursorHash: nextCursorHash
        nextLink: nextLink
        pagingMap:
          key:
            cursor: cursor
            offset: 5
            before: 2000-01-23T04:56:07.000+00:00
            limit: 1
            from: 2000-01-23T04:56:07.000+00:00
      properties:
        apiCall:
          type: object
        data:
          items:
            $ref: '#/components/schemas/Institution'
          type: array
        nextCursorHash:
          type: string
        nextLink:
          type: string
        pagingMap:
          additionalProperties:
            $ref: '#/components/schemas/FilterAndSort'
          type: object
        totalCount:
          format: int64
          type: integer
      type: object
    FilteredClientPayloadListPaymentResponse:
      example:
        data:
        - purpose: purpose
          scheduledPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          finalPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
          firstPaymentAmount:
            amount: 10
            currency: GBP
          chargeDetails:
          - chargeTo: chargeTo
            chargeType: chargeType
            chargeAmount:
              amount: 10
              currency: GBP
          - chargeTo: chargeTo
            chargeType: chargeType
            chargeAmount:
              amount: 10
              currency: GBP
          amountDetails:
            amount: 10
            currency: GBP
          frequency:
            intervalMonth: 5
            intervalWeek: 1
            executionDay: 5
          reference: reference
          createdAt: 2000-01-23T04:56:07.000+00:00
          scheduledPaymentType: scheduledPaymentType
          paymentIdempotencyId: paymentIdempotencyId
          exchangeRate:
            foreignExchangeContractReference: foreignExchangeContractReference
            exchangeRateExpiryDate: 2000-01-23T04:56:07.000+00:00
            rate: 2.3021358869347655
            unitCurrency: unitCurrency
          firstPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          currency: currency
          id: id
          paymentLifecycleId: paymentLifecycleId
          previousPaymentAmount:
            amount: 10
            currency: GBP
          refundAccount:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            name: name
          institutionConsentId: institutionConsentId
          numberOfPayments: 6
          previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          amount: 0.8008281904610115
          currencyOfTransfer: currencyOfTransfer
          payeeDetails:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          bulkAmountSum: 7.061401241503109
          nextPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          finalPaymentAmount:
            amount: 10
            currency: GBP
          statusDetails:
            statusReason: statusReason
            statusReasonDescription: statusReasonDescription
            statusUpdateDate: 2000-01-23T04:56:07.000+00:00
            multiAuthorisationStatus:
              expirationDateTime: 2000-01-23T04:56:07.000+00:00
              numberOfAuthorisationReceived: 6
              numberOfAuthorisationRequired: 0
              lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            isoStatus:
              code: ACCC
              name: AcceptedCreditSettlementCompleted
          nextPaymentAmount:
            amount: 10
            currency: GBP
        - purpose: purpose
          scheduledPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          finalPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
          firstPaymentAmount:
            amount: 10
            currency: GBP
          chargeDetails:
          - chargeTo: chargeTo
            chargeType: chargeType
            chargeAmount:
              amount: 10
              currency: GBP
          - chargeTo: chargeTo
            chargeType: chargeType
            chargeAmount:
              amount: 10
              currency: GBP
          amountDetails:
            amount: 10
            currency: GBP
          frequency:
            intervalMonth: 5
            intervalWeek: 1
            executionDay: 5
          reference: reference
          createdAt: 2000-01-23T04:56:07.000+00:00
          scheduledPaymentType: scheduledPaymentType
          paymentIdempotencyId: paymentIdempotencyId
          exchangeRate:
            foreignExchangeContractReference: foreignExchangeContractReference
            exchangeRateExpiryDate: 2000-01-23T04:56:07.000+00:00
            rate: 2.3021358869347655
            unitCurrency: unitCurrency
          firstPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          currency: currency
          id: id
          paymentLifecycleId: paymentLifecycleId
          previousPaymentAmount:
            amount: 10
            currency: GBP
          refundAccount:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            name: name
          institutionConsentId: institutionConsentId
          numberOfPayments: 6
          previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          amount: 0.8008281904610115
          currencyOfTransfer: currencyOfTransfer
          payeeDetails:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          bulkAmountSum: 7.061401241503109
          nextPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          finalPaymentAmount:
            amount: 10
            currency: GBP
          statusDetails:
            statusReason: statusReason
            statusReasonDescription: statusReasonDescription
            statusUpdateDate: 2000-01-23T04:56:07.000+00:00
            multiAuthorisationStatus:
              expirationDateTime: 2000-01-23T04:56:07.000+00:00
              numberOfAuthorisationReceived: 6
              numberOfAuthorisationRequired: 0
              lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            isoStatus:
              code: ACCC
              name: AcceptedCreditSettlementCompleted
          nextPaymentAmount:
            amount: 10
            currency: GBP
        apiCall: '{}'
        totalCount: 9
        nextCursorHash: nextCursorHash
        nextLink: nextLink
        pagingMap:
          key:
            cursor: cursor
            offset: 5
            before: 2000-01-23T04:56:07.000+00:00
            limit: 1
            from: 2000-01-23T04:56:07.000+00:00
      properties:
        apiCall:
          type: object
        data:
          items:
            $ref: '#/components/schemas/PaymentResponse'
          type: array
        nextCursorHash:
          type: string
        nextLink:
          type: string
        pagingMap:
          additionalProperties:
            $ref: '#/components/schemas/FilterAndSort'
          type: object
        totalCount:
          format: int64
          type: integer
      type: object
    FilteredClientPayloadListTransaction:
      example:
        data:
        - date: 2000-01-23T04:56:07.000+00:00
          payerDetails:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
          amount: 0.8008281904610115
          payeeDetails:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          bookingDateTime: 2000-01-23T04:56:07.000+00:00
          statementReferences:
          - value: value
          - value: value
          description: description
          merchant:
            merchantCategoryCode: merchantCategoryCode
            merchantName: merchantName
          addressDetails:
            addressLine: addressLine
          grossAmount:
            amount: 10
            currency: GBP
          chargeDetails:
            chargeAmount:
              amount: 10
              currency: GBP
          supplementaryData: '{}'
          currencyExchange:
            targetCurrency: targetCurrency
            exchangeRate: 6.027456183070403
            unitCurrency: unitCurrency
            sourceCurrency: sourceCurrency
          reference: reference
          enrichment:
            cleansedDescription: cleansedDescription
            correctedDate: 2000-01-23T04:56:07.000+00:00
            merchant:
              parentGroup: parentGroup
              merchantName: merchantName
            location: location
            paymentProcessor: paymentProcessor
            categorisation:
              categories:
              - categories
              - categories
              source: source
            transactionHash:
              hash: hash
          balance:
            balanceAmount:
              amount: 10
              currency: GBP
          transactionAmount:
            amount: 10
            currency: GBP
          proprietaryBankTransactionCode:
            code: code
            issuer: issuer
          valueDateTime: 2000-01-23T04:56:07.000+00:00
          currency: currency
          id: id
          transactionInformation:
          - transactionInformation
          - transactionInformation
          isoBankTransactionCode:
            domainCode:
              code: UNKNOWN
              name: UNKNOWN
            familyCode:
              code: UNKNOWN
              name: UNKNOWN
            subFamilyCode:
              code: UNKNOWN
              name: UNKNOWN
        - date: 2000-01-23T04:56:07.000+00:00
          payerDetails:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
          amount: 0.8008281904610115
          payeeDetails:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          bookingDateTime: 2000-01-23T04:56:07.000+00:00
          statementReferences:
          - value: value
          - value: value
          description: description
          merchant:
            merchantCategoryCode: merchantCategoryCode
            merchantName: merchantName
          addressDetails:
            addressLine: addressLine
          grossAmount:
            amount: 10
            currency: GBP
          chargeDetails:
            chargeAmount:
              amount: 10
              currency: GBP
          supplementaryData: '{}'
          currencyExchange:
            targetCurrency: targetCurrency
            exchangeRate: 6.027456183070403
            unitCurrency: unitCurrency
            sourceCurrency: sourceCurrency
          reference: reference
          enrichment:
            cleansedDescription: cleansedDescription
            correctedDate: 2000-01-23T04:56:07.000+00:00
            merchant:
              parentGroup: parentGroup
              merchantName: merchantName
            location: location
            paymentProcessor: paymentProcessor
            categorisation:
              categories:
              - categories
              - categories
              source: source
            transactionHash:
              hash: hash
          balance:
            balanceAmount:
              amount: 10
              currency: GBP
          transactionAmount:
            amount: 10
            currency: GBP
          proprietaryBankTransactionCode:
            code: code
            issuer: issuer
          valueDateTime: 2000-01-23T04:56:07.000+00:00
          currency: currency
          id: id
          transactionInformation:
          - transactionInformation
          - transactionInformation
          isoBankTransactionCode:
            domainCode:
              code: UNKNOWN
              name: UNKNOWN
            familyCode:
              code: UNKNOWN
              name: UNKNOWN
            subFamilyCode:
              code: UNKNOWN
              name: UNKNOWN
        apiCall: '{}'
        totalCount: 1
        nextCursorHash: nextCursorHash
        nextLink: nextLink
        pagingMap:
          key:
            cursor: cursor
            offset: 5
            before: 2000-01-23T04:56:07.000+00:00
            limit: 1
            from: 2000-01-23T04:56:07.000+00:00
      properties:
        apiCall:
          type: object
        data:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
        nextCursorHash:
          type: string
        nextLink:
          type: string
        pagingMap:
          additionalProperties:
            $ref: '#/components/schemas/FilterAndSort'
          type: object
        totalCount:
          format: int64
          type: integer
      type: object
    FinancialProfile:
      description: A financial profile for a User.
      example:
        enrichment:
          recentlyTerminatedIncomeStreams:
          - earliestTransactionDate: 2020-04-24T00:00:00.000+0000
            scheduleConsistencyScore: 0.44
            missedTransactions: 3
            averageAmount: 19.708
            name: Amazon Marketplace
            transactions:
            - institution: starling
              amount: 21.99
              bookingDateTime: 2020-04-24T00:30:19.951Z
              transactionInformation: Amazon Marketplace
              transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
            - institution: starling
              amount: 21.99
              bookingDateTime: 2020-04-24T00:30:19.951Z
              transactionInformation: Amazon Marketplace
              transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
            transactionSchedule:
              detailedFrequency: Daily
              detailedFrequencyParameter: 1
              frequency: Daily
            nextExpectedTransactionDate: 2019-10-04T00:00:00.000+0000
            amountConsistencyScore: 0.74
            mostRecentTransactionDate: 2019-10-03T00:00:00.000+0000
          - earliestTransactionDate: 2020-04-24T00:00:00.000+0000
            scheduleConsistencyScore: 0.44
            missedTransactions: 3
            averageAmount: 19.708
            name: Amazon Marketplace
            transactions:
            - institution: starling
              amount: 21.99
              bookingDateTime: 2020-04-24T00:30:19.951Z
              transactionInformation: Amazon Marketplace
              transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
            - institution: starling
              amount: 21.99
              bookingDateTime: 2020-04-24T00:30:19.951Z
              transactionInformation: Amazon Marketplace
              transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
            transactionSchedule:
              detailedFrequency: Daily
              detailedFrequencyParameter: 1
              frequency: Daily
            nextExpectedTransactionDate: 2019-10-04T00:00:00.000+0000
            amountConsistencyScore: 0.74
            mostRecentTransactionDate: 2019-10-03T00:00:00.000+0000
          recentlyTerminatedExpenditureStreams:
          - earliestTransactionDate: 2020-04-24T00:00:00.000+0000
            scheduleConsistencyScore: 0.44
            missedTransactions: 3
            averageAmount: 19.708
            name: Amazon Marketplace
            transactions:
            - institution: starling
              amount: 21.99
              bookingDateTime: 2020-04-24T00:30:19.951Z
              transactionInformation: Amazon Marketplace
              transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
            - institution: starling
              amount: 21.99
              bookingDateTime: 2020-04-24T00:30:19.951Z
              transactionInformation: Amazon Marketplace
              transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
            transactionSchedule:
              detailedFrequency: Daily
              detailedFrequencyParameter: 1
              frequency: Daily
            nextExpectedTransactionDate: 2019-10-04T00:00:00.000+0000
            amountConsistencyScore: 0.74
            mostRecentTransactionDate: 2019-10-03T00:00:00.000+0000
          - earliestTransactionDate: 2020-04-24T00:00:00.000+0000
            scheduleConsistencyScore: 0.44
            missedTransactions: 3
            averageAmount: 19.708
            name: Amazon Marketplace
            transactions:
            - institution: starling
              amount: 21.99
              bookingDateTime: 2020-04-24T00:30:19.951Z
              transactionInformation: Amazon Marketplace
              transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
            - institution: starling
              amount: 21.99
              bookingDateTime: 2020-04-24T00:30:19.951Z
              transactionInformation: Amazon Marketplace
              transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
            transactionSchedule:
              detailedFrequency: Daily
              detailedFrequencyParameter: 1
              frequency: Daily
            nextExpectedTransactionDate: 2019-10-04T00:00:00.000+0000
            amountConsistencyScore: 0.74
            mostRecentTransactionDate: 2019-10-03T00:00:00.000+0000
          expenditureStreams:
          - earliestTransactionDate: 2020-04-24T00:00:00.000+0000
            scheduleConsistencyScore: 0.44
            averageAmount: 19.708
            name: Amazon Marketplace
            transactions:
            - institution: starling
              amount: 21.99
              bookingDateTime: 2020-04-24T00:30:19.951Z
              transactionInformation: Amazon Marketplace
              transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
            - institution: starling
              amount: 21.99
              bookingDateTime: 2020-04-24T00:30:19.951Z
              transactionInformation: Amazon Marketplace
              transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
            transactionSchedule:
              detailedFrequency: Daily
              detailedFrequencyParameter: 1
              frequency: Daily
            nextExpectedTransactionDate: 2019-10-04T00:00:00.000+0000
            amountConsistencyScore: 0.74
            mostRecentTransactionDate: 2019-10-03T00:00:00.000+0000
          - earliestTransactionDate: 2020-04-24T00:00:00.000+0000
            scheduleConsistencyScore: 0.44
            averageAmount: 19.708
            name: Amazon Marketplace
            transactions:
            - institution: starling
              amount: 21.99
              bookingDateTime: 2020-04-24T00:30:19.951Z
              transactionInformation: Amazon Marketplace
              transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
            - institution: starling
              amount: 21.99
              bookingDateTime: 2020-04-24T00:30:19.951Z
              transactionInformation: Amazon Marketplace
              transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
            transactionSchedule:
              detailedFrequency: Daily
              detailedFrequencyParameter: 1
              frequency: Daily
            nextExpectedTransactionDate: 2019-10-04T00:00:00.000+0000
            amountConsistencyScore: 0.74
            mostRecentTransactionDate: 2019-10-03T00:00:00.000+0000
          incomeStreams:
          - earliestTransactionDate: 2020-04-24T00:00:00.000+0000
            scheduleConsistencyScore: 0.44
            averageAmount: 19.708
            name: Amazon Marketplace
            transactions:
            - institution: starling
              amount: 21.99
              bookingDateTime: 2020-04-24T00:30:19.951Z
              transactionInformation: Amazon Marketplace
              transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
            - institution: starling
              amount: 21.99
              bookingDateTime: 2020-04-24T00:30:19.951Z
              transactionInformation: Amazon Marketplace
              transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
            transactionSchedule:
              detailedFrequency: Daily
              detailedFrequencyParameter: 1
              frequency: Daily
            nextExpectedTransactionDate: 2019-10-04T00:00:00.000+0000
            amountConsistencyScore: 0.74
            mostRecentTransactionDate: 2019-10-03T00:00:00.000+0000
          - earliestTransactionDate: 2020-04-24T00:00:00.000+0000
            scheduleConsistencyScore: 0.44
            averageAmount: 19.708
            name: Amazon Marketplace
            transactions:
            - institution: starling
              amount: 21.99
              bookingDateTime: 2020-04-24T00:30:19.951Z
              transactionInformation: Amazon Marketplace
              transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
            - institution: starling
              amount: 21.99
              bookingDateTime: 2020-04-24T00:30:19.951Z
              transactionInformation: Amazon Marketplace
              transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
            transactionSchedule:
              detailedFrequency: Daily
              detailedFrequencyParameter: 1
              frequency: Daily
            nextExpectedTransactionDate: 2019-10-04T00:00:00.000+0000
            amountConsistencyScore: 0.74
            mostRecentTransactionDate: 2019-10-03T00:00:00.000+0000
        profileConsents:
        - referenceConsentId: 1e2e5167-8519-4c19-b016-8f2f0c6e38b6
          institutionId: mock-sandbox
          id: eb2ad083-a111-4143-8756-a3a3cef4031c
          userId: 3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d
          status: PENDING
        - referenceConsentId: 1e2e5167-8519-4c19-b016-8f2f0c6e38b6
          institutionId: mock-sandbox
          id: eb2ad083-a111-4143-8756-a3a3cef4031c
          userId: 3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d
          status: PENDING
        status: COMPLETED
      properties:
        status:
          description: The status, can be EMPTY, PARTIAL, PENDING, COMPLETED or ERROR.
          example: COMPLETED
          type: string
        profileConsents:
          description: A list of ProfileConsent used in the financial profile.
          items:
            $ref: '#/components/schemas/ProfileConsent'
          type: array
        enrichment:
          $ref: '#/components/schemas/EnrichedWrapper'
      type: object
    FrequencyEnumExtended:
      description: __Mandatory__. See [payment frequency](/guides/payments/payment-execution/periodic-payments/#payment-frequency)
        for more information
      enum:
      - DAILY
      - EVERY_WORKING_DAY
      - CALENDAR_DAY
      - WEEKLY
      - EVERY_TWO_WEEKS
      - MONTHLY
      - EVERY_TWO_MONTHS
      - QUARTERLY
      - SEMIANNUAL
      - ANNUAL
      type: string
    FrequencyRequest:
      description: __Mandatory__. Defines the intervals at which payment should be
        made.
      example:
        intervalMonth: 1
        intervalWeek: 1
        executionDay: 1
      properties:
        type:
          $ref: '#/components/schemas/FrequencyEnumExtended'
        intervalWeek:
          description: __Conditional__. See [payment frequency](/guides/payments/payment-execution/periodic-payments/#payment-frequency)
            for more information
          example: 1
          format: int32
          type: integer
        intervalMonth:
          description: __Conditional__. See [payment frequency](/guides/payments/payment-execution/periodic-payments/#payment-frequency)
            for more information
          example: 1
          format: int32
          type: integer
        executionDay:
          description: __Conditional__. See [payment frequency](/guides/payments/payment-execution/periodic-payments/#payment-frequency)
            for more information
          example: 1
          format: int32
          type: integer
      required:
      - type
      type: object
    FrequencyResponse:
      example:
        intervalMonth: 5
        intervalWeek: 1
        executionDay: 5
      properties:
        frequencyType:
          $ref: '#/components/schemas/FrequencyEnumExtended'
        intervalWeek:
          format: int32
          type: integer
        intervalMonth:
          format: int32
          type: integer
        executionDay:
          format: int32
          type: integer
      type: object
    Identity:
      example:
        firstName: firstName
        lastName: lastName
        addresses:
        - country: country
          streetName: streetName
          city: city
          postalCode: postalCode
          county: county
          buildingNumber: buildingNumber
          addressLines:
          - addressLines
          - addressLines
        - country: country
          streetName: streetName
          city: city
          postalCode: postalCode
          county: county
          buildingNumber: buildingNumber
          addressLines:
          - addressLines
          - addressLines
        birthdate: birthdate
        gender: gender
        phone: phone
        fullName: fullName
        id: id
        email: email
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        gender:
          type: string
        birthdate:
          type: string
        email:
          type: string
        phone:
          type: string
        addresses:
          items:
            $ref: '#/components/schemas/IdentityAddress'
          type: array
      type: object
    IdentityAddress:
      example:
        country: country
        streetName: streetName
        city: city
        postalCode: postalCode
        county: county
        buildingNumber: buildingNumber
        addressLines:
        - addressLines
        - addressLines
      properties:
        addressLines:
          items:
            type: string
          type: array
        city:
          type: string
        postalCode:
          type: string
        country:
          type: string
        streetName:
          type: string
        buildingNumber:
          type: string
        type:
          $ref: '#/components/schemas/AddressTypeEnum'
        county:
          type: string
      type: object
    ApiResponseOfIdentity:
      example:
        tracingId: tracingId
        data:
          firstName: firstName
          lastName: lastName
          addresses:
          - country: country
            streetName: streetName
            city: city
            postalCode: postalCode
            county: county
            buildingNumber: buildingNumber
            addressLines:
            - addressLines
            - addressLines
          - country: country
            streetName: streetName
            city: city
            postalCode: postalCode
            county: county
            buildingNumber: buildingNumber
            addressLines:
            - addressLines
            - addressLines
          birthdate: birthdate
          gender: gender
          phone: phone
          fullName: fullName
          id: id
          email: email
        meta:
          tracingId: tracingId
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/Identity'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    Institution:
      example:
        features:
        - null
        - null
        name: name
        fullName: fullName
        id: id
        countries:
        - displayName: displayName
          countryCode2: countryCode2
        - displayName: displayName
          countryCode2: countryCode2
        media:
        - source: source
          type: type
        - source: source
          type: type
        monitoring:
          key:
            lastTested: 2000-01-23T04:56:07.000+00:00
            span: span
      properties:
        id:
          description: The Yapily Id for the `Institution`
          type: string
        name:
          description: The friendly name of the `Institution`
          type: string
        fullName:
          description: The full name of the `Institution`
          type: string
        countries:
          description: An array of `Country` denoting which regions the `Institution`
            provides coverage for
          items:
            $ref: '#/components/schemas/Country'
          type: array
          uniqueItems: true
        environmentType:
          $ref: '#/components/schemas/EnvironmentType'
        credentialsType:
          $ref: '#/components/schemas/CredentialsType'
        media:
          description: Contains links to the logo and the icons for the `Institution`
          items:
            $ref: '#/components/schemas/Media'
          type: array
          uniqueItems: true
        features:
          items:
            $ref: '#/components/schemas/FeatureEnum'
          type: array
          uniqueItems: true
        monitoring:
          additionalProperties:
            $ref: '#/components/schemas/MonitoringFeatureStatus'
          type: object
      type: object
    ApiListResponseOfInstitution:
      example:
        tracingId: tracingId
        data:
        - features:
          - null
          - null
          name: name
          fullName: fullName
          id: id
          countries:
          - displayName: displayName
            countryCode2: countryCode2
          - displayName: displayName
            countryCode2: countryCode2
          media:
          - source: source
            type: type
          - source: source
            type: type
          monitoring:
            key:
              lastTested: 2000-01-23T04:56:07.000+00:00
              span: span
        - features:
          - null
          - null
          name: name
          fullName: fullName
          id: id
          countries:
          - displayName: displayName
            countryCode2: countryCode2
          - displayName: displayName
            countryCode2: countryCode2
          media:
          - source: source
            type: type
          - source: source
            type: type
          monitoring:
            key:
              lastTested: 2000-01-23T04:56:07.000+00:00
              span: span
        meta:
          tracingId: tracingId
          pagination:
            next:
              cursor: cursor
              before: 2000-01-23T04:56:07.000+00:00
              limit: 5
              from: 2000-01-23T04:56:07.000+00:00
            self:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
            totalCount: 6
          count: 0
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
        paging:
          data:
          - features:
            - null
            - null
            name: name
            fullName: fullName
            id: id
            countries:
            - displayName: displayName
              countryCode2: countryCode2
            - displayName: displayName
              countryCode2: countryCode2
            media:
            - source: source
              type: type
            - source: source
              type: type
            monitoring:
              key:
                lastTested: 2000-01-23T04:56:07.000+00:00
                span: span
          - features:
            - null
            - null
            name: name
            fullName: fullName
            id: id
            countries:
            - displayName: displayName
              countryCode2: countryCode2
            - displayName: displayName
              countryCode2: countryCode2
            media:
            - source: source
              type: type
            - source: source
              type: type
            monitoring:
              key:
                lastTested: 2000-01-23T04:56:07.000+00:00
                span: span
          apiCall: '{}'
          totalCount: 0
          nextCursorHash: nextCursorHash
          nextLink: nextLink
          pagingMap:
            key:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
      properties:
        meta:
          $ref: '#/components/schemas/ResponseListMeta'
        data:
          items:
            $ref: '#/components/schemas/Institution'
          type: array
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        paging:
          $ref: '#/components/schemas/FilteredClientPayloadListInstitution'
        tracingId:
          type: string
          writeOnly: true
      type: object
    InstitutionConsent:
      example:
        institutionId: institutionId
      properties:
        institutionId:
          type: string
      type: object
    InstitutionError:
      properties:
        errorMessage:
          type: string
        httpStatusCode:
          format: int32
          type: integer
      type: object
    InternationalPaymentRequest:
      description: __Conditional__. Used to specify properties to define an international
        payment. <br><br>Must be specified when the payment `type` is one of the following:<ul>     <li><code>INTERNATIONAL_SINGLE_PAYMENT</code></li>     <li><code>INTERNATIONAL_SCHEDULED_PAYMENT</code></li>     <li><code>INTERNATIONAL_PERIODIC_PAYMENT</code></li></ul>
      example:
        currencyOfTransfer: currencyOfTransfer
        purpose: purpose
        exchangeRateInformation:
          foreignExchangeContractReference: foreignExchangeContractReference
          rate: 0.8008281904610115
          unitCurrency: unitCurrency
      properties:
        currencyOfTransfer:
          description: __Mandatory__. The 3-letter currency code for the currency
            of the payment to be transferred which can differ from the currency of
            the payer's account.
          type: string
        exchangeRateInformation:
          $ref: '#/components/schemas/ExchangeRateInformation'
        purpose:
          description: __Optional__. Used to indicate the external purpose as a [ISO20022
            purpose code](https://www.rba.hr/documents/20182/183267/External+purpose+codes+list/8a28f888-1f83-5e29-d6ed-fce05f428689?version=1.1)
            value.
          type: string
        priority:
          $ref: '#/components/schemas/PriorityCodeEnum'
        chargeBearer:
          $ref: '#/components/schemas/ChargeBearerType'
      required:
      - currencyOfTransfer
      type: object
    IsoBankTransactionCode:
      example:
        domainCode:
          code: UNKNOWN
          name: UNKNOWN
        familyCode:
          code: UNKNOWN
          name: UNKNOWN
        subFamilyCode:
          code: UNKNOWN
          name: UNKNOWN
      properties:
        domainCode:
          $ref: '#/components/schemas/IsoCodeDetails'
        familyCode:
          $ref: '#/components/schemas/IsoCodeDetails'
        subFamilyCode:
          $ref: '#/components/schemas/IsoCodeDetails'
      type: object
    IsoCodeDetails:
      example:
        code: UNKNOWN
        name: UNKNOWN
      properties:
        code:
          default: UNKNOWN
          type: string
        name:
          default: UNKNOWN
          type: string
      type: object
    Media:
      description: Contains links to the logo and the icons for the `Institution`
      example:
        source: source
        type: type
      properties:
        source:
          type: string
        type:
          type: string
      type: object
    Merchant:
      example:
        merchantCategoryCode: merchantCategoryCode
        merchantName: merchantName
      properties:
        merchantName:
          type: string
        merchantCategoryCode:
          type: string
      type: object
    MonitoringEndpointStatus:
      properties:
        lastTested:
          format: date-time
          type: string
        resourceEndpoint:
          type: string
        span:
          format: iso8601
          type: string
        status:
          $ref: '#/components/schemas/MonitoringStatusEnum'
      type: object
    MonitoringFeatureStatus:
      example:
        lastTested: 2000-01-23T04:56:07.000+00:00
        span: span
      properties:
        lastTested:
          format: date-time
          type: string
        span:
          format: iso8601
          type: string
        status:
          $ref: '#/components/schemas/MonitoringStatusEnum'
      type: object
    MultiAuthorisation:
      example:
        expirationDateTime: 2000-01-23T04:56:07.000+00:00
        numberOfAuthorisationReceived: 6
        numberOfAuthorisationRequired: 0
        lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        status:
          type: string
        numberOfAuthorisationRequired:
          format: int32
          type: integer
        numberOfAuthorisationReceived:
          format: int32
          type: integer
        lastUpdatedDateTime:
          format: date-time
          type: string
        expirationDateTime:
          format: date-time
          type: string
      type: object
    NewApplicationUser:
      example:
        applicationUserId: user-234562290
        referenceId: referenceId
      properties:
        applicationUserId:
          description: __Optional__. An additional unique identifier that you can
            specify when creating a new `User` to more easily reference it
          example: user-234562290
          type: string
        referenceId:
          description: __Deprecated__. A non-unique reference Id for the `User`
          type: string
      type: object
    Next:
      example:
        cursor: cursor
        before: 2000-01-23T04:56:07.000+00:00
        limit: 5
        from: 2000-01-23T04:56:07.000+00:00
      properties:
        from:
          format: date-time
          type: string
        before:
          format: date-time
          type: string
        limit:
          format: int32
          type: integer
        cursor:
          type: string
      type: object
    OneTimeTokenRequest:
      description: The request body containing the `OneTimeTokenRequest` json payload
      example:
        oneTimeToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJJTlNUSVRVVElPTiI6ImJidmEtc2FuZGJveCIsIlVVSUQiOiJmMzNmNGU4ZC1jMDQ0LTQ2YTktOTlkMC0wYmRlMzIyYTJjOTIifQ.4Qv3NJI6av2nKi1U3aNmm71cIwJ3TvRsIlYDafQUVv_Khy_e-8oEpV_BoP4V1CII12oT-Yq4cPveHILz8BOwjg
      properties:
        oneTimeToken:
          description: __Mandatory__. The one time token to exchange for a consent
            token.
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJJTlNUSVRVVElPTiI6ImJidmEtc2FuZGJveCIsIlVVSUQiOiJmMzNmNGU4ZC1jMDQ0LTQ2YTktOTlkMC0wYmRlMzIyYTJjOTIifQ.4Qv3NJI6av2nKi1U3aNmm71cIwJ3TvRsIlYDafQUVv_Khy_e-8oEpV_BoP4V1CII12oT-Yq4cPveHILz8BOwjg
          type: string
      required:
      - oneTimeToken
      type: object
    Pagination:
      example:
        next:
          cursor: cursor
          before: 2000-01-23T04:56:07.000+00:00
          limit: 5
          from: 2000-01-23T04:56:07.000+00:00
        self:
          cursor: cursor
          offset: 5
          before: 2000-01-23T04:56:07.000+00:00
          limit: 1
          from: 2000-01-23T04:56:07.000+00:00
        totalCount: 6
      properties:
        totalCount:
          format: int64
          type: integer
        self:
          $ref: '#/components/schemas/FilterAndSort'
        next:
          $ref: '#/components/schemas/Next'
      type: object
    Payee:
      description: __Mandatory__. The `Payee` object contains details of the beneficiary
        [person or business]. You must define this in your payment request alongwith
        all of the nested mandatory properties.
      example:
        accountIdentifications:
        - identification: "401016"
          type: SORT_CODE
        - identification: "71518920"
          type: ACCOUNT_NUMBER
        address:
          country: GB
        merchantId: "24589303"
        merchantCategoryCode: "5551"
        name: Jane Doe
      properties:
        name:
          description: __Mandatory__. The account holder name of the beneficiary.
          example: Jane Doe
          type: string
        accountIdentifications:
          description: __Mandatory__. The account identifications that identify the
            `Payee` bank account.
          example:
          - identification: "401016"
            type: SORT_CODE
          - identification: "71518920"
            type: ACCOUNT_NUMBER
          items:
            $ref: '#/components/schemas/AccountIdentification'
          type: array
          uniqueItems: true
        address:
          $ref: '#/components/schemas/Address'
        merchantId:
          description: __Optional__. The merchant ID is a unique code provided by
            the payment processor to the merchant.
          example: "24589303"
          type: string
        merchantCategoryCode:
          description: __Optional__. The category code of the merchant in case the
            `Payee` is a business.
          example: "5551"
          type: string
      required:
      - accountIdentifications
      - name
      type: object
    PayeeDetails:
      description: __Mandatory__. The `PayeeDetails` object contains details of the
        beneficiary [person or business]. You must define this in your payment request
        alongwith all of the nested mandatory properties.
      example:
        accountIdentifications:
        - identification: IBUK123456789
          type: IBAN
        country: GB
        name: Jane Doe
      properties:
        name:
          description: __Mandatory__. The account holder name of the beneficiary.
          example: Jane Doe
          type: string
        accountIdentifications:
          description: __Mandatory__. The account identifications that identify the
            `Payee` bank account.
          example:
          - identification: IBUK123456789
            type: IBAN
          items:
            $ref: '#/components/schemas/AccountIdentification'
          type: array
          uniqueItems: true
        country:
          description: __Conditional__. The 2-letter country code for the address.
            <br><br>An `Institution` may require you to specify the `country` when
            used in the context of the `Payee` to be able to make a payment
          example: GB
          type: string
      required:
      - accountIdentifications
      - country
      - name
      type: object
    Payer:
      description: __Conditional__. The `Payer` object contains details of the benefactor
        [person or business]. If you define this in your payment request, you mustdefine
        this along with all of the nested mandatory properties.<ol>     <li>The `Payer`
        object is mandatory along with its mandatory properties when the account of
        the benefactor is from an `Institution` in Europe.          See [Berlin Group](https://docs.yapily.com/pages/knowledge/open-banking/berlin_group/)
        for more information.</li>     <li>The `Payer` should be specified if the
        `Payer` account is intended to be locked.</li></ol>
      example:
        accountIdentifications:
        - identification: "401016"
          type: SORT_CODE
        - identification: "401016"
          type: SORT_CODE
        address:
          country: GB
        name: John Doe
      properties:
        name:
          description: __Mandatory__. The account holder name of the Payer.
          example: John Doe
          type: string
        accountIdentifications:
          description: __Mandatory__. The account identifications that identify the
            `Payer` bank account.
          items:
            $ref: '#/components/schemas/AccountIdentification'
          type: array
          uniqueItems: true
        address:
          $ref: '#/components/schemas/Address'
      required:
      - accountIdentifications
      type: object
    PayerDetails:
      description: __Conditional__. The `Payer` object contains details of the benefactor
        [person or business]. If you define this in your payment request, you mustdefine
        this along with all of the nested mandatory properties.<ol>     <li>The `Payer`
        object is mandatory along with its mandatory properties when the account of
        the benefactor is from an `Institution` in Europe.          See [Berlin Group](https://docs.yapily.com/pages/knowledge/open-banking/berlin_group/)
        for more information.</li>     <li>The `Payer` should be specified if the
        `Payer` account is intended to be locked.</li></ol>
      example:
        accountIdentifications:
        - identification: "401016"
          type: SORT_CODE
        - identification: "401016"
          type: SORT_CODE
      properties:
        accountIdentifications:
          description: __Mandatory__. The account identifications that identify the
            `Payer` bank account.
          items:
            $ref: '#/components/schemas/AccountIdentification'
          type: array
          uniqueItems: true
      required:
      - accountIdentifications
      type: object
    PaymentAuthorisationRequest:
      description: The request body containing an `PaymentAuthorisationRequest` json
        payload
      example:
        redirect:
          url: url
        forwardParameters:
        - forwardParameters
        - forwardParameters
        institutionId: yapily-mock
        userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        applicationUserId: user-234562290
        callback: https://display-parameters.com
        oneTimeToken: false
        paymentRequest:
          reference: Bill payment
          payee:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          readRefundAccount: false
          periodicPayment:
            numberOfPayments: 5
            nextPaymentDateTime: 2018-01-10T00:00:00Z
            finalPaymentAmount:
              amount: 10
              currency: GBP
            finalPaymentDateTime: 2030-01-10T00:00:00Z
            nextPaymentAmount:
              amount: 10
              currency: GBP
            frequency:
              intervalMonth: 1
              intervalWeek: 1
              executionDay: 1
          amount:
            amount: 10
            currency: GBP
          paymentIdempotencyId: 04ab4536gaerfc0e1f93c4f4
          internationalPayment:
            currencyOfTransfer: currencyOfTransfer
            purpose: purpose
            exchangeRateInformation:
              foreignExchangeContractReference: foreignExchangeContractReference
              rate: 0.8008281904610115
              unitCurrency: unitCurrency
          paymentDateTime: 2021-07-21T17:32:28Z
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
      properties:
        userUuid:
          format: uuid
          type: string
        applicationUserId:
          description: __Conditional__. The user-friendly reference to the `User`
            that will authorise the authorisation request. If a `User` with the specified
            `applicationUserId` exists, it will be used otherwise, a new `User` with
            the specified `applicationUserId` will be created and used. Either the
            `userUuid` or `applicationUserId` must be provided.
          example: user-234562290
          type: string
        forwardParameters:
          description: Extra parameters the TPP may want to get forwarded in the callback
            request after the PSU redirect.
          items:
            type: string
          type: array
        institutionId:
          description: __Mandatory__. The reference to the `Institution` which identifies
            which institution the authorisation request is sent to.
          example: yapily-mock
          type: string
        callback:
          description: __Optional__. The server to redirect the user to after the
            user complete the authorisation at the `Institution`. <br><br>See [Using
            a callback (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-optional)
            for more information.
          example: https://display-parameters.com
          type: string
        redirect:
          $ref: '#/components/schemas/RedirectRequest'
        oneTimeToken:
          description: __Conditional__. Used to receive a `oneTimeToken` rather than
            a `consentToken` at the `callback` for additional security. This can only
            be used when the `callback` is set. <br><br>See [Using a callback with
            an OTT (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-with-an-ott-optional)
            for more information.
          example: false
          type: boolean
        paymentRequest:
          $ref: '#/components/schemas/PaymentRequest'
      required:
      - institutionId
      - paymentRequest
      type: object
    PaymentAuthorisationRequestResponse:
      example:
        institutionId: institutionId
        authorizedAt: 2000-01-23T04:56:07.000+00:00
        transactionFrom: 2000-01-23T04:56:07.000+00:00
        consentToken: consentToken
        authorisationUrl: authorisationUrl
        explanation: explanation
        referenceId: referenceId
        transactionTo: 2000-01-23T04:56:07.000+00:00
        expiresAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        timeToExpire: timeToExpire
        charges:
        - chargeTo: chargeTo
          chargeType: chargeType
          chargeAmount:
            amount: 10
            currency: GBP
        - chargeTo: chargeTo
          chargeType: chargeType
          chargeAmount:
            amount: 10
            currency: GBP
        timeToExpireInMillis: 0
        qrCodeUrl: qrCodeUrl
        userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        applicationUserId: applicationUserId
        exchangeRateInformation:
          foreignExchangeContractReference: foreignExchangeContractReference
          exchangeRateExpiryDate: 2000-01-23T04:56:07.000+00:00
          rate: 2.3021358869347655
          unitCurrency: unitCurrency
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: state
        featureScope:
        - null
        - null
        institutionConsentId: institutionConsentId
      properties:
        id:
          format: uuid
          type: string
        userUuid:
          format: uuid
          type: string
        applicationUserId:
          type: string
        referenceId:
          type: string
        institutionId:
          type: string
        status:
          $ref: '#/components/schemas/AuthorisationStatus'
        createdAt:
          format: date-time
          type: string
        transactionFrom:
          format: date-time
          type: string
        transactionTo:
          format: date-time
          type: string
        expiresAt:
          format: date-time
          type: string
        timeToExpireInMillis:
          deprecated: true
          format: int64
          type: integer
        timeToExpire:
          format: iso8601
          type: string
        featureScope:
          items:
            $ref: '#/components/schemas/FeatureEnum'
          type: array
          uniqueItems: true
        consentToken:
          type: string
        state:
          type: string
        authorizedAt:
          format: date-time
          type: string
        institutionConsentId:
          type: string
        charges:
          items:
            $ref: '#/components/schemas/PaymentChargeDetails'
          type: array
        exchangeRateInformation:
          $ref: '#/components/schemas/ExchangeRateInformationResponse'
        authorisationUrl:
          type: string
        qrCodeUrl:
          type: string
        explanation:
          type: string
      type: object
    ApiResponseOfPaymentAuthorisationRequestResponse:
      example:
        tracingId: tracingId
        data:
          institutionId: institutionId
          authorizedAt: 2000-01-23T04:56:07.000+00:00
          transactionFrom: 2000-01-23T04:56:07.000+00:00
          consentToken: consentToken
          authorisationUrl: authorisationUrl
          explanation: explanation
          referenceId: referenceId
          transactionTo: 2000-01-23T04:56:07.000+00:00
          expiresAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          timeToExpire: timeToExpire
          charges:
          - chargeTo: chargeTo
            chargeType: chargeType
            chargeAmount:
              amount: 10
              currency: GBP
          - chargeTo: chargeTo
            chargeType: chargeType
            chargeAmount:
              amount: 10
              currency: GBP
          timeToExpireInMillis: 0
          qrCodeUrl: qrCodeUrl
          userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          applicationUserId: applicationUserId
          exchangeRateInformation:
            foreignExchangeContractReference: foreignExchangeContractReference
            exchangeRateExpiryDate: 2000-01-23T04:56:07.000+00:00
            rate: 2.3021358869347655
            unitCurrency: unitCurrency
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          featureScope:
          - null
          - null
          institutionConsentId: institutionConsentId
        meta:
          tracingId: tracingId
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/PaymentAuthorisationRequestResponse'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    PaymentContextType:
      default: OTHER
      description: __Optional__. The payment context code. This defaults to `OTHER`
        if not specified.
      enum:
      - BILL
      - GOODS
      - SERVICES
      - OTHER
      - PERSON_TO_PERSON
      type: string
    PaymentEmbeddedAuthorisationRequest:
      description: The request body containing an `PaymentEmbeddedAuthorisationRequest`
        json payload
      example:
        redirect:
          url: url
        institutionId: yapily-mock
        userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        applicationUserId: user-234562290
        userCredentials:
          password: PISPWD12
          id: "6154057725"
          corporateId: "6345898763"
        callback: https://display-parameters.com
        selectedScaMethod:
          id: "944"
          type: PUSH_OTP
          description: SecureSIGN
        scaCode: "325614"
        oneTimeToken: false
        paymentRequest:
          reference: Bill payment
          payee:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          readRefundAccount: false
          periodicPayment:
            numberOfPayments: 5
            nextPaymentDateTime: 2018-01-10T00:00:00Z
            finalPaymentAmount:
              amount: 10
              currency: GBP
            finalPaymentDateTime: 2030-01-10T00:00:00Z
            nextPaymentAmount:
              amount: 10
              currency: GBP
            frequency:
              intervalMonth: 1
              intervalWeek: 1
              executionDay: 1
          amount:
            amount: 10
            currency: GBP
          paymentIdempotencyId: 04ab4536gaerfc0e1f93c4f4
          internationalPayment:
            currencyOfTransfer: currencyOfTransfer
            purpose: purpose
            exchangeRateInformation:
              foreignExchangeContractReference: foreignExchangeContractReference
              rate: 0.8008281904610115
              unitCurrency: unitCurrency
          paymentDateTime: 2021-07-21T17:32:28Z
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
      properties:
        userUuid:
          format: uuid
          type: string
        applicationUserId:
          description: __Conditional__. The user-friendly reference to the `User`
            that will authorise the authorisation request. If a `User` with the specified
            `applicationUserId` exists, it will be used otherwise, a new `User` with
            the specified `applicationUserId` will be created and used. Either the
            `userUuid` or `applicationUserId` must be provided.
          example: user-234562290
          type: string
        institutionId:
          description: __Mandatory__. The reference to the `Institution` which identifies
            which institution the authorisation request is sent to.
          example: yapily-mock
          type: string
        callback:
          description: __Optional__. The server to redirect the user to after the
            user complete the authorisation at the `Institution`. <br><br>See [Using
            a callback (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-optional)
            for more information.
          example: https://display-parameters.com
          type: string
        redirect:
          $ref: '#/components/schemas/RedirectRequest'
        oneTimeToken:
          description: __Conditional__. Used to receive a `oneTimeToken` rather than
            a `consentToken` at the `callback` for additional security. This can only
            be used when the `callback` is set. <br><br>See [Using a callback with
            an OTT (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-with-an-ott-optional)
            for more information.
          example: false
          type: boolean
        paymentRequest:
          $ref: '#/components/schemas/PaymentRequest'
        userCredentials:
          $ref: '#/components/schemas/UserCredentials'
        selectedScaMethod:
          $ref: '#/components/schemas/ScaMethod'
        scaCode:
          description: __Conditional__. Used to update the authorisation with the
            sca code received by the user from the `Institution` using the embedded
            payment authorisation flow.<br><br>This is the penultimate step required
            in the embedded payment authorisation flow to authorise the `Consent`.
            After sending the sca code, to obtain an authorised consent, the last
            step is to poll [Get Consent](https://docs.yapily.com/api/reference/#operation/getConsentById)
            until the `Institution` authorises the request and the `Consent` `status`
            transitions to `AUTHORIZED`.
          example: "325614"
          type: string
      required:
      - institutionId
      - paymentRequest
      type: object
    PaymentEmbeddedAuthorisationRequestResponse:
      example:
        institutionId: institutionId
        authorizedAt: 2000-01-23T04:56:07.000+00:00
        transactionFrom: 2000-01-23T04:56:07.000+00:00
        consentToken: consentToken
        authorisationUrl: authorisationUrl
        explanation: explanation
        referenceId: referenceId
        transactionTo: 2000-01-23T04:56:07.000+00:00
        expiresAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        timeToExpire: timeToExpire
        charges:
        - chargeTo: chargeTo
          chargeType: chargeType
          chargeAmount:
            amount: 10
            currency: GBP
        - chargeTo: chargeTo
          chargeType: chargeType
          chargeAmount:
            amount: 10
            currency: GBP
        scaMethods:
        - id: "944"
          type: PUSH_OTP
          description: SecureSIGN
        - id: "944"
          type: PUSH_OTP
          description: SecureSIGN
        timeToExpireInMillis: 0
        qrCodeUrl: qrCodeUrl
        userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        applicationUserId: applicationUserId
        exchangeRateInformation:
          foreignExchangeContractReference: foreignExchangeContractReference
          exchangeRateExpiryDate: 2000-01-23T04:56:07.000+00:00
          rate: 2.3021358869347655
          unitCurrency: unitCurrency
        selectedScaMethod:
          id: "944"
          type: PUSH_OTP
          description: SecureSIGN
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: state
        featureScope:
        - null
        - null
        institutionConsentId: institutionConsentId
      properties:
        id:
          format: uuid
          type: string
        userUuid:
          format: uuid
          type: string
        applicationUserId:
          type: string
        referenceId:
          type: string
        institutionId:
          type: string
        status:
          $ref: '#/components/schemas/AuthorisationStatus'
        createdAt:
          format: date-time
          type: string
        transactionFrom:
          format: date-time
          type: string
        transactionTo:
          format: date-time
          type: string
        expiresAt:
          format: date-time
          type: string
        timeToExpireInMillis:
          deprecated: true
          format: int64
          type: integer
        timeToExpire:
          format: iso8601
          type: string
        featureScope:
          items:
            $ref: '#/components/schemas/FeatureEnum'
          type: array
          uniqueItems: true
        consentToken:
          type: string
        state:
          type: string
        authorizedAt:
          format: date-time
          type: string
        institutionConsentId:
          type: string
        charges:
          items:
            $ref: '#/components/schemas/PaymentChargeDetails'
          type: array
        exchangeRateInformation:
          $ref: '#/components/schemas/ExchangeRateInformationResponse'
        authorisationUrl:
          type: string
        qrCodeUrl:
          type: string
        explanation:
          type: string
        scaMethods:
          items:
            $ref: '#/components/schemas/ScaMethod'
          type: array
        selectedScaMethod:
          $ref: '#/components/schemas/ScaMethod'
      type: object
    ApiResponseOfPaymentEmbeddedAuthorisationRequestResponse:
      example:
        tracingId: tracingId
        data:
          institutionId: institutionId
          authorizedAt: 2000-01-23T04:56:07.000+00:00
          transactionFrom: 2000-01-23T04:56:07.000+00:00
          consentToken: consentToken
          authorisationUrl: authorisationUrl
          explanation: explanation
          referenceId: referenceId
          transactionTo: 2000-01-23T04:56:07.000+00:00
          expiresAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          timeToExpire: timeToExpire
          charges:
          - chargeTo: chargeTo
            chargeType: chargeType
            chargeAmount:
              amount: 10
              currency: GBP
          - chargeTo: chargeTo
            chargeType: chargeType
            chargeAmount:
              amount: 10
              currency: GBP
          scaMethods:
          - id: "944"
            type: PUSH_OTP
            description: SecureSIGN
          - id: "944"
            type: PUSH_OTP
            description: SecureSIGN
          timeToExpireInMillis: 0
          qrCodeUrl: qrCodeUrl
          userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          applicationUserId: applicationUserId
          exchangeRateInformation:
            foreignExchangeContractReference: foreignExchangeContractReference
            exchangeRateExpiryDate: 2000-01-23T04:56:07.000+00:00
            rate: 2.3021358869347655
            unitCurrency: unitCurrency
          selectedScaMethod:
            id: "944"
            type: PUSH_OTP
            description: SecureSIGN
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          featureScope:
          - null
          - null
          institutionConsentId: institutionConsentId
        meta:
          tracingId: tracingId
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/PaymentEmbeddedAuthorisationRequestResponse'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    PaymentIsoStatus:
      example:
        code: ACCC
        name: AcceptedCreditSettlementCompleted
      properties:
        code:
          $ref: '#/components/schemas/PaymentIsoStatusCodeEnum'
        name:
          description: The full name of the ISO 20022 `PaymentStatusCode`.
          example: AcceptedCreditSettlementCompleted
          type: string
      type: object
    PaymentIsoStatusCodeEnum:
      description: The ISO 20022 `PaymentStatusCode`.
      enum:
      - ACCC
      - ACCP
      - ACSC
      - ACSP
      - ACTC
      - ACWC
      - ACWP
      - RCVD
      - PDNG
      - RJCT
      - CANC
      - ACFC
      - PATC
      - PART
      example: ACCC
      type: string
    PaymentPreAuthorisationRequest:
      description: __Mandatory__. The payment pre authorisation request object defining
        the details of the payment and pre auth.
      example:
        redirect:
          url: url
        payee:
          accountIdentifications:
          - identification: IBUK123456789
            type: IBAN
          country: GB
          name: Jane Doe
        reference: Bill payment
        amount:
          amount: 10
          currency: GBP
        forwardParameters:
        - forwardParameters
        - forwardParameters
        institutionId: yapily-mock
        scope: AIS
        userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        applicationUserId: user-234562290
        callback: https://display-parameters.com
        payer:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "401016"
            type: SORT_CODE
        oneTimeToken: false
      properties:
        userUuid:
          format: uuid
          type: string
        applicationUserId:
          description: __Conditional__. The user-friendly reference to the `User`
            that will authorise the authorisation request. If a `User` with the specified
            `applicationUserId` exists, it will be used otherwise, a new `User` with
            the specified `applicationUserId` will be created and used. Either the
            `userUuid` or `applicationUserId` must be provided.
          example: user-234562290
          type: string
        forwardParameters:
          items:
            type: string
          type: array
        institutionId:
          description: __Mandatory__. The reference to the `Institution` which identifies
            which institution the authorisation request is sent to.
          example: yapily-mock
          type: string
        callback:
          description: __Optional__. The server to redirect the user to after the
            user complete the authorisation at the `Institution`. <br><br>See [Using
            a callback (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-optional)
            for more information.
          example: https://display-parameters.com
          type: string
        redirect:
          $ref: '#/components/schemas/RedirectRequest'
        oneTimeToken:
          description: __Conditional__. Used to receive a `oneTimeToken` rather than
            a `consentToken` at the `callback` for additional security. This can only
            be used when the `callback` is set. <br><br>See [Using a callback with
            an OTT (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-with-an-ott-optional)
            for more information.
          example: false
          type: boolean
        scope:
          description: __Mandatory__. Defines the scope of the pre-authorisation request.
          example: AIS
          type: string
        payee:
          $ref: '#/components/schemas/PayeeDetails'
        payer:
          $ref: '#/components/schemas/PayerDetails'
        amount:
          $ref: '#/components/schemas/Amount'
        reference:
          description: __Mandatory__. The payment reference or description. Limited
            to a maximum of 18 characters long.
          example: Bill payment
          type: string
      required:
      - amount
      - institutionId
      - payee
      - payer
      - reference
      - scope
      type: object
    PaymentRequest:
      description: __Mandatory__. The payment request object defining the details
        of the payment.
      example:
        reference: Bill payment
        payee:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "71518920"
            type: ACCOUNT_NUMBER
          address:
            country: GB
          merchantId: "24589303"
          merchantCategoryCode: "5551"
          name: Jane Doe
        readRefundAccount: false
        periodicPayment:
          numberOfPayments: 5
          nextPaymentDateTime: 2018-01-10T00:00:00Z
          finalPaymentAmount:
            amount: 10
            currency: GBP
          finalPaymentDateTime: 2030-01-10T00:00:00Z
          nextPaymentAmount:
            amount: 10
            currency: GBP
          frequency:
            intervalMonth: 1
            intervalWeek: 1
            executionDay: 1
        amount:
          amount: 10
          currency: GBP
        paymentIdempotencyId: 04ab4536gaerfc0e1f93c4f4
        internationalPayment:
          currencyOfTransfer: currencyOfTransfer
          purpose: purpose
          exchangeRateInformation:
            foreignExchangeContractReference: foreignExchangeContractReference
            rate: 0.8008281904610115
            unitCurrency: unitCurrency
        paymentDateTime: 2021-07-21T17:32:28Z
        payer:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "401016"
            type: SORT_CODE
          address:
            country: GB
          name: John Doe
      properties:
        paymentIdempotencyId:
          description: __Mandatory__. A unique identifier that you must provide to
            identify the payment. This can be any alpha-numeric string but is limited
            to a maximum of 35 characters.
          example: 04ab4536gaerfc0e1f93c4f4
          type: string
        payer:
          $ref: '#/components/schemas/Payer'
        reference:
          description: __Optional__. The payment reference or description. Limited
            to a maximum of 18 characters long.
          example: Bill payment
          type: string
        contextType:
          $ref: '#/components/schemas/PaymentContextType'
        type:
          $ref: '#/components/schemas/PaymentType'
        payee:
          $ref: '#/components/schemas/Payee'
        periodicPayment:
          $ref: '#/components/schemas/PeriodicPaymentRequest'
        internationalPayment:
          $ref: '#/components/schemas/InternationalPaymentRequest'
        amount:
          $ref: '#/components/schemas/Amount'
        paymentDateTime:
          description: __Conditional__. Used to specify the date of the payment when
            the payment type is one of the following:<ul>    <li><code>DOMESTIC_SCHEDULED_PAYMENT</code></li>    <li><code>DOMESTIC_PERIODIC_PAYMENT</code></li>    <li><code>INTERNATIONAL_SCHEDULED_PAYMENT</code></li>    <li><code>INTERNATIONAL_PERIODIC_PAYMENT</code></li></ul>
          example: 2021-07-21T17:32:28Z
          format: date-time
          type: string
        readRefundAccount:
          description: __Optional__. Used to request the payer details in the payment
            response when the `Institution` provides the feature `READ_DOMESTIC_SINGLE_REFUND`.<br><br>See
            [Reverse Payments](https://docs.yapily.com/pages/knowledge/open-banking/reverse_payments/)
            for more information.
          example: false
          type: boolean
      required:
      - amount
      - payee
      - paymentIdempotencyId
      - type
      type: object
    PaymentResponse:
      example:
        purpose: purpose
        scheduledPaymentDateTime: 2000-01-23T04:56:07.000+00:00
        finalPaymentDateTime: 2000-01-23T04:56:07.000+00:00
        payer:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "401016"
            type: SORT_CODE
          address:
            country: GB
          name: John Doe
        firstPaymentAmount:
          amount: 10
          currency: GBP
        chargeDetails:
        - chargeTo: chargeTo
          chargeType: chargeType
          chargeAmount:
            amount: 10
            currency: GBP
        - chargeTo: chargeTo
          chargeType: chargeType
          chargeAmount:
            amount: 10
            currency: GBP
        amountDetails:
          amount: 10
          currency: GBP
        frequency:
          intervalMonth: 5
          intervalWeek: 1
          executionDay: 5
        reference: reference
        createdAt: 2000-01-23T04:56:07.000+00:00
        scheduledPaymentType: scheduledPaymentType
        paymentIdempotencyId: paymentIdempotencyId
        exchangeRate:
          foreignExchangeContractReference: foreignExchangeContractReference
          exchangeRateExpiryDate: 2000-01-23T04:56:07.000+00:00
          rate: 2.3021358869347655
          unitCurrency: unitCurrency
        firstPaymentDateTime: 2000-01-23T04:56:07.000+00:00
        currency: currency
        id: id
        paymentLifecycleId: paymentLifecycleId
        previousPaymentAmount:
          amount: 10
          currency: GBP
        refundAccount:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "401016"
            type: SORT_CODE
          name: name
        institutionConsentId: institutionConsentId
        numberOfPayments: 6
        previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
        amount: 0.8008281904610115
        currencyOfTransfer: currencyOfTransfer
        payeeDetails:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "71518920"
            type: ACCOUNT_NUMBER
          address:
            country: GB
          merchantId: "24589303"
          merchantCategoryCode: "5551"
          name: Jane Doe
        bulkAmountSum: 7.061401241503109
        nextPaymentDateTime: 2000-01-23T04:56:07.000+00:00
        finalPaymentAmount:
          amount: 10
          currency: GBP
        statusDetails:
          statusReason: statusReason
          statusReasonDescription: statusReasonDescription
          statusUpdateDate: 2000-01-23T04:56:07.000+00:00
          multiAuthorisationStatus:
            expirationDateTime: 2000-01-23T04:56:07.000+00:00
            numberOfAuthorisationReceived: 6
            numberOfAuthorisationRequired: 0
            lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
            status: status
          isoStatus:
            code: ACCC
            name: AcceptedCreditSettlementCompleted
        nextPaymentAmount:
          amount: 10
          currency: GBP
      properties:
        id:
          type: string
        institutionConsentId:
          type: string
        paymentIdempotencyId:
          type: string
        paymentLifecycleId:
          type: string
        status:
          $ref: '#/components/schemas/PaymentStatus'
        statusDetails:
          $ref: '#/components/schemas/PaymentStatusDetails'
        payer:
          $ref: '#/components/schemas/Payer'
        payeeDetails:
          $ref: '#/components/schemas/Payee'
        reference:
          type: string
        amount:
          type: number
        currency:
          type: string
        amountDetails:
          $ref: '#/components/schemas/Amount'
        createdAt:
          format: date-time
          type: string
        firstPaymentAmount:
          $ref: '#/components/schemas/Amount'
        firstPaymentDateTime:
          format: date-time
          type: string
        nextPaymentAmount:
          $ref: '#/components/schemas/Amount'
        nextPaymentDateTime:
          format: date-time
          type: string
        finalPaymentAmount:
          $ref: '#/components/schemas/Amount'
        finalPaymentDateTime:
          format: date-time
          type: string
        numberOfPayments:
          format: int32
          type: integer
        previousPaymentAmount:
          $ref: '#/components/schemas/Amount'
        previousPaymentDateTime:
          format: date-time
          type: string
        chargeDetails:
          items:
            $ref: '#/components/schemas/PaymentChargeDetails'
          type: array
        scheduledPaymentType:
          type: string
        scheduledPaymentDateTime:
          format: date-time
          type: string
        frequency:
          $ref: '#/components/schemas/FrequencyResponse'
        currencyOfTransfer:
          type: string
        purpose:
          type: string
        priority:
          $ref: '#/components/schemas/PriorityCodeEnum'
        exchangeRate:
          $ref: '#/components/schemas/ExchangeRateInformationResponse'
        refundAccount:
          $ref: '#/components/schemas/RefundAccount'
        bulkAmountSum:
          type: number
      type: object
    ApiListResponseOfPaymentResponse:
      example:
        tracingId: tracingId
        data:
        - purpose: purpose
          scheduledPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          finalPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
          firstPaymentAmount:
            amount: 10
            currency: GBP
          chargeDetails:
          - chargeTo: chargeTo
            chargeType: chargeType
            chargeAmount:
              amount: 10
              currency: GBP
          - chargeTo: chargeTo
            chargeType: chargeType
            chargeAmount:
              amount: 10
              currency: GBP
          amountDetails:
            amount: 10
            currency: GBP
          frequency:
            intervalMonth: 5
            intervalWeek: 1
            executionDay: 5
          reference: reference
          createdAt: 2000-01-23T04:56:07.000+00:00
          scheduledPaymentType: scheduledPaymentType
          paymentIdempotencyId: paymentIdempotencyId
          exchangeRate:
            foreignExchangeContractReference: foreignExchangeContractReference
            exchangeRateExpiryDate: 2000-01-23T04:56:07.000+00:00
            rate: 2.3021358869347655
            unitCurrency: unitCurrency
          firstPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          currency: currency
          id: id
          paymentLifecycleId: paymentLifecycleId
          previousPaymentAmount:
            amount: 10
            currency: GBP
          refundAccount:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            name: name
          institutionConsentId: institutionConsentId
          numberOfPayments: 6
          previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          amount: 0.8008281904610115
          currencyOfTransfer: currencyOfTransfer
          payeeDetails:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          bulkAmountSum: 7.061401241503109
          nextPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          finalPaymentAmount:
            amount: 10
            currency: GBP
          statusDetails:
            statusReason: statusReason
            statusReasonDescription: statusReasonDescription
            statusUpdateDate: 2000-01-23T04:56:07.000+00:00
            multiAuthorisationStatus:
              expirationDateTime: 2000-01-23T04:56:07.000+00:00
              numberOfAuthorisationReceived: 6
              numberOfAuthorisationRequired: 0
              lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            isoStatus:
              code: ACCC
              name: AcceptedCreditSettlementCompleted
          nextPaymentAmount:
            amount: 10
            currency: GBP
        - purpose: purpose
          scheduledPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          finalPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
          firstPaymentAmount:
            amount: 10
            currency: GBP
          chargeDetails:
          - chargeTo: chargeTo
            chargeType: chargeType
            chargeAmount:
              amount: 10
              currency: GBP
          - chargeTo: chargeTo
            chargeType: chargeType
            chargeAmount:
              amount: 10
              currency: GBP
          amountDetails:
            amount: 10
            currency: GBP
          frequency:
            intervalMonth: 5
            intervalWeek: 1
            executionDay: 5
          reference: reference
          createdAt: 2000-01-23T04:56:07.000+00:00
          scheduledPaymentType: scheduledPaymentType
          paymentIdempotencyId: paymentIdempotencyId
          exchangeRate:
            foreignExchangeContractReference: foreignExchangeContractReference
            exchangeRateExpiryDate: 2000-01-23T04:56:07.000+00:00
            rate: 2.3021358869347655
            unitCurrency: unitCurrency
          firstPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          currency: currency
          id: id
          paymentLifecycleId: paymentLifecycleId
          previousPaymentAmount:
            amount: 10
            currency: GBP
          refundAccount:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            name: name
          institutionConsentId: institutionConsentId
          numberOfPayments: 6
          previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          amount: 0.8008281904610115
          currencyOfTransfer: currencyOfTransfer
          payeeDetails:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          bulkAmountSum: 7.061401241503109
          nextPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          finalPaymentAmount:
            amount: 10
            currency: GBP
          statusDetails:
            statusReason: statusReason
            statusReasonDescription: statusReasonDescription
            statusUpdateDate: 2000-01-23T04:56:07.000+00:00
            multiAuthorisationStatus:
              expirationDateTime: 2000-01-23T04:56:07.000+00:00
              numberOfAuthorisationReceived: 6
              numberOfAuthorisationRequired: 0
              lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            isoStatus:
              code: ACCC
              name: AcceptedCreditSettlementCompleted
          nextPaymentAmount:
            amount: 10
            currency: GBP
        meta:
          tracingId: tracingId
          pagination:
            next:
              cursor: cursor
              before: 2000-01-23T04:56:07.000+00:00
              limit: 5
              from: 2000-01-23T04:56:07.000+00:00
            self:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
            totalCount: 6
          count: 0
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
        paging:
          data:
          - purpose: purpose
            scheduledPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            finalPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            payer:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              address:
                country: GB
              name: John Doe
            firstPaymentAmount:
              amount: 10
              currency: GBP
            chargeDetails:
            - chargeTo: chargeTo
              chargeType: chargeType
              chargeAmount:
                amount: 10
                currency: GBP
            - chargeTo: chargeTo
              chargeType: chargeType
              chargeAmount:
                amount: 10
                currency: GBP
            amountDetails:
              amount: 10
              currency: GBP
            frequency:
              intervalMonth: 5
              intervalWeek: 1
              executionDay: 5
            reference: reference
            createdAt: 2000-01-23T04:56:07.000+00:00
            scheduledPaymentType: scheduledPaymentType
            paymentIdempotencyId: paymentIdempotencyId
            exchangeRate:
              foreignExchangeContractReference: foreignExchangeContractReference
              exchangeRateExpiryDate: 2000-01-23T04:56:07.000+00:00
              rate: 2.3021358869347655
              unitCurrency: unitCurrency
            firstPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            currency: currency
            id: id
            paymentLifecycleId: paymentLifecycleId
            previousPaymentAmount:
              amount: 10
              currency: GBP
            refundAccount:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              name: name
            institutionConsentId: institutionConsentId
            numberOfPayments: 6
            previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            amount: 0.8008281904610115
            currencyOfTransfer: currencyOfTransfer
            payeeDetails:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "71518920"
                type: ACCOUNT_NUMBER
              address:
                country: GB
              merchantId: "24589303"
              merchantCategoryCode: "5551"
              name: Jane Doe
            bulkAmountSum: 7.061401241503109
            nextPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            finalPaymentAmount:
              amount: 10
              currency: GBP
            statusDetails:
              statusReason: statusReason
              statusReasonDescription: statusReasonDescription
              statusUpdateDate: 2000-01-23T04:56:07.000+00:00
              multiAuthorisationStatus:
                expirationDateTime: 2000-01-23T04:56:07.000+00:00
                numberOfAuthorisationReceived: 6
                numberOfAuthorisationRequired: 0
                lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
                status: status
              isoStatus:
                code: ACCC
                name: AcceptedCreditSettlementCompleted
            nextPaymentAmount:
              amount: 10
              currency: GBP
          - purpose: purpose
            scheduledPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            finalPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            payer:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              address:
                country: GB
              name: John Doe
            firstPaymentAmount:
              amount: 10
              currency: GBP
            chargeDetails:
            - chargeTo: chargeTo
              chargeType: chargeType
              chargeAmount:
                amount: 10
                currency: GBP
            - chargeTo: chargeTo
              chargeType: chargeType
              chargeAmount:
                amount: 10
                currency: GBP
            amountDetails:
              amount: 10
              currency: GBP
            frequency:
              intervalMonth: 5
              intervalWeek: 1
              executionDay: 5
            reference: reference
            createdAt: 2000-01-23T04:56:07.000+00:00
            scheduledPaymentType: scheduledPaymentType
            paymentIdempotencyId: paymentIdempotencyId
            exchangeRate:
              foreignExchangeContractReference: foreignExchangeContractReference
              exchangeRateExpiryDate: 2000-01-23T04:56:07.000+00:00
              rate: 2.3021358869347655
              unitCurrency: unitCurrency
            firstPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            currency: currency
            id: id
            paymentLifecycleId: paymentLifecycleId
            previousPaymentAmount:
              amount: 10
              currency: GBP
            refundAccount:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              name: name
            institutionConsentId: institutionConsentId
            numberOfPayments: 6
            previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            amount: 0.8008281904610115
            currencyOfTransfer: currencyOfTransfer
            payeeDetails:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "71518920"
                type: ACCOUNT_NUMBER
              address:
                country: GB
              merchantId: "24589303"
              merchantCategoryCode: "5551"
              name: Jane Doe
            bulkAmountSum: 7.061401241503109
            nextPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            finalPaymentAmount:
              amount: 10
              currency: GBP
            statusDetails:
              statusReason: statusReason
              statusReasonDescription: statusReasonDescription
              statusUpdateDate: 2000-01-23T04:56:07.000+00:00
              multiAuthorisationStatus:
                expirationDateTime: 2000-01-23T04:56:07.000+00:00
                numberOfAuthorisationReceived: 6
                numberOfAuthorisationRequired: 0
                lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
                status: status
              isoStatus:
                code: ACCC
                name: AcceptedCreditSettlementCompleted
            nextPaymentAmount:
              amount: 10
              currency: GBP
          apiCall: '{}'
          totalCount: 9
          nextCursorHash: nextCursorHash
          nextLink: nextLink
          pagingMap:
            key:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
      properties:
        meta:
          $ref: '#/components/schemas/ResponseListMeta'
        data:
          items:
            $ref: '#/components/schemas/PaymentResponse'
          type: array
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        paging:
          $ref: '#/components/schemas/FilteredClientPayloadListPaymentResponse'
        tracingId:
          type: string
          writeOnly: true
      type: object
    ApiResponseOfPaymentResponse:
      example:
        tracingId: tracingId
        data:
          purpose: purpose
          scheduledPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          finalPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
          firstPaymentAmount:
            amount: 10
            currency: GBP
          chargeDetails:
          - chargeTo: chargeTo
            chargeType: chargeType
            chargeAmount:
              amount: 10
              currency: GBP
          - chargeTo: chargeTo
            chargeType: chargeType
            chargeAmount:
              amount: 10
              currency: GBP
          amountDetails:
            amount: 10
            currency: GBP
          frequency:
            intervalMonth: 5
            intervalWeek: 1
            executionDay: 5
          reference: reference
          createdAt: 2000-01-23T04:56:07.000+00:00
          scheduledPaymentType: scheduledPaymentType
          paymentIdempotencyId: paymentIdempotencyId
          exchangeRate:
            foreignExchangeContractReference: foreignExchangeContractReference
            exchangeRateExpiryDate: 2000-01-23T04:56:07.000+00:00
            rate: 2.3021358869347655
            unitCurrency: unitCurrency
          firstPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          currency: currency
          id: id
          paymentLifecycleId: paymentLifecycleId
          previousPaymentAmount:
            amount: 10
            currency: GBP
          refundAccount:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            name: name
          institutionConsentId: institutionConsentId
          numberOfPayments: 6
          previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          amount: 0.8008281904610115
          currencyOfTransfer: currencyOfTransfer
          payeeDetails:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          bulkAmountSum: 7.061401241503109
          nextPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          finalPaymentAmount:
            amount: 10
            currency: GBP
          statusDetails:
            statusReason: statusReason
            statusReasonDescription: statusReasonDescription
            statusUpdateDate: 2000-01-23T04:56:07.000+00:00
            multiAuthorisationStatus:
              expirationDateTime: 2000-01-23T04:56:07.000+00:00
              numberOfAuthorisationReceived: 6
              numberOfAuthorisationRequired: 0
              lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            isoStatus:
              code: ACCC
              name: AcceptedCreditSettlementCompleted
          nextPaymentAmount:
            amount: 10
            currency: GBP
        meta:
          tracingId: tracingId
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/PaymentResponse'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    PaymentResponses:
      example:
        payments:
        - purpose: purpose
          scheduledPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          finalPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
          firstPaymentAmount:
            amount: 10
            currency: GBP
          chargeDetails:
          - chargeTo: chargeTo
            chargeType: chargeType
            chargeAmount:
              amount: 10
              currency: GBP
          - chargeTo: chargeTo
            chargeType: chargeType
            chargeAmount:
              amount: 10
              currency: GBP
          amountDetails:
            amount: 10
            currency: GBP
          frequency:
            intervalMonth: 5
            intervalWeek: 1
            executionDay: 5
          reference: reference
          createdAt: 2000-01-23T04:56:07.000+00:00
          scheduledPaymentType: scheduledPaymentType
          paymentIdempotencyId: paymentIdempotencyId
          exchangeRate:
            foreignExchangeContractReference: foreignExchangeContractReference
            exchangeRateExpiryDate: 2000-01-23T04:56:07.000+00:00
            rate: 2.3021358869347655
            unitCurrency: unitCurrency
          firstPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          currency: currency
          id: id
          paymentLifecycleId: paymentLifecycleId
          previousPaymentAmount:
            amount: 10
            currency: GBP
          refundAccount:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            name: name
          institutionConsentId: institutionConsentId
          numberOfPayments: 6
          previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          amount: 0.8008281904610115
          currencyOfTransfer: currencyOfTransfer
          payeeDetails:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          bulkAmountSum: 7.061401241503109
          nextPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          finalPaymentAmount:
            amount: 10
            currency: GBP
          statusDetails:
            statusReason: statusReason
            statusReasonDescription: statusReasonDescription
            statusUpdateDate: 2000-01-23T04:56:07.000+00:00
            multiAuthorisationStatus:
              expirationDateTime: 2000-01-23T04:56:07.000+00:00
              numberOfAuthorisationReceived: 6
              numberOfAuthorisationRequired: 0
              lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            isoStatus:
              code: ACCC
              name: AcceptedCreditSettlementCompleted
          nextPaymentAmount:
            amount: 10
            currency: GBP
        - purpose: purpose
          scheduledPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          finalPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
          firstPaymentAmount:
            amount: 10
            currency: GBP
          chargeDetails:
          - chargeTo: chargeTo
            chargeType: chargeType
            chargeAmount:
              amount: 10
              currency: GBP
          - chargeTo: chargeTo
            chargeType: chargeType
            chargeAmount:
              amount: 10
              currency: GBP
          amountDetails:
            amount: 10
            currency: GBP
          frequency:
            intervalMonth: 5
            intervalWeek: 1
            executionDay: 5
          reference: reference
          createdAt: 2000-01-23T04:56:07.000+00:00
          scheduledPaymentType: scheduledPaymentType
          paymentIdempotencyId: paymentIdempotencyId
          exchangeRate:
            foreignExchangeContractReference: foreignExchangeContractReference
            exchangeRateExpiryDate: 2000-01-23T04:56:07.000+00:00
            rate: 2.3021358869347655
            unitCurrency: unitCurrency
          firstPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          currency: currency
          id: id
          paymentLifecycleId: paymentLifecycleId
          previousPaymentAmount:
            amount: 10
            currency: GBP
          refundAccount:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            name: name
          institutionConsentId: institutionConsentId
          numberOfPayments: 6
          previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          amount: 0.8008281904610115
          currencyOfTransfer: currencyOfTransfer
          payeeDetails:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          bulkAmountSum: 7.061401241503109
          nextPaymentDateTime: 2000-01-23T04:56:07.000+00:00
          finalPaymentAmount:
            amount: 10
            currency: GBP
          statusDetails:
            statusReason: statusReason
            statusReasonDescription: statusReasonDescription
            statusUpdateDate: 2000-01-23T04:56:07.000+00:00
            multiAuthorisationStatus:
              expirationDateTime: 2000-01-23T04:56:07.000+00:00
              numberOfAuthorisationReceived: 6
              numberOfAuthorisationRequired: 0
              lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            isoStatus:
              code: ACCC
              name: AcceptedCreditSettlementCompleted
          nextPaymentAmount:
            amount: 10
            currency: GBP
      properties:
        payments:
          items:
            $ref: '#/components/schemas/PaymentResponse'
          type: array
      type: object
    ApiResponseOfPaymentResponses:
      example:
        tracingId: tracingId
        data:
          payments:
          - purpose: purpose
            scheduledPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            finalPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            payer:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              address:
                country: GB
              name: John Doe
            firstPaymentAmount:
              amount: 10
              currency: GBP
            chargeDetails:
            - chargeTo: chargeTo
              chargeType: chargeType
              chargeAmount:
                amount: 10
                currency: GBP
            - chargeTo: chargeTo
              chargeType: chargeType
              chargeAmount:
                amount: 10
                currency: GBP
            amountDetails:
              amount: 10
              currency: GBP
            frequency:
              intervalMonth: 5
              intervalWeek: 1
              executionDay: 5
            reference: reference
            createdAt: 2000-01-23T04:56:07.000+00:00
            scheduledPaymentType: scheduledPaymentType
            paymentIdempotencyId: paymentIdempotencyId
            exchangeRate:
              foreignExchangeContractReference: foreignExchangeContractReference
              exchangeRateExpiryDate: 2000-01-23T04:56:07.000+00:00
              rate: 2.3021358869347655
              unitCurrency: unitCurrency
            firstPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            currency: currency
            id: id
            paymentLifecycleId: paymentLifecycleId
            previousPaymentAmount:
              amount: 10
              currency: GBP
            refundAccount:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              name: name
            institutionConsentId: institutionConsentId
            numberOfPayments: 6
            previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            amount: 0.8008281904610115
            currencyOfTransfer: currencyOfTransfer
            payeeDetails:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "71518920"
                type: ACCOUNT_NUMBER
              address:
                country: GB
              merchantId: "24589303"
              merchantCategoryCode: "5551"
              name: Jane Doe
            bulkAmountSum: 7.061401241503109
            nextPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            finalPaymentAmount:
              amount: 10
              currency: GBP
            statusDetails:
              statusReason: statusReason
              statusReasonDescription: statusReasonDescription
              statusUpdateDate: 2000-01-23T04:56:07.000+00:00
              multiAuthorisationStatus:
                expirationDateTime: 2000-01-23T04:56:07.000+00:00
                numberOfAuthorisationReceived: 6
                numberOfAuthorisationRequired: 0
                lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
                status: status
              isoStatus:
                code: ACCC
                name: AcceptedCreditSettlementCompleted
            nextPaymentAmount:
              amount: 10
              currency: GBP
          - purpose: purpose
            scheduledPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            finalPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            payer:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              address:
                country: GB
              name: John Doe
            firstPaymentAmount:
              amount: 10
              currency: GBP
            chargeDetails:
            - chargeTo: chargeTo
              chargeType: chargeType
              chargeAmount:
                amount: 10
                currency: GBP
            - chargeTo: chargeTo
              chargeType: chargeType
              chargeAmount:
                amount: 10
                currency: GBP
            amountDetails:
              amount: 10
              currency: GBP
            frequency:
              intervalMonth: 5
              intervalWeek: 1
              executionDay: 5
            reference: reference
            createdAt: 2000-01-23T04:56:07.000+00:00
            scheduledPaymentType: scheduledPaymentType
            paymentIdempotencyId: paymentIdempotencyId
            exchangeRate:
              foreignExchangeContractReference: foreignExchangeContractReference
              exchangeRateExpiryDate: 2000-01-23T04:56:07.000+00:00
              rate: 2.3021358869347655
              unitCurrency: unitCurrency
            firstPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            currency: currency
            id: id
            paymentLifecycleId: paymentLifecycleId
            previousPaymentAmount:
              amount: 10
              currency: GBP
            refundAccount:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              name: name
            institutionConsentId: institutionConsentId
            numberOfPayments: 6
            previousPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            amount: 0.8008281904610115
            currencyOfTransfer: currencyOfTransfer
            payeeDetails:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "71518920"
                type: ACCOUNT_NUMBER
              address:
                country: GB
              merchantId: "24589303"
              merchantCategoryCode: "5551"
              name: Jane Doe
            bulkAmountSum: 7.061401241503109
            nextPaymentDateTime: 2000-01-23T04:56:07.000+00:00
            finalPaymentAmount:
              amount: 10
              currency: GBP
            statusDetails:
              statusReason: statusReason
              statusReasonDescription: statusReasonDescription
              statusUpdateDate: 2000-01-23T04:56:07.000+00:00
              multiAuthorisationStatus:
                expirationDateTime: 2000-01-23T04:56:07.000+00:00
                numberOfAuthorisationReceived: 6
                numberOfAuthorisationRequired: 0
                lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
                status: status
              isoStatus:
                code: ACCC
                name: AcceptedCreditSettlementCompleted
            nextPaymentAmount:
              amount: 10
              currency: GBP
        meta:
          tracingId: tracingId
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/PaymentResponses'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    PaymentStatus:
      description: The status of the Payment. <br><br>For more information, see [Payment
        Status](/guides/payments/payment-status/)
      enum:
      - PENDING
      - FAILED
      - DECLINED
      - COMPLETED
      - COMPLETED_SETTLEMENT_IN_PROCESS
      - EXPIRED
      - UNKNOWN
      - ACTIVE
      - INACTIVE
      type: string
    PaymentStatusDetails:
      example:
        statusReason: statusReason
        statusReasonDescription: statusReasonDescription
        statusUpdateDate: 2000-01-23T04:56:07.000+00:00
        multiAuthorisationStatus:
          expirationDateTime: 2000-01-23T04:56:07.000+00:00
          numberOfAuthorisationReceived: 6
          numberOfAuthorisationRequired: 0
          lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
          status: status
        isoStatus:
          code: ACCC
          name: AcceptedCreditSettlementCompleted
      properties:
        status:
          $ref: '#/components/schemas/PaymentStatus'
        statusReason:
          type: string
        statusReasonDescription:
          type: string
        statusUpdateDate:
          format: date-time
          type: string
        multiAuthorisationStatus:
          $ref: '#/components/schemas/MultiAuthorisation'
        isoStatus:
          $ref: '#/components/schemas/PaymentIsoStatus'
      type: object
    PaymentType:
      description: __Mandatory__. Used to specify which of the [payment types](https://docs.yapily.com/pages/key-concepts/payments/payment-execution/intro-to-payment-execution/#payment-types)
        to execute.<br><br>See [European Payments](https://docs.yapily.com/pages/knowledge/open-banking/european_payments/)
        to verify whether the `type` should be `DOMESTIC` or `INTERNATIONAL`.
      enum:
      - DOMESTIC_PAYMENT
      - DOMESTIC_INSTANT_PAYMENT
      - DOMESTIC_VARIABLE_RECURRING_PAYMENT
      - DOMESTIC_SCHEDULED_PAYMENT
      - DOMESTIC_PERIODIC_PAYMENT
      - INTERNATIONAL_PAYMENT
      - INTERNATIONAL_SCHEDULED_PAYMENT
      - INTERNATIONAL_PERIODIC_PAYMENT
      - BULK_PAYMENT
      type: string
    PeriodicPaymentRequest:
      description: __Conditional__. Used to specify properties to define a periodic
        payment. <br><br>Must be specified when the payment `type` is one of the following:<ul>     <li><code>DOMESTIC_PERIODIC_PAYMENT</code></li>     <li><code>INTERNATIONAL_PERIODIC_PAYMENT</code></li></ul>
      example:
        numberOfPayments: 5
        nextPaymentDateTime: 2018-01-10T00:00:00Z
        finalPaymentAmount:
          amount: 10
          currency: GBP
        finalPaymentDateTime: 2030-01-10T00:00:00Z
        nextPaymentAmount:
          amount: 10
          currency: GBP
        frequency:
          intervalMonth: 1
          intervalWeek: 1
          executionDay: 1
      properties:
        frequency:
          $ref: '#/components/schemas/FrequencyRequest'
        numberOfPayments:
          description: __Conditional__. Defines the total number of payments to be
            made.<br><br>This is required if `finalPaymentDateTime` is not specified
            and it is intended for the periodic payment have a fixed amount of payments.
          example: 5
          format: int32
          type: integer
        nextPaymentDateTime:
          description: __Conditional__. Defines when to start the recurring payment
            date and time. Specify this if you want the first payment to start on
            a different day than what the frequency object defines.
          example: 2018-01-10T00:00:00Z
          format: date-time
          type: string
        nextPaymentAmount:
          $ref: '#/components/schemas/Amount'
        finalPaymentDateTime:
          description: __Conditional__. Defines the final payment date and time. To
            create an open-ended periodic payment, do not specify this property.
          example: 2030-01-10T00:00:00Z
          format: date-time
          type: string
        finalPaymentAmount:
          $ref: '#/components/schemas/Amount'
      required:
      - frequency
      type: object
    PreAuthorisationRequest:
      example:
        redirect:
          url: url
        forwardParameters:
        - forwardParameters
        - forwardParameters
        institutionId: yapily-mock
        scope: AIS
        userUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        applicationUserId: user-234562290
        callback: https://display-parameters.com
        oneTimeToken: false
      properties:
        userUuid:
          format: uuid
          type: string
        applicationUserId:
          description: __Conditional__. The user-friendly reference to the `User`
            that will authorise the authorisation request. If a `User` with the specified
            `applicationUserId` exists, it will be used otherwise, a new `User` with
            the specified `applicationUserId` will be created and used. Either the
            `userUuid` or `applicationUserId` must be provided.
          example: user-234562290
          type: string
        forwardParameters:
          items:
            type: string
          type: array
        institutionId:
          description: __Mandatory__. The reference to the `Institution` which identifies
            which institution the authorisation request is sent to.
          example: yapily-mock
          type: string
        callback:
          description: __Optional__. The server to redirect the user to after the
            user complete the authorisation at the `Institution`. <br><br>See [Using
            a callback (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-optional)
            for more information.
          example: https://display-parameters.com
          type: string
        redirect:
          $ref: '#/components/schemas/RedirectRequest'
        oneTimeToken:
          description: __Conditional__. Used to receive a `oneTimeToken` rather than
            a `consentToken` at the `callback` for additional security. This can only
            be used when the `callback` is set. <br><br>See [Using a callback with
            an OTT (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-with-an-ott-optional)
            for more information.
          example: false
          type: boolean
        scope:
          description: __Mandatory__. Defines the scope of the pre-authorisation request.
          example: AIS
          type: string
      required:
      - institutionId
      - scope
      type: object
    PriorityCodeEnum:
      enum:
      - NORMAL
      - URGENT
      type: string
    ProfileConsent:
      description: Object returned when creating a User Profile.
      example:
        referenceConsentId: 1e2e5167-8519-4c19-b016-8f2f0c6e38b6
        institutionId: mock-sandbox
        id: eb2ad083-a111-4143-8756-a3a3cef4031c
        userId: 3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d
        status: PENDING
      properties:
        id:
          description: The id of the ProfileConsent
          example: eb2ad083-a111-4143-8756-a3a3cef4031c
          format: uuid
          type: string
        status:
          description: The status, can be PENDING, COMPLETED or ERROR.
          example: PENDING
          type: string
        userId:
          description: The userUuid.
          example: 3ddf5dd0-aa48-4d0f-baa7-fa057e9e911d
          format: uuid
          type: string
        referenceConsentId:
          description: The referenceConsentId.
          example: 1e2e5167-8519-4c19-b016-8f2f0c6e38b6
          format: uuid
          type: string
        institutionId:
          description: The id of the Institution.
          example: mock-sandbox
          type: string
      type: object
    ProprietaryBankTransactionCode:
      example:
        code: code
        issuer: issuer
      properties:
        code:
          type: string
        issuer:
          type: string
      type: object
    RateTypeEnum:
      description: __Mandatory__. The type used to complete the currency exchange.
      enum:
      - ACTUAL
      - AGREED
      - INDICATIVE
      type: string
    RawRequest:
      example:
        headers:
          key: headers
        bodyParameters:
          key: bodyParameters
        method: method
        requestInstant: 2000-01-23T04:56:07.000+00:00
        startedAt: 2000-01-23T04:56:07.000+00:00
        startTime: 2000-01-23T04:56:07.000+00:00
        body: '{}'
        url: url
      properties:
        method:
          type: string
        url:
          type: string
        requestInstant:
          format: date-time
          type: string
        headers:
          additionalProperties:
            type: string
          type: object
        body:
          type: object
        bodyParameters:
          additionalProperties:
            type: string
          type: object
        startTime:
          format: date-time
          type: string
        startedAt:
          deprecated: true
          format: date-time
          type: string
      type: object
    RawResponse:
      example:
        duration: duration
        result: '{}'
        request:
          headers:
            key: headers
          bodyParameters:
            key: bodyParameters
          method: method
          requestInstant: 2000-01-23T04:56:07.000+00:00
          startedAt: 2000-01-23T04:56:07.000+00:00
          startTime: 2000-01-23T04:56:07.000+00:00
          body: '{}'
          url: url
        headers:
          key: headers
        resultCode: 6
      properties:
        request:
          $ref: '#/components/schemas/RawRequest'
        duration:
          format: iso8601
          type: string
        headers:
          additionalProperties:
            type: string
          type: object
        resultCode:
          format: int32
          type: integer
        result:
          type: object
      type: object
    RedirectRequest:
      description: __Optional__. The server to redirect the user to after the user
        complete the authorisation at the `Institution`.
      example:
        url: url
      properties:
        url:
          description: __Mandatory__.Successful redirect after the user complete the
            authorisation at the `Institution`.
          type: string
      required:
      - url
      type: object
    RefundAccount:
      example:
        accountIdentifications:
        - identification: "401016"
          type: SORT_CODE
        - identification: "401016"
          type: SORT_CODE
        name: name
      properties:
        name:
          type: string
        accountIdentifications:
          items:
            $ref: '#/components/schemas/AccountIdentification'
          type: array
          uniqueItems: true
      type: object
    ResponseForwardedData:
      example:
        headers:
          key: headers
        url: url
      properties:
        headers:
          additionalProperties:
            type: string
          type: object
        url:
          type: string
      type: object
    ResponseListMeta:
      example:
        tracingId: tracingId
        pagination:
          next:
            cursor: cursor
            before: 2000-01-23T04:56:07.000+00:00
            limit: 5
            from: 2000-01-23T04:56:07.000+00:00
          self:
            cursor: cursor
            offset: 5
            before: 2000-01-23T04:56:07.000+00:00
            limit: 1
            from: 2000-01-23T04:56:07.000+00:00
          totalCount: 6
        count: 0
      properties:
        tracingId:
          type: string
        count:
          format: int32
          type: integer
        pagination:
          $ref: '#/components/schemas/Pagination'
      type: object
    ResponseMeta:
      example:
        tracingId: tracingId
      properties:
        tracingId:
          type: string
      type: object
    ScaMethod:
      description: __Conditional__. Used to update the authorisation with the sca
        method of the user's choice for the `Institution` that uses the embedded authorisation
        flow. If the user has multiple sca methods configured, the `Institution` will
        allow the user to select from each of these options. <br><br>When the user
        has multiple sca methods for the `Institution`, this is the second step required
        in the embedded authorisation flow to authorise the `Consent`.
      example:
        id: "944"
        type: PUSH_OTP
        description: SecureSIGN
      properties:
        id:
          description: __Mandatory__. The id of the sca method provided by the `Institution`
          example: 258211#OPTICAL
          type: string
        type:
          $ref: '#/components/schemas/Type'
        description:
          description: __Optional__. A description of the sca method if provided by
            the `Institution`
          example: Testkarte Hr. Haubach_1, optisch
          type: string
      required:
      - id
      type: object
    SortEnum:
      description: Valid options for the sort parameter
      enum:
      - date
      - -date
      type: string
    MonitoringStatusEnum:
      enum:
      - Up
      - Down
      - Warning
      - Unknown
      - Expired
      type: string
    StatementReference:
      example:
        value: value
      properties:
        value:
          type: string
      type: object
    Subcategory:
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        label: label
      properties:
        id:
          format: uuid
          type: string
        label:
          type: string
      type: object
    Transaction:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        payerDetails:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "401016"
            type: SORT_CODE
          address:
            country: GB
          name: John Doe
        amount: 0.8008281904610115
        payeeDetails:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "71518920"
            type: ACCOUNT_NUMBER
          address:
            country: GB
          merchantId: "24589303"
          merchantCategoryCode: "5551"
          name: Jane Doe
        bookingDateTime: 2000-01-23T04:56:07.000+00:00
        statementReferences:
        - value: value
        - value: value
        description: description
        merchant:
          merchantCategoryCode: merchantCategoryCode
          merchantName: merchantName
        addressDetails:
          addressLine: addressLine
        grossAmount:
          amount: 10
          currency: GBP
        chargeDetails:
          chargeAmount:
            amount: 10
            currency: GBP
        supplementaryData: '{}'
        currencyExchange:
          targetCurrency: targetCurrency
          exchangeRate: 6.027456183070403
          unitCurrency: unitCurrency
          sourceCurrency: sourceCurrency
        reference: reference
        enrichment:
          cleansedDescription: cleansedDescription
          correctedDate: 2000-01-23T04:56:07.000+00:00
          merchant:
            parentGroup: parentGroup
            merchantName: merchantName
          location: location
          paymentProcessor: paymentProcessor
          categorisation:
            categories:
            - categories
            - categories
            source: source
          transactionHash:
            hash: hash
        balance:
          balanceAmount:
            amount: 10
            currency: GBP
        transactionAmount:
          amount: 10
          currency: GBP
        proprietaryBankTransactionCode:
          code: code
          issuer: issuer
        valueDateTime: 2000-01-23T04:56:07.000+00:00
        currency: currency
        id: id
        transactionInformation:
        - transactionInformation
        - transactionInformation
        isoBankTransactionCode:
          domainCode:
            code: UNKNOWN
            name: UNKNOWN
          familyCode:
            code: UNKNOWN
            name: UNKNOWN
          subFamilyCode:
            code: UNKNOWN
            name: UNKNOWN
      properties:
        id:
          type: string
        date:
          format: date-time
          type: string
        bookingDateTime:
          format: date-time
          type: string
        valueDateTime:
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/TransactionStatusEnum'
        amount:
          type: number
        currency:
          type: string
        transactionAmount:
          $ref: '#/components/schemas/Amount'
        grossAmount:
          $ref: '#/components/schemas/Amount'
        currencyExchange:
          $ref: '#/components/schemas/CurrencyExchange'
        chargeDetails:
          $ref: '#/components/schemas/TransactionChargeDetails'
        reference:
          type: string
        statementReferences:
          items:
            $ref: '#/components/schemas/StatementReference'
          type: array
        description:
          type: string
        transactionInformation:
          items:
            type: string
          type: array
        addressDetails:
          $ref: '#/components/schemas/AddressDetails'
        isoBankTransactionCode:
          $ref: '#/components/schemas/IsoBankTransactionCode'
        proprietaryBankTransactionCode:
          $ref: '#/components/schemas/ProprietaryBankTransactionCode'
        balance:
          $ref: '#/components/schemas/TransactionBalance'
        payeeDetails:
          $ref: '#/components/schemas/Payee'
        payerDetails:
          $ref: '#/components/schemas/Payer'
        merchant:
          $ref: '#/components/schemas/Merchant'
        enrichment:
          $ref: '#/components/schemas/Enrichment'
        supplementaryData:
          type: object
      type: object
    ApiListResponseOfTransaction:
      example:
        tracingId: tracingId
        data:
        - date: 2000-01-23T04:56:07.000+00:00
          payerDetails:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
          amount: 0.8008281904610115
          payeeDetails:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          bookingDateTime: 2000-01-23T04:56:07.000+00:00
          statementReferences:
          - value: value
          - value: value
          description: description
          merchant:
            merchantCategoryCode: merchantCategoryCode
            merchantName: merchantName
          addressDetails:
            addressLine: addressLine
          grossAmount:
            amount: 10
            currency: GBP
          chargeDetails:
            chargeAmount:
              amount: 10
              currency: GBP
          supplementaryData: '{}'
          currencyExchange:
            targetCurrency: targetCurrency
            exchangeRate: 6.027456183070403
            unitCurrency: unitCurrency
            sourceCurrency: sourceCurrency
          reference: reference
          enrichment:
            cleansedDescription: cleansedDescription
            correctedDate: 2000-01-23T04:56:07.000+00:00
            merchant:
              parentGroup: parentGroup
              merchantName: merchantName
            location: location
            paymentProcessor: paymentProcessor
            categorisation:
              categories:
              - categories
              - categories
              source: source
            transactionHash:
              hash: hash
          balance:
            balanceAmount:
              amount: 10
              currency: GBP
          transactionAmount:
            amount: 10
            currency: GBP
          proprietaryBankTransactionCode:
            code: code
            issuer: issuer
          valueDateTime: 2000-01-23T04:56:07.000+00:00
          currency: currency
          id: id
          transactionInformation:
          - transactionInformation
          - transactionInformation
          isoBankTransactionCode:
            domainCode:
              code: UNKNOWN
              name: UNKNOWN
            familyCode:
              code: UNKNOWN
              name: UNKNOWN
            subFamilyCode:
              code: UNKNOWN
              name: UNKNOWN
        - date: 2000-01-23T04:56:07.000+00:00
          payerDetails:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
          amount: 0.8008281904610115
          payeeDetails:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          bookingDateTime: 2000-01-23T04:56:07.000+00:00
          statementReferences:
          - value: value
          - value: value
          description: description
          merchant:
            merchantCategoryCode: merchantCategoryCode
            merchantName: merchantName
          addressDetails:
            addressLine: addressLine
          grossAmount:
            amount: 10
            currency: GBP
          chargeDetails:
            chargeAmount:
              amount: 10
              currency: GBP
          supplementaryData: '{}'
          currencyExchange:
            targetCurrency: targetCurrency
            exchangeRate: 6.027456183070403
            unitCurrency: unitCurrency
            sourceCurrency: sourceCurrency
          reference: reference
          enrichment:
            cleansedDescription: cleansedDescription
            correctedDate: 2000-01-23T04:56:07.000+00:00
            merchant:
              parentGroup: parentGroup
              merchantName: merchantName
            location: location
            paymentProcessor: paymentProcessor
            categorisation:
              categories:
              - categories
              - categories
              source: source
            transactionHash:
              hash: hash
          balance:
            balanceAmount:
              amount: 10
              currency: GBP
          transactionAmount:
            amount: 10
            currency: GBP
          proprietaryBankTransactionCode:
            code: code
            issuer: issuer
          valueDateTime: 2000-01-23T04:56:07.000+00:00
          currency: currency
          id: id
          transactionInformation:
          - transactionInformation
          - transactionInformation
          isoBankTransactionCode:
            domainCode:
              code: UNKNOWN
              name: UNKNOWN
            familyCode:
              code: UNKNOWN
              name: UNKNOWN
            subFamilyCode:
              code: UNKNOWN
              name: UNKNOWN
        meta:
          tracingId: tracingId
          pagination:
            next:
              cursor: cursor
              before: 2000-01-23T04:56:07.000+00:00
              limit: 5
              from: 2000-01-23T04:56:07.000+00:00
            self:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
            totalCount: 6
          count: 0
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
        paging:
          data:
          - date: 2000-01-23T04:56:07.000+00:00
            payerDetails:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              address:
                country: GB
              name: John Doe
            amount: 0.8008281904610115
            payeeDetails:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "71518920"
                type: ACCOUNT_NUMBER
              address:
                country: GB
              merchantId: "24589303"
              merchantCategoryCode: "5551"
              name: Jane Doe
            bookingDateTime: 2000-01-23T04:56:07.000+00:00
            statementReferences:
            - value: value
            - value: value
            description: description
            merchant:
              merchantCategoryCode: merchantCategoryCode
              merchantName: merchantName
            addressDetails:
              addressLine: addressLine
            grossAmount:
              amount: 10
              currency: GBP
            chargeDetails:
              chargeAmount:
                amount: 10
                currency: GBP
            supplementaryData: '{}'
            currencyExchange:
              targetCurrency: targetCurrency
              exchangeRate: 6.027456183070403
              unitCurrency: unitCurrency
              sourceCurrency: sourceCurrency
            reference: reference
            enrichment:
              cleansedDescription: cleansedDescription
              correctedDate: 2000-01-23T04:56:07.000+00:00
              merchant:
                parentGroup: parentGroup
                merchantName: merchantName
              location: location
              paymentProcessor: paymentProcessor
              categorisation:
                categories:
                - categories
                - categories
                source: source
              transactionHash:
                hash: hash
            balance:
              balanceAmount:
                amount: 10
                currency: GBP
            transactionAmount:
              amount: 10
              currency: GBP
            proprietaryBankTransactionCode:
              code: code
              issuer: issuer
            valueDateTime: 2000-01-23T04:56:07.000+00:00
            currency: currency
            id: id
            transactionInformation:
            - transactionInformation
            - transactionInformation
            isoBankTransactionCode:
              domainCode:
                code: UNKNOWN
                name: UNKNOWN
              familyCode:
                code: UNKNOWN
                name: UNKNOWN
              subFamilyCode:
                code: UNKNOWN
                name: UNKNOWN
          - date: 2000-01-23T04:56:07.000+00:00
            payerDetails:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              address:
                country: GB
              name: John Doe
            amount: 0.8008281904610115
            payeeDetails:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "71518920"
                type: ACCOUNT_NUMBER
              address:
                country: GB
              merchantId: "24589303"
              merchantCategoryCode: "5551"
              name: Jane Doe
            bookingDateTime: 2000-01-23T04:56:07.000+00:00
            statementReferences:
            - value: value
            - value: value
            description: description
            merchant:
              merchantCategoryCode: merchantCategoryCode
              merchantName: merchantName
            addressDetails:
              addressLine: addressLine
            grossAmount:
              amount: 10
              currency: GBP
            chargeDetails:
              chargeAmount:
                amount: 10
                currency: GBP
            supplementaryData: '{}'
            currencyExchange:
              targetCurrency: targetCurrency
              exchangeRate: 6.027456183070403
              unitCurrency: unitCurrency
              sourceCurrency: sourceCurrency
            reference: reference
            enrichment:
              cleansedDescription: cleansedDescription
              correctedDate: 2000-01-23T04:56:07.000+00:00
              merchant:
                parentGroup: parentGroup
                merchantName: merchantName
              location: location
              paymentProcessor: paymentProcessor
              categorisation:
                categories:
                - categories
                - categories
                source: source
              transactionHash:
                hash: hash
            balance:
              balanceAmount:
                amount: 10
                currency: GBP
            transactionAmount:
              amount: 10
              currency: GBP
            proprietaryBankTransactionCode:
              code: code
              issuer: issuer
            valueDateTime: 2000-01-23T04:56:07.000+00:00
            currency: currency
            id: id
            transactionInformation:
            - transactionInformation
            - transactionInformation
            isoBankTransactionCode:
              domainCode:
                code: UNKNOWN
                name: UNKNOWN
              familyCode:
                code: UNKNOWN
                name: UNKNOWN
              subFamilyCode:
                code: UNKNOWN
                name: UNKNOWN
          apiCall: '{}'
          totalCount: 1
          nextCursorHash: nextCursorHash
          nextLink: nextLink
          pagingMap:
            key:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
      properties:
        meta:
          $ref: '#/components/schemas/ResponseListMeta'
        data:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        paging:
          $ref: '#/components/schemas/FilteredClientPayloadListTransaction'
        tracingId:
          type: string
          writeOnly: true
      type: object
    TransactionChargeDetails:
      example:
        chargeAmount:
          amount: 10
          currency: GBP
      properties:
        chargeAmount:
          $ref: '#/components/schemas/Amount'
      type: object
    TransactionHash:
      example:
        hash: hash
      properties:
        hash:
          type: string
      type: object
    TransactionSchedule:
      description: Part of a financial profile for a User.
      example:
        detailedFrequency: Daily
        detailedFrequencyParameter: 1
        frequency: Daily
      properties:
        frequency:
          description: How often the transaction happens.  Can be 'Monthly', 'Twice
            monthly', 'Every two weeks', 'Every four weeks', 'Daily', 'Weekly', 'Every
            weekday', 'Twice daily', 'Twice every weekday'
          example: Daily
          type: string
        detailedFrequency:
          description: When in the cycle the transaction occurs.  Can be 'Daily',
            'Twice daily', 'Twice every weekday', 'Every weekday', 'Weekly on day
            n', 'Every two weeks on day n', 'Monthly on working day before day n of
            month', 'Monthly on last working day of month', 'Twice a month on 15th
            and last working day of month', 'Every four weeks on day n'
          example: Daily
          type: string
        detailedFrequencyParameter:
          description: The n in detailedFrequency where there is one - for week-based
            frequencies, an integer from 0 to 6 where 0 is Monday or for month-based
            frequencies, an integer from 0 to 27 where 0 is the first day of the month
          example: 1
          type: number
    TransactionStatusEnum:
      enum:
      - BOOKED
      - PENDING
      type: string
    TransactionStream:
      description: Part of a financial profile for a User.
      example:
        earliestTransactionDate: 2020-04-24T00:00:00.000+0000
        scheduleConsistencyScore: 0.44
        averageAmount: 19.708
        name: Amazon Marketplace
        transactions:
        - institution: starling
          amount: 21.99
          bookingDateTime: 2020-04-24T00:30:19.951Z
          transactionInformation: Amazon Marketplace
          transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
        - institution: starling
          amount: 21.99
          bookingDateTime: 2020-04-24T00:30:19.951Z
          transactionInformation: Amazon Marketplace
          transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
        transactionSchedule:
          detailedFrequency: Daily
          detailedFrequencyParameter: 1
          frequency: Daily
        nextExpectedTransactionDate: 2019-10-04T00:00:00.000+0000
        amountConsistencyScore: 0.74
        mostRecentTransactionDate: 2019-10-03T00:00:00.000+0000
      properties:
        name:
          description: The name of the TransactionStream
          example: Amazon Marketplace
          type: string
        transactions:
          description: A list of Transactions from the transaction stream.
          items:
            $ref: '#/components/schemas/EnrichedTransaction'
          type: array
        transactionSchedule:
          $ref: '#/components/schemas/TransactionSchedule'
        scheduleConsistencyScore:
          description: The consistency of the transaction.  This is a number between
            0 and 1 with 1 being the most consistent schedule.
          example: 0.44
          type: number
        nextExpectedTransactionDate:
          description: When is the transaction expected to occur next.
          example: 2019-10-04
          format: date
          type: string
        earliestTransactionDate:
          description: When is the first recorded transaction date
          example: 2020-04-24
          format: date
          type: string
        mostRecentTransactionDate:
          description: When is the most recent transaction date
          example: 2019-10-03
          format: date
          type: string
        amountConsistencyScore:
          description: The consistency of the amount of the transaction.  This is
            a number between 0 and 1 with 1 being the most consistent amount.
          example: 0.74
          type: number
        averageAmount:
          description: The average amount of the transaction stream
          example: 19.708
          type: number
    TerminatedTransactionStream:
      description: Terminated transaction stream generated as part of the financial
        profile for a User.
      example:
        earliestTransactionDate: 2020-04-24T00:00:00.000+0000
        scheduleConsistencyScore: 0.44
        missedTransactions: 3
        averageAmount: 19.708
        name: Amazon Marketplace
        transactions:
        - institution: starling
          amount: 21.99
          bookingDateTime: 2020-04-24T00:30:19.951Z
          transactionInformation: Amazon Marketplace
          transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
        - institution: starling
          amount: 21.99
          bookingDateTime: 2020-04-24T00:30:19.951Z
          transactionInformation: Amazon Marketplace
          transactionId: c51e3bee-36fb-4c0a-8441-d6ba2056fe87
        transactionSchedule:
          detailedFrequency: Daily
          detailedFrequencyParameter: 1
          frequency: Daily
        nextExpectedTransactionDate: 2019-10-04T00:00:00.000+0000
        amountConsistencyScore: 0.74
        mostRecentTransactionDate: 2019-10-03T00:00:00.000+0000
      properties:
        name:
          description: The name of the TransactionStream
          example: Amazon Marketplace
          type: string
        transactions:
          description: A list of Transactions from the transaction stream.
          items:
            $ref: '#/components/schemas/EnrichedTransaction'
          type: array
        transactionSchedule:
          $ref: '#/components/schemas/TransactionSchedule'
        scheduleConsistencyScore:
          description: The consistency of the transaction.  This is a number between
            0 and 1 with 1 being the most consistent schedule.
          example: 0.44
          type: number
        nextExpectedTransactionDate:
          description: When is the transaction expected to occur next.
          example: 2019-10-04
          format: date
          type: string
        earliestTransactionDate:
          description: When is the first recorded transaction date
          example: 2020-04-24
          format: date
          type: string
        mostRecentTransactionDate:
          description: When is the most recent transaction date
          example: 2019-10-03
          format: date
          type: string
        amountConsistencyScore:
          description: The consistency of the amount of the transaction.  This is
            a number between 0 and 1 with 1 being the most consistent amount.
          example: 0.74
          type: number
        averageAmount:
          description: The average amount of the transaction stream
          example: 19.708
          type: number
        missedTransactions:
          description: Missed transactions of transaction stream
          example: 3
          format: int32
          type: integer
    Type:
      description: The type of sca method available for the user
      enum:
      - SMS_OTP
      - CHIP_OTP
      - PHOTO_OTP
      - PUSH_OTP
      type: string
    UsageType:
      enum:
      - PERSONAL
      - BUSINESS
      - OTHER
      - UNKNOWN
      type: string
    UserCredentials:
      description: __Conditional__. Used to capture the user's credentials to allow
        them to login to an `Institution` that uses the embedded account authorisation
        flow. <br><br>This is the first step required in the embedded account authorisation
        flow to authorise the `Consent`.
      example:
        password: PISPWD12
        id: "6154057725"
        corporateId: "6345898763"
      properties:
        id:
          description: __Mandatory__. The login id for the user for a particular `Institution`.
          example: "6154057725"
          type: string
        corporateId:
          description: __Conditional__. The corporate login for the user for a particular
            corporate `Institution`.
          example: "6345898763"
          type: string
        password:
          description: __Mandatory__. The password of the user to login to a particular
            `Institution`.
          example: PISPWD12
          type: string
      required:
      - id
      - password
      type: object
    UserDeleteResponse:
      example:
        id: id
        creationDate: 2000-01-23T04:56:07.000+00:00
        userConsents:
        - institutionId: institutionId
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          creationDate: 2000-01-23T04:56:07.000+00:00
          institutionConsentId: institutionConsentId
        - institutionId: institutionId
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          creationDate: 2000-01-23T04:56:07.000+00:00
          institutionConsentId: institutionConsentId
      properties:
        id:
          type: string
        deleteStatus:
          $ref: '#/components/schemas/DeleteStatusEnum'
        creationDate:
          format: date-time
          type: string
        userConsents:
          items:
            $ref: '#/components/schemas/ConsentDeleteResponse'
          type: array
          uniqueItems: true
      type: object
    ApiResponseOfUserDeleteResponse:
      example:
        tracingId: tracingId
        data:
          id: id
          creationDate: 2000-01-23T04:56:07.000+00:00
          userConsents:
          - institutionId: institutionId
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            creationDate: 2000-01-23T04:56:07.000+00:00
            institutionConsentId: institutionConsentId
          - institutionId: institutionId
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            creationDate: 2000-01-23T04:56:07.000+00:00
            institutionConsentId: institutionConsentId
        meta:
          tracingId: tracingId
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/UserDeleteResponse'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    EventSubscriptionRequest:
      example:
        notification:
          type: WEBHOOK
          url: https://httpbin.com/new_endpoint
        eventTypeId: payment.status.completed
      properties:
        eventTypeId:
          description: Unique identifier of the event type (for which notifications
            will be sent)
          example: payment.status.completed
          type: string
        notification:
          $ref: '#/components/schemas/Notification'
      required:
      - eventTypeId
      - notification
      title: Request to create a subscription for notifications
      type: object
    EventSubscriptionResponse:
      example:
        notification:
          type: WEBHOOK
          url: https://httpbin.com/new_endpoint
        eventTypeId: payment.status.completed
        created: 28-07-2021 15:47:03
        applicationId: 2698db90-6635-4f76-b673-5ce8e2aeda0e
      properties:
        eventTypeId:
          description: Unique identifier of the event type (for which notifications
            will be sent)
          example: payment.status.completed
          type: string
        applicationId:
          description: Application related to event subscription.
          example: 2698db90-6635-4f76-b673-5ce8e2aeda0e
          format: uuid
          type: string
        created:
          description: Creation date of event subscription.
          example: 28-07-2021 15:47:03
          type: string
        notification:
          $ref: '#/components/schemas/Notification'
      required:
      - applicationId
      - created
      - eventTypeId
      - notification
      title: Response on successful creation of event subscription
      type: object
    EventSubscriptionDeleteResponse:
      example:
        eventTypeId: payment.status.completed
        created: 2000-01-23T04:56:07.000+00:00
        applicationId: 2698db90-6635-4f76-b673-5ce8e2aeda0e
      properties:
        eventTypeId:
          description: Unique identifier of the event type (for which notifications
            will be sent)
          example: payment.status.completed
          type: string
        applicationId:
          description: Application related to event subscription.
          example: 2698db90-6635-4f76-b673-5ce8e2aeda0e
          format: uuid
          type: string
        created:
          description: Creation datetime of event subscription.
          format: date-time
          type: string
        deleteStatus:
          $ref: '#/components/schemas/DeleteStatusEnum'
      required:
      - applicationId
      - created
      - deleteStatus
      - eventTypeId
      title: Response upon successful unsubscribe on subscription
      type: object
    Notification:
      example:
        type: WEBHOOK
        url: https://httpbin.com/new_endpoint
      properties:
        type:
          description: How the notification will be delivered. This is currently only
            via WEBHOOK.
          example: WEBHOOK
          type: string
        url:
          description: URL to which the notification will be sent
          example: https://httpbin.com/new_endpoint
          type: string
      required:
      - type
      - url
      title: Subscription detail on how and where notifications will be received
      type: object
    ApiResponseOfEventSubscriptionResponse:
      example:
        tracingId: tracingId
        data:
          notification:
            type: WEBHOOK
            url: https://httpbin.com/new_endpoint
          eventTypeId: payment.status.completed
          created: 28-07-2021 15:47:03
          applicationId: 2698db90-6635-4f76-b673-5ce8e2aeda0e
        meta:
          tracingId: tracingId
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/EventSubscriptionResponse'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    ApiListResponseOfEventSubscriptionResponse:
      example:
        tracingId: tracingId
        data:
        - notification:
            type: WEBHOOK
            url: https://httpbin.com/new_endpoint
          eventTypeId: payment.status.completed
          created: 28-07-2021 15:47:03
          applicationId: 2698db90-6635-4f76-b673-5ce8e2aeda0e
        - notification:
            type: WEBHOOK
            url: https://httpbin.com/new_endpoint
          eventTypeId: payment.status.completed
          created: 28-07-2021 15:47:03
          applicationId: 2698db90-6635-4f76-b673-5ce8e2aeda0e
        meta:
          tracingId: tracingId
          pagination:
            next:
              cursor: cursor
              before: 2000-01-23T04:56:07.000+00:00
              limit: 5
              from: 2000-01-23T04:56:07.000+00:00
            self:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
            totalCount: 6
          count: 0
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
        paging:
          data:
          - date: 2000-01-23T04:56:07.000+00:00
            payerDetails:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              address:
                country: GB
              name: John Doe
            amount: 0.8008281904610115
            payeeDetails:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "71518920"
                type: ACCOUNT_NUMBER
              address:
                country: GB
              merchantId: "24589303"
              merchantCategoryCode: "5551"
              name: Jane Doe
            bookingDateTime: 2000-01-23T04:56:07.000+00:00
            statementReferences:
            - value: value
            - value: value
            description: description
            merchant:
              merchantCategoryCode: merchantCategoryCode
              merchantName: merchantName
            addressDetails:
              addressLine: addressLine
            grossAmount:
              amount: 10
              currency: GBP
            chargeDetails:
              chargeAmount:
                amount: 10
                currency: GBP
            supplementaryData: '{}'
            currencyExchange:
              targetCurrency: targetCurrency
              exchangeRate: 6.027456183070403
              unitCurrency: unitCurrency
              sourceCurrency: sourceCurrency
            reference: reference
            enrichment:
              cleansedDescription: cleansedDescription
              correctedDate: 2000-01-23T04:56:07.000+00:00
              merchant:
                parentGroup: parentGroup
                merchantName: merchantName
              location: location
              paymentProcessor: paymentProcessor
              categorisation:
                categories:
                - categories
                - categories
                source: source
              transactionHash:
                hash: hash
            balance:
              balanceAmount:
                amount: 10
                currency: GBP
            transactionAmount:
              amount: 10
              currency: GBP
            proprietaryBankTransactionCode:
              code: code
              issuer: issuer
            valueDateTime: 2000-01-23T04:56:07.000+00:00
            currency: currency
            id: id
            transactionInformation:
            - transactionInformation
            - transactionInformation
            isoBankTransactionCode:
              domainCode:
                code: UNKNOWN
                name: UNKNOWN
              familyCode:
                code: UNKNOWN
                name: UNKNOWN
              subFamilyCode:
                code: UNKNOWN
                name: UNKNOWN
          - date: 2000-01-23T04:56:07.000+00:00
            payerDetails:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              address:
                country: GB
              name: John Doe
            amount: 0.8008281904610115
            payeeDetails:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "71518920"
                type: ACCOUNT_NUMBER
              address:
                country: GB
              merchantId: "24589303"
              merchantCategoryCode: "5551"
              name: Jane Doe
            bookingDateTime: 2000-01-23T04:56:07.000+00:00
            statementReferences:
            - value: value
            - value: value
            description: description
            merchant:
              merchantCategoryCode: merchantCategoryCode
              merchantName: merchantName
            addressDetails:
              addressLine: addressLine
            grossAmount:
              amount: 10
              currency: GBP
            chargeDetails:
              chargeAmount:
                amount: 10
                currency: GBP
            supplementaryData: '{}'
            currencyExchange:
              targetCurrency: targetCurrency
              exchangeRate: 6.027456183070403
              unitCurrency: unitCurrency
              sourceCurrency: sourceCurrency
            reference: reference
            enrichment:
              cleansedDescription: cleansedDescription
              correctedDate: 2000-01-23T04:56:07.000+00:00
              merchant:
                parentGroup: parentGroup
                merchantName: merchantName
              location: location
              paymentProcessor: paymentProcessor
              categorisation:
                categories:
                - categories
                - categories
                source: source
              transactionHash:
                hash: hash
            balance:
              balanceAmount:
                amount: 10
                currency: GBP
            transactionAmount:
              amount: 10
              currency: GBP
            proprietaryBankTransactionCode:
              code: code
              issuer: issuer
            valueDateTime: 2000-01-23T04:56:07.000+00:00
            currency: currency
            id: id
            transactionInformation:
            - transactionInformation
            - transactionInformation
            isoBankTransactionCode:
              domainCode:
                code: UNKNOWN
                name: UNKNOWN
              familyCode:
                code: UNKNOWN
                name: UNKNOWN
              subFamilyCode:
                code: UNKNOWN
                name: UNKNOWN
          apiCall: '{}'
          totalCount: 1
          nextCursorHash: nextCursorHash
          nextLink: nextLink
          pagingMap:
            key:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
      properties:
        meta:
          $ref: '#/components/schemas/ResponseListMeta'
        data:
          items:
            $ref: '#/components/schemas/EventSubscriptionResponse'
          type: array
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        paging:
          $ref: '#/components/schemas/FilteredClientPayloadListTransaction'
        tracingId:
          type: string
          writeOnly: true
      type: object
    ApiResponseOfEventSubscriptionDeleteResponse:
      example:
        tracingId: tracingId
        data:
          eventTypeId: payment.status.completed
          created: 2000-01-23T04:56:07.000+00:00
          applicationId: 2698db90-6635-4f76-b673-5ce8e2aeda0e
        meta:
          tracingId: tracingId
        raw:
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        - duration: duration
          result: '{}'
          request:
            headers:
              key: headers
            bodyParameters:
              key: bodyParameters
            method: method
            requestInstant: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            body: '{}'
            url: url
          headers:
            key: headers
          resultCode: 6
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/EventSubscriptionDeleteResponse'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        raw:
          items:
            $ref: '#/components/schemas/RawResponse'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    VirtualAccount:
      example:
        bankAccount:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "71518920"
            type: ACCOUNT_NUMBER
          payInReference: Ref1249944
          currency: GBP
          bankName: Lloyds Bank
          bankAddress: WE12 ABC
          bankCountry: GB
        balances:
        - balanceAmount:
            amount: 10
            currency: GBP
        - balanceAmount:
            amount: 10
            currency: GBP
        nickname: MyAccount123
        createdDateTime: 2020-04-24T00:30:19.951Z
        currency: GBP
        id: eb2ad083-a111-4143-8756-a3a3cef4031c
        status: ACTIVE
      properties:
        id:
          description: Unique id of the account
          example: eb2ad083-a111-4143-8756-a3a3cef4031c
          type: string
        createdDateTime:
          description: Date and time that the account was created
          example: 2020-04-24T00:30:19.951Z
          format: date-time
          type: string
        status:
          description: The current state of the Account <br> PENDING - Creation of
            the account is in progress <br> ACTIVE - The account is active and in
            use <br> FAILED - An issue occured during account creation <br> SUSPENDED
            - The account has been temporarily suspended by the account provider.
            It cannot currently be used <br> CLOSED - The account has been permanently
            closed and cannot be used
          example: ACTIVE
          type: string
        nickname:
          description: Reference that can be provided in order to help with identification
            of the account
          example: MyAccount123
          type: string
        currency:
          description: Three-letter ISO 4217 currency code
          example: GBP
          type: string
        balances:
          items:
            $ref: '#/components/schemas/VirtualAccountBalance'
          type: array
        bankAccount:
          $ref: '#/components/schemas/VirtualAccountBankAccount'
    VirtualAccountBalance:
      example:
        balanceAmount:
          amount: 10
          currency: GBP
      properties:
        type:
          $ref: '#/components/schemas/VirtualAccountBalanceType'
        balanceAmount:
          $ref: '#/components/schemas/Amount'
      type: object
    VirtualAccountBalanceType:
      enum:
      - INTERIM_AVAILABLE
      - INTERIM_BOOKED
      type: string
    VirtualAccountBankAccount:
      example:
        accountIdentifications:
        - identification: "401016"
          type: SORT_CODE
        - identification: "71518920"
          type: ACCOUNT_NUMBER
        payInReference: Ref1249944
        currency: GBP
        bankName: Lloyds Bank
        bankAddress: WE12 ABC
        bankCountry: GB
      properties:
        currency:
          description: Three-letter ISO 4217 currency code
          example: GBP
          type: string
        bankName:
          example: Lloyds Bank
          type: string
        bankAddress:
          example: WE12 ABC
          type: string
        bankCountry:
          description: Two-letter ISO 3166 country code
          example: GB
          type: string
        accountIdentifications:
          description: The account identifications that identify the Beneficiary bank
            account.
          example:
          - identification: "401016"
            type: SORT_CODE
          - identification: "71518920"
            type: ACCOUNT_NUMBER
          items:
            $ref: '#/components/schemas/AccountIdentification'
          type: array
          uniqueItems: true
        payInReference:
          description: Reference required for paying into the account. When no reference
            is provided, then one is not required to pay into the acount.
          example: Ref1249944
          type: string
      type: object
    VirtualAccountBeneficiaryRequest:
      example:
        address:
          country: GB
          townName: London
          postCode: NE15 PLZ
          addressLine: 12 New Street
        paymentSchemes:
        - paymentSchemes
        - paymentSchemes
        nickname: MyBeneficiary123
        name: Mr Jack Williams
        type: INDIVIDUAL
        birthDate: 2019-10-04T00:00:00.000+0000
        account:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "71518920"
            type: ACCOUNT_NUMBER
          currency: GBP
          bankName: Lloyds Bank
          bankAddress: WE12 ABC
          bankCountry: GB
      properties:
        nickname:
          description: Reference that can be provided in order to help with identification
            of the Beneficiary
          example: MyBeneficiary123
          type: string
        type:
          description: Indicates the type of Beneficiary as either an INDIVIDUAL or
            BUSINESS
          example: INDIVIDUAL
          type: string
        name:
          example: Mr Jack Williams
          type: string
        birthDate:
          example: 2019-10-04
          format: date
          type: string
        paymentSchemes:
          description: Beneficiary payment schemes
          items:
            type: string
          type: array
        address:
          $ref: '#/components/schemas/VirtualAccountBeneficiaryAddress'
        account:
          $ref: '#/components/schemas/VirtualAccountBeneficiaryAccount'
      required:
      - account
      - address
      - name
      - nickname
      - paymentSchemes
      - type
      type: object
    VirtualAccountRequest:
      example:
        nickname: MyAccount123
        currency: GBP
      properties:
        nickname:
          description: Reference that can be provided in order to help with identification
            of the account
          example: MyAccount123
          type: string
        currency:
          description: Three-letter ISO 4217 currency code
          example: GBP
          type: string
      required:
      - currency
      - nickname
      type: object
    VirtualAccountPayment:
      example:
        reference: Invoice 1267765
        paymentScheme: FASTER_PAYMENTS
        amount: ""
        destination:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "71518920"
            type: ACCOUNT_NUMBER
          accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
          type: EXTERNAL
          beneficiaryId: sd6ad034-a111-4143-8756-a3a3cef4045v
        createdDateTime: 2022-04-24T00:30:19.951Z
        id: za2ad0234-a333-5435-8787-a3a3cef4031c
        source:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "71518920"
            type: ACCOUNT_NUMBER
          accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
          type: EXTERNAL
        paymentDate: 2022-10-04T00:00:00.000+0000
        type: PAY_IN
        status: INITIATED
      properties:
        id:
          description: Unique id of the payment
          example: za2ad0234-a333-5435-8787-a3a3cef4031c
          type: string
        createdDateTime:
          description: Date and time that the payment was created
          example: 2022-04-24T00:30:19.951Z
          format: date-time
          type: string
        paymentDate:
          description: Date on which the payment instruction will be executed, that
            may be in the future
          example: 2022-10-04
          format: date
          type: string
        type:
          description: Type of payment. One of PAY_IN, PAY_OUT, RETURN_IN or RETURN_OUT
          example: PAY_IN
          type: string
        paymentScheme:
          description: 'Method of settlement to complete the payment. One of: <br>
            FASTER_PAYMENTS <br> SEPA_CREDIT <br> SEPA_INSTANT <br> SWIFT <br> SWIFT_EXPRESS
            <br> CHAPS <br> IAT <br> WIRE'
          example: FASTER_PAYMENTS
          type: string
        amount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          - description: Amount to be transferred
        reference:
          description: Reference to be associated with the payment. This will be appear
            on the beneficiary's bank statement
          example: Invoice 1267765
          type: string
        status:
          description: The current state of the transaction <br> INITIATED - The transaction
            request is acknowledged and will not undergo validation checks <br> PROCESSING
            - Initial checks succeeded and the transaction request is now being processed
            <br> COMPLETED - The transaction has been successfully processed (terminal
            status) <br> FAILED - An failure occured during transaction processing
            (terminal status)
          example: INITIATED
          type: string
        source:
          $ref: '#/components/schemas/VirtualAccountPaymentSource'
        destination:
          $ref: '#/components/schemas/VirtualAccountPaymentDestination'
      type: object
    VirtualAccountPayInDetails:
      example:
        reference: Invoice 1267765
        paymentScheme: FASTER_PAYMENTS
        amount: ""
        address: 123 Baker Street
        name: Sam Sender
        id: za2ad0234-a333-5435-8787-a3a3cef4031c
        source:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "71518920"
            type: ACCOUNT_NUMBER
          accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
          type: EXTERNAL
      properties:
        id:
          description: Unique id of the payment
          example: za2ad0234-a333-5435-8787-a3a3cef4031c
          type: string
        paymentScheme:
          description: 'Method of settlement to complete the payment. One of: <br>
            FASTER_PAYMENTS <br> SEPA_CREDIT <br> SEPA_INSTANT <br> SWIFT <br> SWIFT_EXPRESS
            <br> CHAPS <br> IAT <br> WIRE'
          example: FASTER_PAYMENTS
          type: string
        amount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          - description: Amount to be transferred
        reference:
          description: Reference associated with the payment and which appears on
            the beneficiary's bank statement
          example: Invoice 1267765
          type: string
        source:
          $ref: '#/components/schemas/VirtualAccountPaymentSource'
        name:
          description: Account source name
          example: Sam Sender
          type: string
        address:
          description: The address of the source bank account
          example: 123 Baker Street
          type: string
      type: object
    VirtualAccountPayOutRequest:
      example:
        reference: Invoice 1267765
        accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
        paymentScheme: FASTER_PAYMENTS
        amount: ""
        paymentDate: 2022-10-04T00:00:00.000+0000
        beneficiaryId: sd6ad034-a111-4143-8756-a3a3cef4045v
      properties:
        accountId:
          description: Unique id of the source / payer account
          example: eb2ad083-a111-4143-8756-a3a3cef4031c
          type: string
        amount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          - description: Amount to be transferred
        reference:
          description: Reference to be associated with the payment. This will be appear
            on the beneficiary's bank statement
          example: Invoice 1267765
          type: string
        beneficiaryId:
          description: Unique id of the beneficiary to whom the payment will be made
          example: sd6ad034-a111-4143-8756-a3a3cef4045v
          type: string
        paymentScheme:
          description: 'Method of settlement to complete the payment. One of: <br>
            FASTER_PAYMENTS <br> SEPA_CREDIT <br> SEPA_INSTANT <br> SWIFT <br> SWIFT_EXPRESS
            <br> CHAPS <br> IAT <br> WIRE'
          example: FASTER_PAYMENTS
          type: string
        paymentDate:
          description: Date on which a payment instruction will be executed, that
            must be in the future
          example: 2022-10-04
          format: date
          type: string
      required:
      - accountId
      - amount
      - beneficiaryId
      - paymentScheme
      - reference
      type: object
    VirtualAccountBeneficiary:
      example:
        address:
          country: GB
          townName: London
          postCode: NE15 PLZ
          addressLine: 12 New Street
        paymentSchemes:
        - paymentSchemes
        - paymentSchemes
        nickname: MyBeneficiary123
        name: Mr Jack Williams
        id: eb2ad083-a111-4143-8756-a3a3cef4031c
        type: INDIVIDUAL
        birthDate: 2019-10-04T00:00:00.000+0000
        account:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "71518920"
            type: ACCOUNT_NUMBER
          currency: GBP
          bankName: Lloyds Bank
          bankAddress: WE12 ABC
          bankCountry: GB
        status: ACTIVE
      properties:
        id:
          description: Unique id of the Beneficiary
          example: eb2ad083-a111-4143-8756-a3a3cef4031c
          type: string
        paymentSchemes:
          description: Beneficiary payment schemes
          items:
            type: string
          type: array
        nickname:
          description: Reference that can be provided in order to help with identification
            of the Beneficiary
          example: MyBeneficiary123
          type: string
        type:
          description: Indicates the type of Beneficiary as either a INDIVIDUAL or
            BUSINESS
          example: INDIVIDUAL
          type: string
        name:
          example: Mr Jack Williams
          type: string
        birthDate:
          example: 2019-10-04
          format: date
          type: string
        address:
          $ref: '#/components/schemas/VirtualAccountBeneficiaryAddress'
        account:
          $ref: '#/components/schemas/VirtualAccountBeneficiaryAccount'
        status:
          description: The current status of the Beneficiary <br> PENDING - Beneficiary
            is awaiting verification <br> ACTIVE - Beneficiary can be used in a Pay
            Out <br> BLOCKED - Beneficiary cannot be used in a Pay Out
          example: ACTIVE
          type: string
      type: object
    VirtualAccountBeneficiaryAddress:
      example:
        country: GB
        townName: London
        postCode: NE15 PLZ
        addressLine: 12 New Street
      properties:
        addressLine:
          example: 12 New Street
          type: string
        townName:
          example: London
          type: string
        postCode:
          example: NE15 PLZ
          type: string
        country:
          description: Two-letter ISO 3166 country code
          example: GB
          type: string
      required:
      - country
      type: object
    VirtualAccountBeneficiaryAccount:
      example:
        accountIdentifications:
        - identification: "401016"
          type: SORT_CODE
        - identification: "71518920"
          type: ACCOUNT_NUMBER
        currency: GBP
        bankName: Lloyds Bank
        bankAddress: WE12 ABC
        bankCountry: GB
      properties:
        currency:
          description: Three-letter ISO 4217 currency code
          example: GBP
          type: string
        bankName:
          example: Lloyds Bank
          type: string
        bankAddress:
          example: WE12 ABC
          type: string
        bankCountry:
          description: Two-letter ISO 3166 country code
          example: GB
          type: string
        accountIdentifications:
          description: The account identifications that identify the Beneficiary bank
            account.
          example:
          - identification: "401016"
            type: SORT_CODE
          - identification: "71518920"
            type: ACCOUNT_NUMBER
          items:
            $ref: '#/components/schemas/AccountIdentification'
          type: array
          uniqueItems: true
      required:
      - accountIdentifications
      - currency
      type: object
    VirtualAccountPaymentSource:
      example:
        accountIdentifications:
        - identification: "401016"
          type: SORT_CODE
        - identification: "71518920"
          type: ACCOUNT_NUMBER
        accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
        type: EXTERNAL
      properties:
        type:
          description: Type of source for a payment. One of ACCOUNT or EXTERNAL
          example: EXTERNAL
          type: string
        accountId:
          description: Only present if type is ACCOUNT. Identifies the Virtual Account
            from which the payment was made
          example: eb2ad083-a111-4143-8756-a3a3cef4031c
          type: string
        accountIdentifications:
          description: Only present if type is EXTERNAL. The account identifications
            that identify an external source
          example:
          - identification: "401016"
            type: SORT_CODE
          - identification: "71518920"
            type: ACCOUNT_NUMBER
          items:
            $ref: '#/components/schemas/AccountIdentification'
          type: array
          uniqueItems: true
      required:
      - type
      type: object
    VirtualAccountPaymentDestination:
      example:
        accountIdentifications:
        - identification: "401016"
          type: SORT_CODE
        - identification: "71518920"
          type: ACCOUNT_NUMBER
        accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
        type: EXTERNAL
        beneficiaryId: sd6ad034-a111-4143-8756-a3a3cef4045v
      properties:
        type:
          description: Type of destination for a payment. One of ACCOUNT, EXTERNAL
            or BENEFICIARY
          example: EXTERNAL
          type: string
        accountId:
          description: Only present if type is ACCOUNT. Identifies the Virtual Account
            to which the payment was made
          example: eb2ad083-a111-4143-8756-a3a3cef4031c
          type: string
        accountIdentifications:
          description: Only present if type is EXTERNAL. The account identifications
            that identify an external destination
          example:
          - identification: "401016"
            type: SORT_CODE
          - identification: "71518920"
            type: ACCOUNT_NUMBER
          items:
            $ref: '#/components/schemas/AccountIdentification'
          type: array
          uniqueItems: true
        beneficiaryId:
          description: Only present if type is BENEFICIARY. Unique id of the beneficiary
          example: sd6ad034-a111-4143-8756-a3a3cef4045v
          type: string
      required:
      - type
      type: object
    VirtualAccountTransferRequest:
      example:
        reference: Ref 86543
        amount: ""
        destination:
          accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
        source:
          accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
      properties:
        amount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          - description: Amount to be transferred
        reference:
          description: Reference to be associated with the transfer. This will be
            appear on the destination's bank statement
          example: Ref 86543
          type: string
        source:
          $ref: '#/components/schemas/VirtualAccountTransferSource'
        destination:
          $ref: '#/components/schemas/VirtualAccountTransferDestination'
      required:
      - amount
      - destination
      - reference
      - source
      type: object
    VirtualAccountTransferSource:
      example:
        accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
      properties:
        accountId:
          description: Identifies the Virtual Account from which the transfer was
            made
          example: eb2ad083-a111-4143-8756-a3a3cef4031c
          type: string
      required:
      - accountId
      type: object
    VirtualAccountTransferDestination:
      example:
        accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
      properties:
        accountId:
          description: Identifies the Virtual Account to which the transfer was made
          example: eb2ad083-a111-4143-8756-a3a3cef4031c
          type: string
      required:
      - accountId
      type: object
    ErrorIssue:
      description: Detailed information regarding the issue that was experienced during
        processing of the request
      properties:
        type:
          description: Category of the issue
          type: string
        code:
          description: Code that uniquely identifies the type of issue
          type: string
        parameter:
          description: Identfies the parameter / property within the request (headers,
            query parameters or body) that the issue relates to. For headers and query
            parameters, it refers to the parameter name. For the body, it refers to
            the JSONPath of the property
          type: string
        message:
          description: Human readable description of the issue that was experienced
          type: string
        institutionError:
          $ref: '#/components/schemas/InstitutionError'
      required:
      - code
      - type
      type: object
    ErrorDetails:
      properties:
        tracingId:
          description: Unique identifier of the request, used by Yapily for support
            purposes
          type: string
        code:
          description: Numeric HTTP status code associated with the error
          format: int32
          type: integer
        status:
          description: Textual description of the HTTP status
          type: string
        supportUrl:
          description: Link to where further information regarding the error can be
            found
          type: string
        source:
          description: Source of the error. This may be YAPILY, the INSTITUTION, or
            the USER
          type: string
        issues:
          description: List of issues relating to the error
          items:
            $ref: '#/components/schemas/ErrorIssue'
          type: array
      required:
      - code
      - status
      - tracingId
      type: object
    ApiResponseOfVirtualAccountBeneficiary:
      example:
        tracingId: tracingId
        data:
          address:
            country: GB
            townName: London
            postCode: NE15 PLZ
            addressLine: 12 New Street
          paymentSchemes:
          - paymentSchemes
          - paymentSchemes
          nickname: MyBeneficiary123
          name: Mr Jack Williams
          id: eb2ad083-a111-4143-8756-a3a3cef4031c
          type: INDIVIDUAL
          birthDate: 2019-10-04T00:00:00.000+0000
          account:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            currency: GBP
            bankName: Lloyds Bank
            bankAddress: WE12 ABC
            bankCountry: GB
          status: ACTIVE
        meta:
          tracingId: tracingId
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/VirtualAccountBeneficiary'
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    ApiListResponseOfVirtualAccountBeneficiary:
      example:
        tracingId: tracingId
        data:
        - address:
            country: GB
            townName: London
            postCode: NE15 PLZ
            addressLine: 12 New Street
          paymentSchemes:
          - paymentSchemes
          - paymentSchemes
          nickname: MyBeneficiary123
          name: Mr Jack Williams
          id: eb2ad083-a111-4143-8756-a3a3cef4031c
          type: INDIVIDUAL
          birthDate: 2019-10-04T00:00:00.000+0000
          account:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            currency: GBP
            bankName: Lloyds Bank
            bankAddress: WE12 ABC
            bankCountry: GB
          status: ACTIVE
        - address:
            country: GB
            townName: London
            postCode: NE15 PLZ
            addressLine: 12 New Street
          paymentSchemes:
          - paymentSchemes
          - paymentSchemes
          nickname: MyBeneficiary123
          name: Mr Jack Williams
          id: eb2ad083-a111-4143-8756-a3a3cef4031c
          type: INDIVIDUAL
          birthDate: 2019-10-04T00:00:00.000+0000
          account:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            currency: GBP
            bankName: Lloyds Bank
            bankAddress: WE12 ABC
            bankCountry: GB
          status: ACTIVE
        meta:
          tracingId: tracingId
          pagination:
            next:
              cursor: cursor
              before: 2000-01-23T04:56:07.000+00:00
              limit: 5
              from: 2000-01-23T04:56:07.000+00:00
            self:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
            totalCount: 6
          count: 0
        links:
          next: next
          last: last
          previous: previous
          self: self
          first: first
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseListMeta'
        links:
          $ref: '#/components/schemas/Links'
        data:
          items:
            $ref: '#/components/schemas/VirtualAccountBeneficiary'
          type: array
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    ApiResponseOfVirtualAccountPayment:
      example:
        tracingId: tracingId
        data:
          reference: Invoice 1267765
          paymentScheme: FASTER_PAYMENTS
          amount: ""
          destination:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
            type: EXTERNAL
            beneficiaryId: sd6ad034-a111-4143-8756-a3a3cef4045v
          createdDateTime: 2022-04-24T00:30:19.951Z
          id: za2ad0234-a333-5435-8787-a3a3cef4031c
          source:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
            type: EXTERNAL
          paymentDate: 2022-10-04T00:00:00.000+0000
          type: PAY_IN
          status: INITIATED
        meta:
          tracingId: tracingId
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/VirtualAccountPayment'
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    ApiResponseOfVirtualAccountPayInDetails:
      example:
        tracingId: tracingId
        data:
          reference: Invoice 1267765
          paymentScheme: FASTER_PAYMENTS
          amount: ""
          address: 123 Baker Street
          name: Sam Sender
          id: za2ad0234-a333-5435-8787-a3a3cef4031c
          source:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
            type: EXTERNAL
        meta:
          tracingId: tracingId
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        links:
          additionalProperties:
            type: string
          type: object
        data:
          $ref: '#/components/schemas/VirtualAccountPayInDetails'
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    ApiListResponseOfVirtualAccount:
      example:
        tracingId: tracingId
        data:
        - bankAccount:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            payInReference: Ref1249944
            currency: GBP
            bankName: Lloyds Bank
            bankAddress: WE12 ABC
            bankCountry: GB
          balances:
          - balanceAmount:
              amount: 10
              currency: GBP
          - balanceAmount:
              amount: 10
              currency: GBP
          nickname: MyAccount123
          createdDateTime: 2020-04-24T00:30:19.951Z
          currency: GBP
          id: eb2ad083-a111-4143-8756-a3a3cef4031c
          status: ACTIVE
        - bankAccount:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            payInReference: Ref1249944
            currency: GBP
            bankName: Lloyds Bank
            bankAddress: WE12 ABC
            bankCountry: GB
          balances:
          - balanceAmount:
              amount: 10
              currency: GBP
          - balanceAmount:
              amount: 10
              currency: GBP
          nickname: MyAccount123
          createdDateTime: 2020-04-24T00:30:19.951Z
          currency: GBP
          id: eb2ad083-a111-4143-8756-a3a3cef4031c
          status: ACTIVE
        meta:
          tracingId: tracingId
          pagination:
            next:
              cursor: cursor
              before: 2000-01-23T04:56:07.000+00:00
              limit: 5
              from: 2000-01-23T04:56:07.000+00:00
            self:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
            totalCount: 6
          count: 0
        links:
          next: next
          last: last
          previous: previous
          self: self
          first: first
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseListMeta'
        links:
          $ref: '#/components/schemas/Links'
        data:
          items:
            $ref: '#/components/schemas/VirtualAccount'
          type: array
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    ApiResponseOfVirtualAccount:
      example:
        tracingId: tracingId
        data:
          bankAccount:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            payInReference: Ref1249944
            currency: GBP
            bankName: Lloyds Bank
            bankAddress: WE12 ABC
            bankCountry: GB
          balances:
          - balanceAmount:
              amount: 10
              currency: GBP
          - balanceAmount:
              amount: 10
              currency: GBP
          nickname: MyAccount123
          createdDateTime: 2020-04-24T00:30:19.951Z
          currency: GBP
          id: eb2ad083-a111-4143-8756-a3a3cef4031c
          status: ACTIVE
        meta:
          tracingId: tracingId
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/VirtualAccount'
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    ApiListResponseOfVirtualAccountPayment:
      example:
        tracingId: tracingId
        data:
        - reference: Invoice 1267765
          paymentScheme: FASTER_PAYMENTS
          amount: ""
          destination:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
            type: EXTERNAL
            beneficiaryId: sd6ad034-a111-4143-8756-a3a3cef4045v
          createdDateTime: 2022-04-24T00:30:19.951Z
          id: za2ad0234-a333-5435-8787-a3a3cef4031c
          source:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
            type: EXTERNAL
          paymentDate: 2022-10-04T00:00:00.000+0000
          type: PAY_IN
          status: INITIATED
        - reference: Invoice 1267765
          paymentScheme: FASTER_PAYMENTS
          amount: ""
          destination:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
            type: EXTERNAL
            beneficiaryId: sd6ad034-a111-4143-8756-a3a3cef4045v
          createdDateTime: 2022-04-24T00:30:19.951Z
          id: za2ad0234-a333-5435-8787-a3a3cef4031c
          source:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            accountId: eb2ad083-a111-4143-8756-a3a3cef4031c
            type: EXTERNAL
          paymentDate: 2022-10-04T00:00:00.000+0000
          type: PAY_IN
          status: INITIATED
        meta:
          tracingId: tracingId
          pagination:
            next:
              cursor: cursor
              before: 2000-01-23T04:56:07.000+00:00
              limit: 5
              from: 2000-01-23T04:56:07.000+00:00
            self:
              cursor: cursor
              offset: 5
              before: 2000-01-23T04:56:07.000+00:00
              limit: 1
              from: 2000-01-23T04:56:07.000+00:00
            totalCount: 6
          count: 0
        links:
          next: next
          last: last
          previous: previous
          self: self
          first: first
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseListMeta'
        links:
          $ref: '#/components/schemas/Links'
        data:
          items:
            $ref: '#/components/schemas/VirtualAccountPayment'
          type: array
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    Links:
      example:
        next: next
        last: last
        previous: previous
        self: self
        first: first
      properties:
        self:
          type: string
        first:
          type: string
        last:
          type: string
        next:
          type: string
        previous:
          type: string
      type: object
    SweepingAuthorisationRequest:
      example:
        redirect:
          url: url
        initiationDetails:
          reference: Own Account Sweeping
          payee:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
        forwardParameters:
        - forwardParameters
        - forwardParameters
        institutionId: yapily-mock
        applicationUserId: applicationUserId
        callback: https://display-parameters.com
        controlParameters:
          periodicLimits:
          - totalMaxAmount: ""
            alignment: alignment
            frequency: frequency
          - totalMaxAmount: ""
            alignment: alignment
            frequency: frequency
          validFrom: 2000-01-23T04:56:07.000+00:00
          psuAuthenticationMethods:
          - psuAuthenticationMethods
          - psuAuthenticationMethods
          maxAmountPerPayment: ""
          validTo: 2000-01-23T04:56:07.000+00:00
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oneTimeToken: false
      properties:
        userId:
          description: This is the Yapily user identifier for the user returned by
            the create user step POST ../users
          format: uuid
          type: string
        applicationUserId:
          description: A client's own user reference. If the client wants to work
            with their own unique references for individual PSUs then they can use
            the applicationUserId property to provide that value. Where Yapily does
            not already have a Yapily userId that matches the supplied applicationUserId,
            then a new Yapily userId is created automatically and linked to the applicationUserId
            value.  Clients can then use either their own applicationUserId or the
            Yapily userId to reference the same user in future calls.
          type: string
        forwardParameters:
          description: Extra parameters the TPP may want to get forwarded in the callback
            request after the PSU redirect.
          items:
            type: string
          type: array
        contextType:
          $ref: '#/components/schemas/PaymentContextType'
        institutionId:
          description: __Mandatory__. The reference to the `Institution` which identifies
            which institution the authorisation request is sent to.
          example: yapily-mock
          type: string
        callback:
          description: __Optional__. The server to redirect the user to after the
            user complete the authorisation at the `Institution`. <br><br>See [Using
            a callback (Optional)](https://docs.yapily.com/knowledge/callback_url/#using-a-callback-optional)
            for more information.
          example: https://display-parameters.com
          type: string
        redirect:
          $ref: '#/components/schemas/RedirectRequest'
        oneTimeToken:
          description: __Conditional__. Used to receive a `oneTimeToken` rather than
            a `consentToken` at the `callback` for additional security. This can only
            be used when the `callback` is set. <br><br>See [Using a callback with
            an OTT (Optional)](https://docs.yapily.com/knowledge/callback_url/#using-a-callback-with-an-ott-optional)
            for more information.
          example: false
          type: boolean
        controlParameters:
          $ref: '#/components/schemas/SweepingControlParameters'
        initiationDetails:
          $ref: '#/components/schemas/InitiationDetails'
      required:
      - controlParameters
      - initiationDetails
      - institutionId
      type: object
    NonSweepingAuthorisationRequest:
      example:
        redirect:
          url: url
        initiationDetails:
          reference: Own Account Sweeping
          payee:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
        forwardParameters:
        - forwardParameters
        - forwardParameters
        institutionId: yapily-mock
        applicationUserId: applicationUserId
        callback: https://display-parameters.com
        controlParameters:
          periodicLimits:
          - maxNumberOfPayments: 0
            totalMaxAmount: ""
            alignment: alignment
            frequency: frequency
          - maxNumberOfPayments: 0
            totalMaxAmount: ""
            alignment: alignment
            frequency: frequency
          maxCumulativeAmount: ""
          validFrom: 2000-01-23T04:56:07.000+00:00
          psuAuthenticationMethods:
          - psuAuthenticationMethods
          - psuAuthenticationMethods
          maxAmountPerPayment: ""
          maxCumulativeNumberOfPayments: 6
          validTo: 2000-01-23T04:56:07.000+00:00
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oneTimeToken: false
      properties:
        userId:
          description: This is the Yapily user identifier for the user returned by
            the create user step POST ../users
          format: uuid
          type: string
        applicationUserId:
          description: A client's own user reference. If the client wants to work
            with their own unique references for individual PSUs then they can use
            the applicationUserId property to provide that value. Where Yapily does
            not already have a Yapily userId that matches the supplied applicationUserId,
            then a new Yapily userId is created automatically and linked to the applicationUserId
            value.  Clients can then use either their own applicationUserId or the
            Yapily userId to reference the same user in future calls.
          type: string
        forwardParameters:
          description: Extra parameters the TPP may want to get forwarded in the callback
            request after the PSU redirect.
          items:
            type: string
          type: array
        contextType:
          $ref: '#/components/schemas/PaymentContextType'
        institutionId:
          description: __Mandatory__. The reference to the `Institution` which identifies
            which institution the authorisation request is sent to.
          example: yapily-mock
          type: string
        callback:
          description: __Optional__. The server to redirect the user to after the
            user complete the authorisation at the `Institution`. <br><br>See [Using
            a callback (Optional)](https://docs.yapily.com/knowledge/callback_url/#using-a-callback-optional)
            for more information.
          example: https://display-parameters.com
          type: string
        redirect:
          $ref: '#/components/schemas/RedirectRequest'
        oneTimeToken:
          description: __Conditional__. Used to receive a `oneTimeToken` rather than
            a `consentToken` at the `callback` for additional security. This can only
            be used when the `callback` is set. <br><br>See [Using a callback with
            an OTT (Optional)](https://docs.yapily.com/knowledge/callback_url/#using-a-callback-with-an-ott-optional)
            for more information.
          example: false
          type: boolean
        controlParameters:
          $ref: '#/components/schemas/NonSweepingControlParameters'
        initiationDetails:
          $ref: '#/components/schemas/InitiationDetails'
      required:
      - controlParameters
      - initiationDetails
      - institutionId
      type: object
    SweepingAuthorisationResponse:
      example:
        initiationDetails:
          reference: Own Account Sweeping
          payee:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
        institutionId: institutionId
        authorizedAt: 2000-01-23T04:56:07.000+00:00
        consentToken: consentToken
        authorisationUrl: authorisationUrl
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        payer:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "401016"
            type: SORT_CODE
          address:
            country: GB
          name: John Doe
        createdAt: 2000-01-23T04:56:07.000+00:00
        qrCodeUrl: qrCodeUrl
        applicationUserId: applicationUserId
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: state
        featureScope:
        - null
        - null
        controlParameters:
          periodicLimits:
          - totalMaxAmount: ""
            alignment: alignment
            frequency: frequency
          - totalMaxAmount: ""
            alignment: alignment
            frequency: frequency
          validFrom: 2000-01-23T04:56:07.000+00:00
          psuAuthenticationMethods:
          - psuAuthenticationMethods
          - psuAuthenticationMethods
          maxAmountPerPayment: ""
          validTo: 2000-01-23T04:56:07.000+00:00
        institutionConsentId: institutionConsentId
      properties:
        id:
          format: uuid
          type: string
        userId:
          description: This is the Yapily user identifier for the user returned by
            the create user step POST ../users
          format: uuid
          type: string
        applicationUserId:
          description: A client's own user reference. If the client wants to work
            with their own unique references for individual PSUs then they can use
            the applicationUserId property to provide that value. Where Yapily does
            not already have a Yapily userId that matches the supplied applicationUserId,
            then a new Yapily userId is created automatically and linked to the applicationUserId
            value.  Clients can then use either their own applicationUserId or the
            Yapily userId to reference the same user in future calls.
          type: string
        institutionId:
          description: The reference to the Institution which identifies which institution
            the authorisation request is sent to.
          type: string
        status:
          $ref: '#/components/schemas/AuthorisationStatus'
        createdAt:
          format: date-time
          type: string
        featureScope:
          description: __Optional__. Used to granularly specify the set of features
            that the user will give their consent for when requesting access to their
            account information. Depending on the `Institution`, this may also populate
            a consent screen which list these scopes before the user authorises.<br><br>This
            endpoint accepts allow all [Financial Data Features](/guides/financial-data/features/#feature-list)
            that the `Institution` supports.To find out which scopes an `Institution`
            supports, check [GET Institution](./#get-institution).
          items:
            $ref: '#/components/schemas/FeatureEnum'
          type: array
          uniqueItems: true
        consentToken:
          description: The `consent-token` containing the user's authorisation to
            make the payment request.
          type: string
        state:
          type: string
        authorizedAt:
          format: date-time
          type: string
        institutionConsentId:
          type: string
        authorisationUrl:
          type: string
        qrCodeUrl:
          type: string
        controlParameters:
          $ref: '#/components/schemas/SweepingControlParameters'
        payer:
          $ref: '#/components/schemas/Payer'
        initiationDetails:
          $ref: '#/components/schemas/InitiationDetails'
      type: object
    NonSweepingAuthorisationResponse:
      example:
        initiationDetails:
          reference: Own Account Sweeping
          payee:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
        institutionId: institutionId
        authorizedAt: 2000-01-23T04:56:07.000+00:00
        consentToken: consentToken
        authorisationUrl: authorisationUrl
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        payer:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "401016"
            type: SORT_CODE
          address:
            country: GB
          name: John Doe
        createdAt: 2000-01-23T04:56:07.000+00:00
        qrCodeUrl: qrCodeUrl
        applicationUserId: applicationUserId
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: state
        featureScope:
        - null
        - null
        controlParameters:
          periodicLimits:
          - maxNumberOfPayments: 0
            totalMaxAmount: ""
            alignment: alignment
            frequency: frequency
          - maxNumberOfPayments: 0
            totalMaxAmount: ""
            alignment: alignment
            frequency: frequency
          maxCumulativeAmount: ""
          validFrom: 2000-01-23T04:56:07.000+00:00
          psuAuthenticationMethods:
          - psuAuthenticationMethods
          - psuAuthenticationMethods
          maxAmountPerPayment: ""
          maxCumulativeNumberOfPayments: 6
          validTo: 2000-01-23T04:56:07.000+00:00
        institutionConsentId: institutionConsentId
      properties:
        id:
          format: uuid
          type: string
        userId:
          description: This is the Yapily user identifier for the user returned by
            the create user step POST ../users
          format: uuid
          type: string
        applicationUserId:
          description: A client's own user reference. If the client wants to work
            with their own unique references for individual PSUs then they can use
            the applicationUserId property to provide that value. Where Yapily does
            not already have a Yapily userId that matches the supplied applicationUserId,
            then a new Yapily userId is created automatically and linked to the applicationUserId
            value.  Clients can then use either their own applicationUserId or the
            Yapily userId to reference the same user in future calls.
          type: string
        institutionId:
          description: The reference to the Institution which identifies which institution
            the authorisation request is sent to.
          type: string
        status:
          $ref: '#/components/schemas/AuthorisationStatus'
        createdAt:
          format: date-time
          type: string
        featureScope:
          description: __Optional__. Used to granularly specify the set of features
            that the user will give their consent for when requesting access to their
            account information. Depending on the `Institution`, this may also populate
            a consent screen which list these scopes before the user authorises.<br><br>This
            endpoint accepts allow all [Financial Data Features](/guides/financial-data/features/#feature-list)
            that the `Institution` supports.To find out which scopes an `Institution`
            supports, check [GET Institution](./#get-institution).
          items:
            $ref: '#/components/schemas/FeatureEnum'
          type: array
          uniqueItems: true
        consentToken:
          description: The `consent-token` containing the user's authorisation to
            make the payment request.
          type: string
        state:
          type: string
        authorizedAt:
          format: date-time
          type: string
        institutionConsentId:
          type: string
        authorisationUrl:
          type: string
        qrCodeUrl:
          type: string
        controlParameters:
          $ref: '#/components/schemas/NonSweepingControlParameters'
        payer:
          $ref: '#/components/schemas/Payer'
        initiationDetails:
          $ref: '#/components/schemas/InitiationDetails'
      type: object
    ApiResponseOfSweepingAuthorisationResponse:
      example:
        tracingId: tracingId
        data:
          initiationDetails:
            reference: Own Account Sweeping
            payee:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "71518920"
                type: ACCOUNT_NUMBER
              address:
                country: GB
              merchantId: "24589303"
              merchantCategoryCode: "5551"
              name: Jane Doe
            payer:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              address:
                country: GB
              name: John Doe
          institutionId: institutionId
          authorizedAt: 2000-01-23T04:56:07.000+00:00
          consentToken: consentToken
          authorisationUrl: authorisationUrl
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
          createdAt: 2000-01-23T04:56:07.000+00:00
          qrCodeUrl: qrCodeUrl
          applicationUserId: applicationUserId
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          featureScope:
          - null
          - null
          controlParameters:
            periodicLimits:
            - totalMaxAmount: ""
              alignment: alignment
              frequency: frequency
            - totalMaxAmount: ""
              alignment: alignment
              frequency: frequency
            validFrom: 2000-01-23T04:56:07.000+00:00
            psuAuthenticationMethods:
            - psuAuthenticationMethods
            - psuAuthenticationMethods
            maxAmountPerPayment: ""
            validTo: 2000-01-23T04:56:07.000+00:00
          institutionConsentId: institutionConsentId
        meta:
          tracingId: tracingId
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/SweepingAuthorisationResponse'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    ApiResponseOfNonSweepingAuthorisationResponse:
      example:
        tracingId: tracingId
        data:
          initiationDetails:
            reference: Own Account Sweeping
            payee:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "71518920"
                type: ACCOUNT_NUMBER
              address:
                country: GB
              merchantId: "24589303"
              merchantCategoryCode: "5551"
              name: Jane Doe
            payer:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              address:
                country: GB
              name: John Doe
          institutionId: institutionId
          authorizedAt: 2000-01-23T04:56:07.000+00:00
          consentToken: consentToken
          authorisationUrl: authorisationUrl
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
          createdAt: 2000-01-23T04:56:07.000+00:00
          qrCodeUrl: qrCodeUrl
          applicationUserId: applicationUserId
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          featureScope:
          - null
          - null
          controlParameters:
            periodicLimits:
            - maxNumberOfPayments: 0
              totalMaxAmount: ""
              alignment: alignment
              frequency: frequency
            - maxNumberOfPayments: 0
              totalMaxAmount: ""
              alignment: alignment
              frequency: frequency
            maxCumulativeAmount: ""
            validFrom: 2000-01-23T04:56:07.000+00:00
            psuAuthenticationMethods:
            - psuAuthenticationMethods
            - psuAuthenticationMethods
            maxAmountPerPayment: ""
            maxCumulativeNumberOfPayments: 6
            validTo: 2000-01-23T04:56:07.000+00:00
          institutionConsentId: institutionConsentId
        meta:
          tracingId: tracingId
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/NonSweepingAuthorisationResponse'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    SweepingControlParameters:
      description: Define the restrictions and limits for payment orders as part of
        Sweeping VRP consent
      example:
        periodicLimits:
        - totalMaxAmount: ""
          alignment: alignment
          frequency: frequency
        - totalMaxAmount: ""
          alignment: alignment
          frequency: frequency
        validFrom: 2000-01-23T04:56:07.000+00:00
        psuAuthenticationMethods:
        - psuAuthenticationMethods
        - psuAuthenticationMethods
        maxAmountPerPayment: ""
        validTo: 2000-01-23T04:56:07.000+00:00
      properties:
        psuAuthenticationMethods:
          description: __Mandatory__. Defines the authentication method(s) allowed
            in payment submission step. Allowed values are [SCA_REQUIRED, SCA_NOT_REQUIRED].
          items:
            type: string
          type: array
        periodicLimits:
          items:
            $ref: '#/components/schemas/SweepingPeriodicLimits'
          type: array
        maxAmountPerPayment:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: __Mandatory__. Max amount that can be submitted per payment.
        validFrom:
          description: __Optional__. Start date when the consent becomes valid.
          format: date-time
          type: string
        validTo:
          description: __Optional__. End date when the consent expires and becomes
            invalid.
          format: date-time
          type: string
      required:
      - maxAmountPerPayment
      - periodicLimits
      - psuAuthenticationMethods
      type: object
    NonSweepingControlParameters:
      description: Define the restrictions and limits for payment orders as part of
        Non-Sweeping VRP consent
      example:
        periodicLimits:
        - maxNumberOfPayments: 0
          totalMaxAmount: ""
          alignment: alignment
          frequency: frequency
        - maxNumberOfPayments: 0
          totalMaxAmount: ""
          alignment: alignment
          frequency: frequency
        maxCumulativeAmount: ""
        validFrom: 2000-01-23T04:56:07.000+00:00
        psuAuthenticationMethods:
        - psuAuthenticationMethods
        - psuAuthenticationMethods
        maxAmountPerPayment: ""
        maxCumulativeNumberOfPayments: 6
        validTo: 2000-01-23T04:56:07.000+00:00
      properties:
        psuAuthenticationMethods:
          description: __Mandatory__. Defines the authentication method(s) allowed
            in payment submission step. Allowed values are [SCA_REQUIRED, SCA_NOT_REQUIRED].
          items:
            type: string
          type: array
        periodicLimits:
          items:
            $ref: '#/components/schemas/NonSweepingPeriodicLimits'
          type: array
        maxAmountPerPayment:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: __Mandatory__. Max amount that can be submitted per payment.
        maxCumulativeAmount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: __Optional__. Max cumulative amount that can be submitted under
            this consent.
        maxCumulativeNumberOfPayments:
          description: __Optional__. Max number of payments that can be submitted
            under this consent.
          format: int32
          type: integer
        validFrom:
          description: __Optional__. Start date when the consent becomes valid.
          format: date-time
          type: string
        validTo:
          description: __Optional__. End date when the consent expires and becomes
            invalid.
          format: date-time
          type: string
      required:
      - maxAmountPerPayment
      - periodicLimits
      - psuAuthenticationMethods
      type: object
    FundsAvailable:
      example:
        fundsAvailable: true
        fundsAvailableAt: 2000-01-23T04:56:07.000+00:00
      properties:
        fundsAvailable:
          description: __Mandatory__. Indicates whether funds are available or not.
          type: boolean
        fundsAvailableAt:
          description: __Mandatory__. Date and Time when the funds availability is
            checked.
          format: date-time
          type: string
      required:
      - fundsAvailable
      - fundsAvailableAt
      type: object
    FundsConfirmationRequest:
      description: The fund confirmation object defining the details of the account
        and funds to be checked under the Variable Recurring Payment consent.
      example:
        reference: Own Account Sweeping
        paymentAmount:
          amount: 10
          currency: GBP
      properties:
        reference:
          description: __Optional__. The payment reference or description. Limited
            to a maximum of 18 characters long.
          example: Own Account Sweeping
          type: string
        paymentAmount:
          $ref: '#/components/schemas/Amount'
      required:
      - paymentAmount
      type: object
    FundsConfirmationResponse:
      example:
        reference: Own Account Sweeping
        fundsAvailable:
          fundsAvailable: true
          fundsAvailableAt: 2000-01-23T04:56:07.000+00:00
        id: id
        paymentAmount:
          amount: 10
          currency: GBP
      properties:
        id:
          type: string
        reference:
          description: The payment reference or description. Limited to a maximum
            of 18 characters long.
          example: Own Account Sweeping
          type: string
        paymentAmount:
          $ref: '#/components/schemas/Amount'
        fundsAvailable:
          $ref: '#/components/schemas/FundsAvailable'
      required:
      - fundsAvailable
      - paymentAmount
      type: object
    ApiResponseOfFundsConfirmationResponse:
      example:
        tracingId: tracingId
        data:
          reference: Own Account Sweeping
          fundsAvailable:
            fundsAvailable: true
            fundsAvailableAt: 2000-01-23T04:56:07.000+00:00
          id: id
          paymentAmount:
            amount: 10
            currency: GBP
        meta:
          tracingId: tracingId
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/FundsConfirmationResponse'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    InitiationDetails:
      description: __Mandatory__. The payment initiation object defining the details
        of the payment under the Variable Recurring Payment consent.
      example:
        reference: Own Account Sweeping
        payee:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "71518920"
            type: ACCOUNT_NUMBER
          address:
            country: GB
          merchantId: "24589303"
          merchantCategoryCode: "5551"
          name: Jane Doe
        payer:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "401016"
            type: SORT_CODE
          address:
            country: GB
          name: John Doe
      properties:
        reference:
          description: __Optional__. The payment reference or description. Limited
            to a maximum of 18 characters long.
          example: Own Account Sweeping
          type: string
        payer:
          $ref: '#/components/schemas/Payer'
        payee:
          $ref: '#/components/schemas/Payee'
      type: object
    SubmissionDetails:
      description: __Mandatory__. The payment submission object defining the details
        of the payment instruction to be executed under the Variable Recurring Payment.
      example:
        reference: Own Account Sweeping
        payee:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "71518920"
            type: ACCOUNT_NUMBER
          address:
            country: GB
          merchantId: "24589303"
          merchantCategoryCode: "5551"
          name: Jane Doe
        paymentAmount:
          amount: 10
          currency: GBP
      properties:
        reference:
          description: __Optional__. The payment reference or description. Limited
            to a maximum of 18 characters long.
          example: Own Account Sweeping
          type: string
        payee:
          $ref: '#/components/schemas/Payee'
        paymentAmount:
          $ref: '#/components/schemas/Amount'
      required:
      - payee
      - paymentAmount
      type: object
    SubmissionRequest:
      description: __Mandatory__. The payment request object defining the details
        of the payment for execution under the Variable Recurring Payment consent.
      example:
        paymentIdempotencyId: 04ab4536gaerfc0e1f93c4f4
        psuAuthenticationMethod: psuAuthenticationMethod
        paymentAmount:
          amount: 10
          currency: GBP
      properties:
        paymentIdempotencyId:
          description: __Mandatory__. A unique identifier that you must provide to
            identify the payment. This can be any alpha-numeric string but is limited
            to a maximum of 35 characters.
          example: 04ab4536gaerfc0e1f93c4f4
          type: string
        psuAuthenticationMethod:
          description: __Mandatory__. Chosen authentication method for submission
            step. Allowed values are [SCA_REQUIRED, SCA_NOT_REQUIRED].
          type: string
        contextType:
          $ref: '#/components/schemas/PaymentContextType'
        paymentAmount:
          $ref: '#/components/schemas/Amount'
      required:
      - paymentAmount
      - paymentIdempotencyId
      - psuAuthenticationMethod
      type: object
    SubmissionResponse:
      example:
        initiationDetails:
          reference: Own Account Sweeping
          payee:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
        paymentIdempotencyId: paymentIdempotencyId
        expectedSettlementTime: 2000-01-23T04:56:07.000+00:00
        statusDetails:
          statusReason: statusReason
          statusReasonDescription: statusReasonDescription
          statusUpdateDate: 2000-01-23T04:56:07.000+00:00
          multiAuthorisationStatus:
            expirationDateTime: 2000-01-23T04:56:07.000+00:00
            numberOfAuthorisationReceived: 6
            numberOfAuthorisationRequired: 0
            lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
            status: status
          isoStatus:
            code: ACCC
            name: AcceptedCreditSettlementCompleted
        submissionDetails:
          reference: Own Account Sweeping
          payee:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "71518920"
              type: ACCOUNT_NUMBER
            address:
              country: GB
            merchantId: "24589303"
            merchantCategoryCode: "5551"
            name: Jane Doe
          paymentAmount:
            amount: 10
            currency: GBP
        id: id
        payer:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "401016"
            type: SORT_CODE
          address:
            country: GB
          name: John Doe
        refundAccount:
          accountIdentifications:
          - identification: "401016"
            type: SORT_CODE
          - identification: "401016"
            type: SORT_CODE
          name: name
        expectedExecutionTime: 2000-01-23T04:56:07.000+00:00
        institutionConsentId: institutionConsentId
      properties:
        id:
          type: string
        paymentIdempotencyId:
          type: string
        institutionConsentId:
          type: string
        status:
          $ref: '#/components/schemas/PaymentStatus'
        statusDetails:
          $ref: '#/components/schemas/PaymentStatusDetails'
        initiationDetails:
          $ref: '#/components/schemas/InitiationDetails'
        submissionDetails:
          $ref: '#/components/schemas/SubmissionDetails'
        payer:
          $ref: '#/components/schemas/Payer'
        refundAccount:
          $ref: '#/components/schemas/RefundAccount'
        expectedExecutionTime:
          format: date-time
          type: string
        expectedSettlementTime:
          format: date-time
          type: string
      required:
      - initiationDetails
      - submissionDetails
      type: object
    ApiResponseOfSubmissionResponse:
      example:
        tracingId: tracingId
        data:
          initiationDetails:
            reference: Own Account Sweeping
            payee:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "71518920"
                type: ACCOUNT_NUMBER
              address:
                country: GB
              merchantId: "24589303"
              merchantCategoryCode: "5551"
              name: Jane Doe
            payer:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "401016"
                type: SORT_CODE
              address:
                country: GB
              name: John Doe
          paymentIdempotencyId: paymentIdempotencyId
          expectedSettlementTime: 2000-01-23T04:56:07.000+00:00
          statusDetails:
            statusReason: statusReason
            statusReasonDescription: statusReasonDescription
            statusUpdateDate: 2000-01-23T04:56:07.000+00:00
            multiAuthorisationStatus:
              expirationDateTime: 2000-01-23T04:56:07.000+00:00
              numberOfAuthorisationReceived: 6
              numberOfAuthorisationRequired: 0
              lastUpdatedDateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            isoStatus:
              code: ACCC
              name: AcceptedCreditSettlementCompleted
          submissionDetails:
            reference: Own Account Sweeping
            payee:
              accountIdentifications:
              - identification: "401016"
                type: SORT_CODE
              - identification: "71518920"
                type: ACCOUNT_NUMBER
              address:
                country: GB
              merchantId: "24589303"
              merchantCategoryCode: "5551"
              name: Jane Doe
            paymentAmount:
              amount: 10
              currency: GBP
          id: id
          payer:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            address:
              country: GB
            name: John Doe
          refundAccount:
            accountIdentifications:
            - identification: "401016"
              type: SORT_CODE
            - identification: "401016"
              type: SORT_CODE
            name: name
          expectedExecutionTime: 2000-01-23T04:56:07.000+00:00
          institutionConsentId: institutionConsentId
        meta:
          tracingId: tracingId
        links:
          key: links
        forwardedData:
        - headers:
            key: headers
          url: url
        - headers:
            key: headers
          url: url
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/SubmissionResponse'
        links:
          additionalProperties:
            type: string
          type: object
        forwardedData:
          items:
            $ref: '#/components/schemas/ResponseForwardedData'
          type: array
        tracingId:
          type: string
          writeOnly: true
      type: object
    SweepingPeriodicLimits:
      example:
        totalMaxAmount: ""
        alignment: alignment
        frequency: frequency
      properties:
        totalMaxAmount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: __Mandatory__. Maximum amount that can be specified in all
            payment instructions in a given period under this VRP consent. If the
            Alignment is Calendar, the limit is pro-rated in the first period to the
            remaining number of days.
        frequency:
          description: __Mandatory__. Frequency for which the payment limits are enforced.
            Allowed values are [DAILY, WEEKLY, FORTNIGHTLY, MONTHLY, YEARLY].
          type: string
        alignment:
          description: __Mandatory__. Period alignment for which the payment limits
            are enforced. Allowed values are [CONSENT, CALENDAR]. If CONSENT, then
            period starts on consent creation date. If CALENDAR, then period lines
            up with the frequency e.g. WEEKLY period will begin at start of the week
            in question.
          type: string
      required:
      - alignment
      - frequency
      - totalMaxAmount
      type: object
    NonSweepingPeriodicLimits:
      example:
        maxNumberOfPayments: 0
        totalMaxAmount: ""
        alignment: alignment
        frequency: frequency
      properties:
        totalMaxAmount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: __Mandatory__. Maximum amount that can be specified in all
            payment instructions in a given period under this VRP consent. If the
            Alignment is Calendar, the limit is pro-rated in the first period to the
            remaining number of days.
        frequency:
          description: __Mandatory__. Frequency for which the payment limits are enforced.
            Allowed values are [DAILY, WEEKLY, FORTNIGHTLY, MONTHLY, YEARLY].
          type: string
        alignment:
          description: __Mandatory__. Period alignment for which the payment limits
            are enforced. Allowed values are [CONSENT, CALENDAR]. If CONSENT, then
            period starts on consent creation date. If CALENDAR, then period lines
            up with the frequency e.g. WEEKLY period will begin at start of the week
            in question.
          type: string
        maxNumberOfPayments:
          description: __Optional__. Max number of payments that can be submitted
            under this period.
          format: int32
          type: integer
      required:
      - alignment
      - frequency
      - totalMaxAmount
      type: object
  securitySchemes:
    basicAuth:
      description: 'Requests to the Yapily API are authenticated using an Application''s
        `APPLICATION_KEY` and `APPLICATION_SECRET`. You can view and manage your credentials
        in the [Yapily Dashboard](https://dashboard.yapily.com/).<br><br> An `APPLICATION_KEY`
        and `APPLICATION_SECRET` pair provides connectivity to each `Institution`
        configured in a Yapily `Application`, so it is important to keep these credentials
        secure. Do not share your `APPLICATION_SECRET` in publicly accessible areas
        such as GitHub, client-side code, etc. <br><br> Authentication is performed
        using HTTP Basic Authentication. `Your APPLICATION_KEY` should be sent as
        the basic auth `username` and your `APPLICATION_SECRET` should be sent as
        the basic auth `password`. <br><br> All requests should be made via HTTPS.<aside
        class="info">HTTP Basic Authentication credentials are generated by concatenating
        APPLICATION_KEY and APPLICATION_SECRET separated with a colon and encoded
        with base64 to form the `authToken`, as follows: <br><br>`authToken` = Base64
        encoded(`APPLICATION_KEY` + '':'' + `APPLICATION_SECRET`).</aside>'
      scheme: basic
      type: http

